{"version":3,"sources":["json sync /^/.//.*/.commits/.json$","json sync /^/.//.*/.score/.json$","json sync /^/.//.*/.corpus/.json$","json sync /^/.//.*/.pulls/.json$","components/analyzer/GithruClasses.js","modules/index.js","components/ColorClasses.js","components/CalSimilarity.js","components/analyzer/GitAnalyzer.js","components/TemporalFilter.js","components/TemporalSelector.js","components/ValueSlider.js","components/analyzer/FileStructureAnalyzer.js","components/FileIcicleSummary.js","components/GroupSummary.js","components/BranchSummary.js","components/CommitGraphDrawCluster.js","components/CommitGraph.js","components/CommitGraphClustering.js","components/KeywordTextAreaFilter.js","components/PreferenceSliders.js","components/ManageParameters.js","components/InformationFragments.js","components/container/SidePanelContentUnit.js","components/CaptureTab.js","components/UserIntererests.js","components/LegendIcons.js","components/library/wordCloudGenerator.js","components/DetailCompare.js","components/CompareSummary.js","components/HighlightQuery.js","AppV2.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CommitNode","commit","this","seq","hasNoFirstParentChild","isMainStem","isRoot","implicitBranchNo","isMergeCommit","isMergeTraversed","mergedToNode","undefined","isLeaf","pullRequestHeads","pullRequestMerges","mergeNodes","mergeSquashCommit","mergeNodesContainRelease","mergeNodesContainMajorRelease","cloc","isFiltered","tags","branches","firstParentTreeBranchNames","firstParentTreeLeafNode","branchNumbers","traversed","isMajorRelease","isRelease","releaseTagString","locStat","LOCStat","calCLOCStat","entries","diffStat","files","forEach","entry","value","clocSum","insertions","deletions","insertLocSum","deleteLocSum","console","log","ratio","addStat","targetStat","CommitEdge","childId","parentId","fromNodeId","toNodeId","CommitCluster","node","pref","nodeCount","mergedNodeCount","onPullRequestBranch","nodeList","cluster","length","parent","child","scoresList","score","push","DataTypeByNameMap","authors","authorsLOCStat","keywords","commitTypes","commitTypesLOCStat","clocByFiles","insertionByFiles","deletionByFiles","touchCountByFiles","clocByDirs","insertionByDirs","deletionByDirs","touchCountByDirs","fileToAuthor","commitCount","ClusterData","corpusData","useHeuristicMerge","idxToTfidfSum","keywordsByRank","name","analyze","mockKeywords","idx","isHM","cloneDeep","author","Array","commitType","increaseMapValueByKeyArray","corpus","reduce","prev","cur","c","increaseMapValueByKey","commitNode","subCommit","fileInfos","file","hasOwnProperty","count","dict","tfidf","alreadyIncreased","fileName","f","addValueToMap","fileNameSlice","split","slice","i","prevDir","dir","sort","a","b","key","keyArray","addLOCStatValueToMap","ClusterNode","y","blockList","x","width","height","color","branchType","isNonConfilctMerge","isIncludeFiltered","isExcludeFiltered","ClusterBlock","startCommitSeq","endCommitSeq","containsMergedNodes","containsMergeTraversedNodes","mergedToNodeList","clusterNode","isNonConflictMergedSource","isNonConflictMergedTarget","containsMajorRelease","releaseNodeList","HALinkIds","KeywordFilter","isIncludes","attrName","keyword","CapturedSummaryInfo","clusterNodes","groupingParameters","interestedItemList","CommitAttributeNames","PreferenceList","PreferenceWeights","commitDate","message","BranchTypes","updateClusterOverviewHeight","createAction","updateGlobalCommitsByTemporalFilter","updateCommitsByTemporalFilter","udpateCommitsByTemporalBrush","updateClusterThreshold","updateNonConflictGroupingLevel","updateReleaseBinningLevel","updateSummaryByLOC","updateKeywordFilterList","updatePreferenceWeights","updateHideFiles","updateUseHeuristicMerge","addCapturedSummaryInfoList","removeCapturedSummaryInfoList","updateCurrentCapturedSummaryInfoId","addItemsToCapturedSummaryInfo","removeItemFromCaptureSummaryInfo","addFragmentHistory","clearFragments","registerFavoriteFragment","unregisterFavoriteFragment","updateCapturedSummaryInfoListForCompare","updateHighlightQuery","updateShowMergeLink","updateBranchShowMapByType","updateScrollToRight","summaryPane","initialState","gitAnalyzer","globalCommitSeqSelectionByTemporalFilter","commitSeqSelectionByTemporalFilter","commitSeqSelection","layout","overviewWidth","leftPaneWidth","rightPaneWidth","rightPaneMargin","clusterOverviewSliderWidth","clusterOverviewWidth","temporalAreaHeight","temporalSelectorHeight","orgClusterOverviewHeight","clusterOverviewHeight","inspectionPaneWidth","titlePanelHeight","preferenceWeights","threshold","nonConflictGroupingLevel","releaseBinningLevel","keywordFilterList","branchShowMapByType","EXPLICIT","IMPLICIT","PR_MERGED","PR_CLOSED","PR_OPEN","highlightQuery","showMergeLink","summaryParameters","summaryByLOC","hideFiles","searchResultList","capturedSummaryInfoSeq","capturedSummaryInfoList","currentCapturedSummaryInfoId","favoriteFragments","fragmentHistory","capturedSummaryInfoListForCompare","scrollToRight","handleActions","state","action","payload","type","bool","concat","splice","itemList","info","findIndex","d","newItems","filter","item","fragment","exists","fi","index","BranchColors","MAIN_STEM","colors","getListOfColors","AttributeColors","date","highlight","ScoreColorMap","changeRGBColorByOpacity","opacity","d3","r","g","getScoreTemp","getFileList","getJaccardSimilarity","test","intersectionLen","intersection","unionLen","union","getTfidfCosineSimilarity","aVector","bVector","aKeys","bKeys","innerProduct","shift","aLengthSqr","bLengthSqr","k","Math","sqrt","GitAnalyzer","json","scoreJson","corpusJson","pullJson","defaultThresholdStep","repoName","releasePrefix","mainStemBranchName","keywordMatch","kfList","toLowerCase","val","indexOf","lowLevel","roots","allNodeList","nodesMap","edges","firstParentIdMap","childIdMap","parentIdMap","maxY","headId","branchesMap","gitData","scoreData","pullData","pullMapByNumber","mergeSquashCommitNumber","buildContextAbstractionGraph","isHead","edge","getNodeById","rootNode","startsWith","initStack","n","pop","more","no","from","add","Set","p","number","tfidfList","pull","commits","reverse","addNode","parents","addRoot","head","sha","merge_commit_sha","childCommit","merge","substring","addEdge","tag","join","items","branchedNodesNotHead","branchedNodes","FPTreeNodeListMapByNodeId","branchedNode","firstParentNodesOrderedList","isHeadBranch","bno","rootCount","firstParentChildNodes","getChildNodes","childNode","findMerges","branchNames","branchBackTracking","selection","prefMap","filters","getClusters","isExcludes","inKF","exKF","isFilteredOut","thresholdSet","parentNode","nextFirstParentChildNodeWithSameBranchNo","scores","getScoreByPreferences","sum","sortedThresholdList","container","clusterMapByNodeSeq","prefNormalizedThreshold","targetNodeList","isClusterCut","firstParentChildNode","doneSet","has","sameBranchClusters","lastBranchName","lastNode","prNum","Number","closed","merged","node1","node2","maxCommitHours","verbose","commit1","commit2","dateNormFunc","range","domain","diffHours","min","abs","Date","toFixed","dataName","endsWith","vs","toUpperCase","str","searchStr","replaceStr","findAttrs","resultNodeList","foundMap","attr","values","v","dt","toISOString","parseTime","trimYYYYMMDD","branchClusterNodes","cn","useStyles","makeStyles","theme","formControl","margin","dateField","fontSize","padding","SearchDiv","props","RadioGroup","style","onChange","className","Radio","icon","checkedIcon","Select","release","heandleReleaseChange","native","root","disableRipple","TextField","startRelease","defaultValue","defaultDateValue","event","handleDateChange","target","TemporalFilter","classes","React","useState","fromType","setFromType","toType","setToType","startDate","setStartDate","endDate","setEndDate","headSeq","rootSeq","defaultStartSeq","defaultEndSeq","setStartRelease","endRelease","setEndRelease","dispatch","useDispatch","rootDate","headDate","getSeqByDate","isStart","FormControl","component","alignItems","defaultReleaseValue","Button","size","variant","onClick","fromSeq","toSeq","actions","commitBrush","commitSeqXScale","navRender","globalStartSeq","globalEndSeq","arrowSvgHeight","focusRelativeHeightPosition","globalFilteredNodeList","handleTemporalLabel","xTemporalScale","leftAlignWidth","rightAlignWidth","text","getTemporalLabelByDate","invert","handleCommitLabel","newXScale","rangeRound","newSel","startLabel","endLabel","drawTemporalToCommitArrow","tSel","cSel","drawSelectionArrow","drawCommitToClusterArrow","svg","rangeX","rangeY","selectAll","remove","data","enter","append","navigationSvg","brushHandleSize","bandwidth","histogram","thresholds","ticks","bins","temporalYSizeHalf","yTemporalCommitCountScale","yTemporalCLOCScale","tempArea","datum","x0","y0","y1","curve","alpha","temporalAxisHeight","tempAxis","call","tickSizeOuter","tickSize","releaseTagNodeList","links","on","pageX","pageY","focusHeight","extent","temporalBrush","move","newSelection","startBinIndex","endBinIndex","getCommitBrushSelectionsTriggeredByTemporalBrush","commitSeqScale","round","commitBrushFunc","brushG","select","_groups","__brush","TemporalSelector","useSelector","sel","isInitRef","useRef","useEffect","current","position","zIndex","float","top","PrettoSlider","spacing","button","minWidth","withStyles","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","mark","Slider","ValueSlider","defaultStepValue","stepValue","setStepValue","max","setMax","divId","thresholdList","arrayIndices","aIndex","sv","align","onChangeCommitted","newValue","changeThreshold","marks","step","orientation","valueLabelDisplay","fontWeight","FileStructureAnalyzer","rawData","file2Author","path","fileStructure","analyzePath","compressStructure","updateAuthorInfo","pathDirectories","includes","curDirectory","subPath","childNum","children","childAuthors","FileIcicleSummary","rawModLocData","rawInsertLocData","rawDeleteLocData","rawModNumData","pageNum","partition","format","rectHeight","x1","labelVisible","focus","currentCLocMode","fileAnalyzer","rawModData","widthScale","getFileStructure","curHeight","cell","descendants","each","rect","tspan","t","transition","duration","title","authorArray","rootData","table","tableCell","paddingLeft","paddingRight","paddingTop","paddingBottom","verticalAlign","display","flexDirection","maxHeight","maxWidth","overflowY","bar","div","font","vseparator","hover","textDecoration","hout","fill","Cause","scoreSumMap","scoreMap","prefName","normedScore","scoreSumList","colorIndex","xWidth","background","strokeWidth","overflow","BarChartSummary","ref","dataNameList","clusterData","totalCount","numByDataName","dataList","authorList","commitTypeList","keywordList","processKey","word","replace","xScale","yAuthorScale","paddingInner","paddingOuter","yCommitTypeScale","svgAuthor","svgCommitType","yAuthorAxis","tickSizeInner","yCommitTypeAxis","xAxis","tickFormat","rectsAuthor","nameMargin","getTextValue","xAxisRenderAuthor","yAxisRenderAuthor","rectsCommitType","xAxisRenderCommitType","yAxisRenderCommitType","aMin","aMax","WordCloud","document","getElementById","list","wait","rotateRatio","weightFactor","dimension","MessagePrint","flexWrap","trim","line","li","cursor","onMouseOver","onMouseOut","NodeDetail","isParent","isChild","TableRow","visibility","TableCell","childClass","visible","body","Fragment","wordBreak","NodeDetailList","Table","TableBody","mn","GroupSummary","selectedClusterNode","arrowStartX","arrowWidth","rightWidth","arrowHeight","pointerEvents","x2","y2","stroke","strokeOpacity","fileSummaryWidth","barChartWidth","marginRight","branchSummaryValueRectMouseover","rectMargin","sameValueElements","newColor","clusterId","branchSummaryValueRectMouseleave","orgColor","BranchSummary","branchNo","showAttrs","showAttrValueCount","showAttrRenderFlow","showByCommitCountOnly","selectedClusterNodeIndex","setSelectedClusterNodeIndex","divHeight","itemMinWidth","totalCommitCount","totalCLOC","totalValue","arrowDivWidth","getBranchNamesFromBranchClusterNodes","rectWidths","branchName","drawSummary","branchSummaryClusterRectStr","topDataList","attrList","attrIndex","parentIndex","itemHeight","useLayoutEffect","JSON","stringify","prevIndex","currentX","branchNum","containReleaseList","block","containReleaseNames","arrowDivStartX","startCurrentX","whiteSpace","summaryStartX","overWidth","moverLinks","l","mleaveLinks","link","getClusterNodeColor","getFileSetForCluster","ignoreFiles","highlightKeywordMatchBlock","currentClusterNodeList","searchResultCommitSeqList","matchSvg","blockNode","commitRect","CommitGraph","parse","sliderWidth","minBlockShow","setThresholdList","prevSelectedClusterNodesInfo","selectedClusterNodesInfo","setSelectedClusterNodesInfo","clusteringResult","clusterNodesResult","clusterNodesByBranchNo","groupSvgWidth","totalStat","showGroupSummaryFunc","currentClusterNodes","multi","shiftKey","buildAndDrawClusterNodes","clusterList","clusterNodeList","startPoint","endPoint","xArray","clusterNodeMapByCluster","cIndex","getClusterBranchType","blockStartSeq","blockIndex","prevClusterIndexOfBlock","currentClusterIndexOfBlock","maxBlockIndex","yArray","startX","endX","endXOfClusterTree","pc","buildClusterNodes","defaultBlockOpacity","defaultClusterOpacity","startBlockIndex","endBlockIndex","maxHeightCommitCount","summaryLineHeight","yRange","minHeight","xBandScale","yBandScale","xRectScale","blockHeightScale","clusterOverviewSvg","colorByBranchNo","brushedClusterNodeList","branchNodesListForSwitching","branchNodes","fileSetList","fileSetOrg","fileSetSkip","fileSetTarget","targetClusterNode","blockMapByNode","toBlockListMapByBlock","toBlockList","matchedBlock","toBlock","blocksBox","boxWidth","boxHeight","clusterColor","drawBlockList","linkVertical","linkHorizontal","dataset","source","linkFunc","releaseBlockList","releases","pushDataSet","sx","sy","tx","ty","minNX","maxNX","elem","branchUnderlineWidth","html","drawClusters","searchByKeywords","getOverviewClusters","th","justifyContent","alert","textArea","marginBottom","KeywordTextAreaFilter","includeFilterStr","setIncludeFilterStr","excludeFilterStr","setExcludeFilterStr","parseFilterStr","noValidate","autoComplete","Form","Control","as","rows","placeholder","prefDiv","textAlign","textTransform","buttons","HorizontalSlider","circle","PreferenceSliders","setPref","newPref","ManageParameters","hideFilesStr","setHideFilesStr","Checkbox","checked","fList","SectionTitle","borderBottom","favorites","history","SidePanelContentUnit","show","setShow","CaptureTab","checkedDic","setCheckedDic","capturedInfo","firstCommit","endCommit","getCommitName","disabled","checkedList","cList","AttributeIconSpecs","KeywordCloud","aList","bList","interList","canvas1","canvas2","changeOpacity","bMin","bMax","DetailCompare","aCapturedSummaryInfo","bCapturedSummaryInfo","aName","bName","reducingCapturedSummary","aCapturedSummaryInfoKeywordDict","bCapturedSummaryInfoKeywordDict","aCapturedSummaryInfoKeyword","bCapturedSummaryInfoKeyword","aCloc","bCloc","aCommitNum","bCommitNum","interAuthorList","aAuthorData","bAuthorData","aAuthorArrayDataLoc","bAuthorArrayDataLoc","aAuthorArrayDataCommit","bAuthorArrayDataCommit","aCommitTypeArrayDataLoc","bCommitTypeArrayDataLoc","aCommitTypeArrayDataCommit","bCommitTypeArrayDataCommit","clusterNodesList","capturedSummaryInfo","newCluster","aClusterNode","bClusterNode","aAuthorArrayData","bAuthorArrayData","aCommitTypeArrayData","bCommitTypeArrayData","authorCollector","rawAuthor","authorDataCollector","authorData","commitNum","inIntersection","authorKey","loc","accumulatingLoc","sortByLoc","accumulatingCommitNum","sortByCommitNum","commitTypeCollector","interCommitTypeList","commitTypeDataCollector","commitTypeData","aCommitTypeData","bCommitTypeData","commitTypeKey","interKeywords","aClusterKeywordData","bClusterKeywordData","presentingKeywordNum","aKeywords","bKeywords","generateFileDirData","aData","bData","aArray","bArray","aSum","bSum","aDataTempArray","bDataTempArray","interArray","reducingCapturedSummaryCloc","fileDict","reducingCapturedSummaryCommitNum","aRawModLocFileData","aRawModNumFileData","bRawModLocFileData","bRawModNumFileData","aLocFileArray","bLocFileArray","aNumFileArray","bNumFileArray","aFileArray","bFileArray","num","array","currentLocSum","currentCommitSum","updateXAxis","updateAuthorSvg","updateCommitTypeSvg","updateKeywordSvg","updatefileSvg","updateLegends","aChecked","interChecked","bChecked","isLoc","xAxisScale","aAuthorSvgMolds","aAuthorRects","aAuthorTexts","bAuthorSvgMolds","bAuthorRects","bAuthorTexts","aCommitTypeSvgMolds","aCommitTypeRects","aCommitTypeTexts","bCommitTypeSvgMolds","bCommitTypeRects","bCommitTypeTexts","aFileSvg","bFileSvg","showFileFullPath","window","scrollTo","mainSvg","interPoints","r0","r1","dx","dy","h","rx","ry","calIntersection","vennSvg","updateVennText","xAxisLength","initBarGraphElement","svgMolds","arrayDataLoc","rects","texts","defualtColor","raise","lower","updateBarGraphElement","arrayData","defaultColor","authorX","authorSvg","authorY","authorAxis","aAuthorSvg","bAuthorSvg","aArrayData","bArrayData","commitTypeX","commitTypeSvg","commitTypeY","commitTypeAxis","aCommitTypeSvg","bCommitTypeSvg","keywordsX","keywordsWidth","keywordsY","keywordsAxisScale","generate","rectSingleHeight","keywordsHeight","rectSingleY","initSmallChart","graphX","yourKeywordsSvg","keywordsData","componentSvg","fileFullnameView","reduceLongName","updateSmallChart","fileX","fileWidth","fileSvg","fileY","fileAxisScale","fileAxis","aria-label","label","defaultChecked","CompareSummary","HighlightQuery","query","setQuery","qList","AppV2","gitAnalyzerRef","repo","require","shallowEqual","prevUseHeuristicMergeRef","Icon","ScrollButton","Component","App","exact","process","v2","Boolean","location","hostname","match","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4e43692.chunk.js","sourcesContent":["var map = {\n\t\"./realm-java.commits.json\": 247\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 246;","var map = {\n\t\"./realm-java.score.json\": 249\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 248;","var map = {\n\t\"./realm-java.corpus.json\": 251\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 250;","var map = {\n\t\"./realm-java.pulls.json\": 253\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 252;","import { cloneDeep } from 'lodash';\r\n\r\nexport class ViewNode {\r\n    constructor(node) {\r\n        this.node = node;\r\n        this.x = undefined;\r\n        this.y = undefined;\r\n    }\r\n}\r\n\r\nexport class ViewCluster {\r\n    constructor(cluster) {\r\n        this.cluster = cluster;\r\n    }\r\n}\r\n\r\nexport class CommitNode {\r\n    constructor(id, commit) {\r\n        // default\r\n        this.id = id;\r\n        this.commit = commit;\r\n        this.seq = 0;\r\n\r\n        // toplology\r\n        this.hasNoFirstParentChild = false;\r\n        this.isMainStem = false;\r\n        this.isRoot = false;\r\n        this.implicitBranchNo = -1;\r\n\r\n        // context\r\n        this.isMergeCommit = false;\r\n        this.isMergeTraversed = false;\r\n        this.mergedToNode = undefined;\r\n\r\n        this.isLeaf = false;\r\n        this.pullRequestHeads = [];\r\n        this.pullRequestMerges = [];\r\n\r\n        this.mergeNodes = [];\r\n        this.mergeSquashCommit = undefined;\r\n        this.mergeNodesContainRelease = false;\r\n        this.mergeNodesContainMajorRelease = false;\r\n        this.cloc = 0;\r\n\r\n        // Filtering\r\n        this.isFiltered = true;\r\n\r\n        // \r\n        this.tags = [];\r\n        this.branches = [];\r\n        // this.notFirstParentTreeBranchNames = [];\r\n        // this.notFirstParentTreeLeafNode = undefined;\r\n        this.firstParentTreeBranchNames = [];\r\n        this.firstParentTreeLeafNode = undefined;\r\n        this.branchNumbers = [];\r\n        this.traversed = false;\r\n        \r\n        this.isMajorRelease = false;\r\n        this.isRelease = false;\r\n        this.releaseTagString = undefined;\r\n\r\n        // this.cluster = undefined;\r\n        this.locStat = new LOCStat();\r\n        this.calCLOCStat();\r\n    }\r\n\r\n    calCLOCStat() {\r\n        if (this.commit === undefined) {\r\n            console.log(\"COMMIT UNDEFINED\");\r\n            return;\r\n        }\r\n        \r\n        Object.entries(this.commit.diffStat.files).forEach( entry => {\r\n            // files\r\n            let [fileName, value] = entry;\r\n            this.locStat.clocSum += value.insertions + value.deletions;\r\n            this.locStat.insertLocSum += value.insertions;\r\n            this.locStat.deleteLocSum += value.deletions;\r\n        });\r\n    }\r\n}\r\n\r\nexport class LOCStat {\r\n    constructor(locStat, ratio = 1) {\r\n        this.clocSum = 0;\r\n        this.insertLocSum = 0;\r\n        this.deleteLocSum = 0;\r\n        if (locStat !== undefined) this.addStat(locStat, ratio);\r\n    }\r\n    \r\n    addStat(targetStat, ratio = 1) {\r\n        this.clocSum += targetStat.clocSum * ratio;\r\n        this.insertLocSum += targetStat.insertLocSum * ratio;\r\n        this.deleteLocSum += targetStat.deleteLocSum * ratio;\r\n    }\r\n}\r\n\r\nexport class CommitEdge {\r\n    constructor(childId, parentId) {\r\n        this.fromNodeId = childId;\r\n        this.toNodeId = parentId;\r\n    }\r\n}\r\n\r\nexport class CommitCluster {\r\n    constructor(id, node, pref) {\r\n        this.nodeCount = 0;\r\n        this.mergedNodeCount = 0;\r\n        this.locStat = new LOCStat();\r\n        this.onPullRequestBranch = false;\r\n        \r\n        if (id === undefined) {\r\n            this.id = -1;\r\n            this.nodeList = [];\r\n            return;\r\n        } else {\r\n            this.id = id;\r\n            this.nodeList = [node];\r\n            node.cluster = this;\r\n            this.nodeCount++;\r\n            this.mergedNodeCount += node.mergeNodes.length;\r\n\r\n            this.locStat.addStat(node.locStat);\r\n        }\r\n\r\n        this.parent = undefined;\r\n        this.child = undefined;\r\n\r\n        this.pref = pref;\r\n        this.branches = [];\r\n\r\n        this.scoresList = [];\r\n    }\r\n\r\n    addNode(node, score = 0) {\r\n        node.cluster = this;\r\n        this.nodeList.push(node);\r\n        this.nodeCount++;\r\n        this.mergedNodeCount += node.mergeNodes.length;\r\n        this.locStat.addStat(node.locStat);\r\n\r\n        this.scoresList = [score];\r\n    }\r\n}\r\n\r\nexport class CommitAuthor {\r\n    constructor(name, email, githubId) {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.githubId = githubId;\r\n    }\r\n}\r\n\r\nexport const DataTypeByNameMap = {\r\n    authors:\"author\",\r\n    authorsLOCStat:\"author\",\r\n    keywords:\"keyword\",\r\n    commitTypes:\"commitType\",\r\n    commitTypesLOCStat:\"commitType\",\r\n    clocByFiles:\"file\",\r\n    insertionByFiles:\"file\",\r\n    deletionByFiles:\"file\",\r\n    touchCountByFiles:\"file\",\r\n    clocByDirs:\"dir\",\r\n    insertionByDirs:\"dir\",\r\n    deletionByDirs:\"dir\",\r\n    touchCountByDirs:\"dir\",\r\n    fileToAuthor:\"file\",\r\n    commitCount:\"commit\",\r\n}\r\n\r\n// export const ClusterDataNames = [\r\n//     \"authors\",\r\n//     \"authorsLOCStat\",\r\n//     \"keywords\",\r\n//     \"commitTypes\",\r\n//     \"commitTypesLOCStat\",\r\n\r\n// ];\r\n\r\nexport class ClusterData {\r\n    constructor(cluster, corpusData, useHeuristicMerge) {\r\n        this.cluster = cluster;\r\n        this.corpusData = corpusData;\r\n        // this.fileToAuthor = {};\r\n        this.idxToTfidfSum = {};\r\n        this.keywordsByRank = [];\r\n        // this.idxToTfidfLOCStatSum = {};\r\n\r\n        // init\r\n        Object.keys(DataTypeByNameMap).forEach( (name) => this[name] = {});\r\n        // Object.keys(ClusterLOCDataNamesMap).forEach( (name) => this[name] = {});\r\n        this.analyze(cluster, useHeuristicMerge);\r\n    }\r\n\r\n    analyze(cluster, useHeuristicMerge) {\r\n        // additional infos \r\n        // this.wordTfIdfRank = [];\r\n\r\n        // by jeonhyun97\r\n        let mockKeywords = {};\r\n        // let mockKeywordsLOCStat = {};\r\n\r\n        cluster.nodeList.forEach( (node) => {\r\n            let isHM = useHeuristicMerge && node.mergeSquashCommit !== undefined ? true : false;\r\n            let commit = cloneDeep(useHeuristicMerge && node.mergeSquashCommit !== undefined ? node.mergeSquashCommit : node.commit);\r\n            // temporary\r\n            if (!(commit.author instanceof Array)) commit.author = [commit.author];\r\n            if (!(commit.commitType instanceof Array)) commit.commitType = [commit.commitType];\r\n\r\n            this.increaseMapValueByKeyArray(this.authors, commit.author);\r\n            this.increaseMapValueByKeyArray(this.authorsLOCStat, commit.author, node.locStat);\r\n            this.increaseMapValueByKeyArray(this.commitTypes, commit.commitType);\r\n            this.increaseMapValueByKeyArray(this.commitTypesLOCStat, commit.commitType, node.locStat);\r\n\r\n            let uniqCorpus = Object.keys(commit.corpus.reduce( (prev, cur) => {prev[cur] = true; return prev;}, {}));\r\n            uniqCorpus.forEach( (c) => this.increaseMapValueByKey(mockKeywords, c));\r\n            // uniqCorpus.forEach( (c) => this.addLOCStatValueToMap(mockKeywordsLOCStat, c, node.locStat, ));\r\n            // for (let file in commit.diffStat.files) {\r\n            //     commit.author.forEach(author => {\r\n            //         if (this.fileToAuthor[file] != undefined) {\r\n            //             if(!this.fileToAuthor[file].includes(author) ){\r\n            //                 this.fileToAuthor[file].push(author);\r\n            //             }\r\n            //         }\r\n            //         else {\r\n            //             this.fileToAuthor[file] = [];\r\n            //             this.fileToAuthor[file].push(author);\r\n            //         }\r\n            //     })\r\n            // }\r\n\r\n            if(!isHM) {\r\n                let fileInfos = commit.diffStat.files;\r\n                console.log(\"INFO\", fileInfos);\r\n                for(let file in fileInfos) {\r\n\r\n                    if(this.fileToAuthor[file] == undefined) \r\n                        this.fileToAuthor[file] = {};\r\n                    if(this.fileToAuthor[file] != undefined) {\r\n                        let author = commit.author;\r\n                        if(this.fileToAuthor[file].hasOwnProperty(author)) { // if file already holding author\r\n                            this.fileToAuthor[file][author].insertions += fileInfos[file].insertions;\r\n                            this.fileToAuthor[file][author].deletions += fileInfos[file].deletions;\r\n                            this.fileToAuthor[file][author].count += 1;\r\n                        }\r\n                        else {\r\n                            let dict = {\r\n                                insertions : fileInfos[file].insertions,\r\n                                deletions : fileInfos[file].deletions,\r\n                                count : 1\r\n                            }\r\n                            this.fileToAuthor[file][author] = dict;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                node.mergeNodes.forEach(commitNode => {\r\n                    let subCommit = commitNode.commit;\r\n                    let fileInfos = subCommit.diffStat.files;\r\n                    let author = subCommit.author;\r\n                    for(let file in fileInfos) {\r\n                        if(this.fileToAuthor[file] == undefined) \r\n                            this.fileToAuthor[file] = {};\r\n                        \r\n                        if(this.fileToAuthor[file].hasOwnProperty(author)) {\r\n                            this.fileToAuthor[file][author].insertions += fileInfos[file].insertions;\r\n                            this.fileToAuthor[file][author].deletions += fileInfos[file].deletions;\r\n                            this.fileToAuthor[file][author].count += 1;\r\n                        }\r\n                        else {\r\n                            let dict = {\r\n                                insertions : fileInfos[file].insertions,\r\n                                deletions : fileInfos[file].deletions,\r\n                                count : 1\r\n                            }\r\n                            this.fileToAuthor[file][author] = dict;;\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            for (let idx in commit.tfidf) {\r\n                if (this.idxToTfidfSum[idx] != undefined) {\r\n                    this.idxToTfidfSum[idx] += commit.tfidf[idx];\r\n                    // this.idxToTfidfLOCStatSum[idx].addStat(node.locStat);\r\n                }\r\n                else {\r\n                    this.idxToTfidfSum[idx] = commit.tfidf[idx];\r\n                    // this.idxToTfidfLOCStatSum[idx] = node.locStat;\r\n                }\r\n            }\r\n\r\n            let alreadyIncreased= {};\r\n            Object.keys(commit.diffStat.files).forEach( (fileName) => {\r\n                // files\r\n                let f = commit.diffStat.files;\r\n                let clocSum = f[fileName].insertions + f[fileName].deletions;\r\n                \r\n                if (!(fileName in alreadyIncreased)) {\r\n                    this.increaseMapValueByKey(this.touchCountByFiles, fileName);\r\n                    alreadyIncreased[fileName] = true;\r\n                }\r\n                this.addValueToMap(this.clocByFiles, fileName, clocSum);\r\n                this.addValueToMap(this.insertionByFiles, fileName, f[fileName].insertions);\r\n                this.addValueToMap(this.deletionByFiles, fileName, f[fileName].deletions);\r\n\r\n                // dirs\r\n                let fileNameSlice = fileName.split(\"/\");\r\n                if (fileNameSlice.length > 1) {\r\n                    let dirs = fileNameSlice.slice(0, fileNameSlice.length - 2).reduce( (prev, cur, i) => {\r\n                        let prevDir = (i > 0 ? prev[prev.length - 1] + \"/\" : \"\");\r\n                        prev.push(prevDir + cur);\r\n                        return prev;\r\n                    }, []);\r\n\r\n                    dirs.forEach( dir => {\r\n                        if (!(dir in alreadyIncreased)) {\r\n                            this.increaseMapValueByKey(this.touchCountByDirs, dir);\r\n                            alreadyIncreased[dir] = true;\r\n                        }\r\n                        this.addValueToMap(this.clocByDirs, dir, clocSum);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        for (let idx in this.idxToTfidfSum) {\r\n            this.keywordsByRank.push([this.corpusData[idx], this.idxToTfidfSum[idx]])\r\n        }\r\n        this.keywordsByRank.sort(function (a,b) {\r\n            return b[1] - a[1];\r\n        });\r\n\r\n        \r\n        this.keywordsByRank.forEach(e => {\r\n            this.keywords[e[0]] = [mockKeywords[e[0]], e[1]];\r\n            // this.keywordsLOCStat[e[0]] = [mockKeywordsLOCStat[e[0]], e[1]];\r\n        });\r\n\r\n\r\n        // console.log(this.keywordsByRank)\r\n        // console.log(mockKeywords)\r\n// console.log(\"mockKeywords\", mockKeywords);\r\n        // this.keywords = mockKeywords;\r\n    }\r\n\r\n    increaseMapValueByKey(map, key) {\r\n        this.addValueToMap(map, key, 1);\r\n    }\r\n\r\n    increaseMapValueByKeyArray(map, keyArray, locStat) {\r\n        if (locStat === undefined) {\r\n            keyArray.forEach(key => this.addValueToMap(map, key, 1/keyArray.length));\r\n        } else {\r\n            keyArray.forEach(key => this.addLOCStatValueToMap(map, key, locStat, 1/keyArray.length));\r\n        }\r\n    }\r\n\r\n    addValueToMap(map, key, value) {\r\n        if (map[key] !== undefined) map[key] += value;\r\n        else map[key] = value;\r\n    }\r\n\r\n    addLOCStatValueToMap(map, key, locStat, ratio) {\r\n        if (map[key] !== undefined) map[key].addStat(locStat, ratio);\r\n        else map[key] = new LOCStat(locStat, ratio);\r\n    }\r\n}\r\n\r\nexport class ClusterNode {\r\n    constructor(cluster) {\r\n        this.cluster = cluster;\r\n\r\n        // this.startX = 0;\r\n        // this.endX = 0;\r\n\r\n        this.y = 0;\r\n        this.blockList = [];\r\n\r\n        // box layout\r\n        this.x = 0;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.color = undefined;\r\n        this.branchType = undefined;\r\n        this.isNonConfilctMerge = false;\r\n\r\n        this.isIncludeFiltered = false;\r\n        this.isExcludeFiltered = false;\r\n    }\r\n}\r\n\r\nexport class ClusterBlock {\r\n    constructor(id, nodeList, startCommitSeq, endCommitSeq, x, \r\n            containsMergedNodes = false, containsMergeTraversedNodes = false, mergedToNodeList = [], clusterNode) {\r\n        this.id = id;\r\n        this.startCommitSeq = startCommitSeq;\r\n        this.endCommitSeq = endCommitSeq;\r\n        this.commitCount = nodeList.length;\r\n\r\n        this.x = x;\r\n\r\n        this.nodeList = nodeList;\r\n        this.isNonConflictMergedSource = false;\r\n        this.isNonConflictMergedTarget = false;\r\n        this.containsMergedNodes = containsMergedNodes;\r\n        this.containsMergeTraversedNodes = containsMergeTraversedNodes;\r\n        this.containsMajorRelease = false;\r\n        this.mergedToNodeList = mergedToNodeList;\r\n\r\n        this.releaseTagString = \"\";\r\n        this.releaseNodeList = [];\r\n\r\n        this.clusterNode = clusterNode;\r\n        \r\n        this.HALinkIds = [];\r\n    }\r\n}\r\n\r\nexport class KeywordFilter {\r\n    constructor (isIncludes, attrName, keyword) {\r\n        this.isIncludes = isIncludes;\r\n        this.attrName = attrName;\r\n        this.keyword = keyword;\r\n    }\r\n}\r\n\r\nexport class CapturedSummaryInfo {\r\n    constructor(id, clusterNodes, groupingParameters, interestedItemList = []) {\r\n        this.id = id;\r\n        this.clusterNodes = clusterNodes;\r\n        this.groupingParameters = groupingParameters;\r\n        this.interestedItemList = interestedItemList;        \r\n    }\r\n}\r\n\r\n\r\nexport var CommitAttributeNames = [\r\n    \"id\", \"parents\", \"files\", \"message\", \"author\", \"commitType\", \"corpus\", \"branches\", \"tags\",\r\n];\r\n\r\nexport var PreferenceList = [\r\n    \"author\", \r\n    \"message\",\r\n    \"file\", \r\n    \"commitType\",\r\n    \"commitDate\", \r\n];\r\n\r\nexport var PreferenceWeights = {\r\n    author: 1,\r\n    commitDate: 1,\r\n    file: 1,\r\n    message: 1,\r\n    commitType: 1,\r\n};\r\n\r\nexport var AttrsAbbreviationMap = {\r\n    \"authors\": \"Ⓐ\",\r\n    \"keywords\": \"Ⓜ\", \r\n    \"commitTypes\": \"Ⓣ\",\r\n    \"touchCountByFiles\": \"Ⓕ\", \r\n    \"touchCountByDirs\": \"Ⓓ\",\r\n}\r\n\r\nexport var BranchTypes = {\r\n    MAIN_STEM: \"MAIN_STEM\",\r\n    EXPLICIT: \"EXPLICIT\", \r\n    IMPLICIT: \"IMPLICIT\",\r\n    PR_MERGED: \"PR_MERGED\",\r\n    PR_CLOSED: \"PR_CLOSED\",\r\n    PR_OPEN: \"PR_OPEN\",\r\n}\r\n\r\n// export class CommitClusterContainer {\r\n//     constructor() {\r\n//         this.clusterList = [];\r\n//     }\r\n\r\n//     getClusterCount() {\r\n//         return this.clusterList.length;\r\n//     }\r\n\r\n//     addCluster(cluster) {\r\n//         this.clusterList.push(cluster);\r\n//     }\r\n// }","import { createAction, handleActions } from 'redux-actions';\nimport { PreferenceWeights, CapturedSummaryInfo, BranchTypes } from \"../components/analyzer/GithruClasses\";\n\nconst UPDATE_CLUSTER_OVERVIEW_HEIGHT = \"./UPDATE_CLUSTER_OVERVIEW_HEIGHT\";\nconst UPDATE_GLOBAL_COMMITS_BY_TEMPORAL_FILTER = './UPDATE_GLOBAL_COMMITS_BY_TEMPORAL_FILTER';\nconst UPDATE_COMMITS_BY_TEMPORAL_FILTER = './UPDATE_COMMITS_BY_TEMPORAL_FILTER';\nconst UPDATE_COMMITS_BY_TEMPORAL_BRUSH = \"./UPDATE_COMMITS_BY_TEMPORAL_BRUSH\";\nconst UPDATE_CLUSTER_THRESHOLD = \"./UPDATE_CLUSTER_THRESHOLD\";\n// const UPDATE_SELECTED_CLUSTER_DATA_FOR_SUMMARY = \"./UPDATE_SELECTED_CLUSTER_DATA_FOR_SUMMARY\";\nconst UPDATE_NONCONFLICT_GROUPING_LEVEL = \"./UPDATE_NONCONFLICT_GROUPING_LEVEL\";\nconst UPDATE_RELEASE_BINNING_LEVEL = \"./UPDATE_RELEASE_BINNING_LEVEL\";\nconst UPDATE_SUMMARY_BY_LOC = \"./UPDATE_SUMMARY_BY_LOC\";\nconst UPDATE_KEYWORD_FILTER_LIST = \"./UPDATE_KEYWORD_FILTER_LIST\";\nconst UPDATE_PREFERENCE_WEIGHTS = \"./UPDATE_PREFERENCE_WEIGHTS\";\nconst UPDATE_HIDE_FILES = \"./UPDATE_HIDE_FILES\";\nconst UPDATE_HEURISTIC_MERGE = \"./UPDATE_HEURISTIC_MERGE\";\n\nconst ADD_CAPTURED_SUMMARY_INFO_LIST = \"./ADD_CAPTURED_SUMMARY_INFO_LIST\";\nconst REMOVE_CAPTURED_SUMMARY_INFO_LIST = \"./REMOVE_CAPTURED_SUMMARY_INFO_LIST\";\nconst UPDATE_CURRENT_CAPTURED_SUMMARY_INFO_ID = \"./UPDATE_CURRENT_CAPTURED_SUMMARY_INFO_ID\";\nconst ADD_ITEMS_TO_CAPTURED_SUMMARY_INFO = \"./ADD_ITEMS_TO_CAPTURED_SUMMARY_INFO\";\nconst REMOVE_ITEM_FROM_CAPTURED_SUMMARY_INFO = \"./REMOVE_ITEM_FROM_CAPTURED_SUMMARY_INFO\";\n\nconst ADD_FRAGMENT_HISTORY = \"./ADD_FRAGMENT_HISTORY\";\nconst CLEAR_FRAGMENTS = \"./CLEAR_FRAGMENTS;\"\nconst REGISTER_FAVORITE_FRAGMENT = \"./REGISTER_FAVORITE_FRAGMENT\";\nconst UNREGISTER_FAVORITE_FRAGMENT = \"./UNREGISTER_FAVORITE_FRAGMENT\";\nconst UPDATE_CAPTURED_SUMMARY_INFO_LIST_FOR_COMPARE = \"./UPDATE_CAPTURED_SUMMARY_INFO_LIST_FOR_COMPARE\";\n// const UPDATE_SHOW_PULL_REQUEST_BRANCH = \"./UPDATE_SHOW_PULL_REQUEST_BRANCH\";\nconst UPDATE_HIGHLIGHT_QUERY = \"./UPDATE_HIGHLIGHT_QUERY\";\nconst UPDATE_SHOW_MERGE_LINK = \"./UPDATE_SHOW_MERGE_LINK\";\nconst UPDATE_BRANCH_SHOW_BY_TYPE = \"./UPDATE_BRANCH_SHOW_BY_TYPE\";\nconst UPDATE_SCROLL_TO_RIGHT = \"./UPDATE_SCROLL_TO_RIGHT\";\n\nexport const updateClusterOverviewHeight = createAction(UPDATE_CLUSTER_OVERVIEW_HEIGHT);\nexport const updateGlobalCommitsByTemporalFilter = createAction(UPDATE_GLOBAL_COMMITS_BY_TEMPORAL_FILTER);\nexport const updateCommitsByTemporalFilter = createAction(UPDATE_COMMITS_BY_TEMPORAL_FILTER);\nexport const udpateCommitsByTemporalBrush = createAction(UPDATE_COMMITS_BY_TEMPORAL_BRUSH);\nexport const updateClusterThreshold = createAction(UPDATE_CLUSTER_THRESHOLD);\n// export const updateSelectedClusterDataForSummary = createAction(UPDATE_SELECTED_CLUSTER_DATA_FOR_SUMMARY);\nexport const updateNonConflictGroupingLevel = createAction(UPDATE_NONCONFLICT_GROUPING_LEVEL);\nexport const updateReleaseBinningLevel = createAction(UPDATE_RELEASE_BINNING_LEVEL);\nexport const updateSummaryByLOC = createAction(UPDATE_SUMMARY_BY_LOC);\nexport const updateKeywordFilterList = createAction(UPDATE_KEYWORD_FILTER_LIST);\nexport const updatePreferenceWeights = createAction(UPDATE_PREFERENCE_WEIGHTS);\nexport const updateHideFiles = createAction(UPDATE_HIDE_FILES);\nexport const updateUseHeuristicMerge = createAction(UPDATE_HEURISTIC_MERGE);\n// export const updateShowPullRequestBranch = createAction(UPDATE_SHOW_PULL_REQUEST_BRANCH);\n\nexport const addCapturedSummaryInfoList = createAction(ADD_CAPTURED_SUMMARY_INFO_LIST);\nexport const removeCapturedSummaryInfoList = createAction(REMOVE_CAPTURED_SUMMARY_INFO_LIST);\nexport const updateCurrentCapturedSummaryInfoId = createAction(UPDATE_CURRENT_CAPTURED_SUMMARY_INFO_ID);\nexport const addItemsToCapturedSummaryInfo = createAction(ADD_ITEMS_TO_CAPTURED_SUMMARY_INFO);\nexport const removeItemFromCaptureSummaryInfo = createAction(REMOVE_ITEM_FROM_CAPTURED_SUMMARY_INFO);\n\nexport const addFragmentHistory = createAction(ADD_FRAGMENT_HISTORY);\nexport const clearFragments = createAction(CLEAR_FRAGMENTS);\nexport const registerFavoriteFragment = createAction(REGISTER_FAVORITE_FRAGMENT);\nexport const unregisterFavoriteFragment = createAction(UNREGISTER_FAVORITE_FRAGMENT);\n\nexport const updateCapturedSummaryInfoListForCompare = createAction(UPDATE_CAPTURED_SUMMARY_INFO_LIST_FOR_COMPARE);\nexport const updateHighlightQuery = createAction(UPDATE_HIGHLIGHT_QUERY);\nexport const updateShowMergeLink = createAction(UPDATE_SHOW_MERGE_LINK);\nexport const updateBranchShowMapByType = createAction(UPDATE_BRANCH_SHOW_BY_TYPE);\n\nexport const updateScrollToRight = createAction(UPDATE_SCROLL_TO_RIGHT);\n\nconst summaryPane = { \n    width: 1850,\n    left: 250,\n    right: 200,\n    rightPaneMargin: 10,\n};\nconst inspectionPane = {\n    width: 1600,\n};\nconst initBranchShowMapByType = {\n    // MASTER: true,\n    EXPLICIT: true,\n    IMPLICIT: true,\n    PR_MERGED: false,\n    PR_CLOSED: false,\n    PR_OPEN: true,\n}\n\nconst initialState = {\n    gitAnalyzer: undefined,\n    globalCommitSeqSelectionByTemporalFilter: undefined,\n    commitSeqSelectionByTemporalFilter: undefined,\n    commitSeqSelection: undefined,\n\n    layout: {\n        overviewWidth: summaryPane.width - summaryPane.left - summaryPane.right,\n        leftPaneWidth: summaryPane.left,\n        rightPaneWidth: summaryPane.right - summaryPane.rightPaneMargin * 2,\n        rightPaneMargin: summaryPane.rightPaneMargin,\n\n        width: summaryPane.width - summaryPane.left - summaryPane.right,\n\n        clusterOverviewSliderWidth: 34,\n        clusterOverviewWidth: summaryPane.width - summaryPane.left - summaryPane.right,\n        \n        temporalAreaHeight: 80,\n        temporalSelectorHeight: 150,\n        \n        orgClusterOverviewHeight: 400,\n        clusterOverviewHeight: 400,\n        inspectionPaneWidth: inspectionPane.width,\n\n        titlePanelHeight: 43,\n    },\n    \n    groupingParameters: {\n        preferenceWeights: PreferenceWeights,\n        threshold: 0,\n        nonConflictGroupingLevel: 0,\n        releaseBinningLevel: 1,\n        keywordFilterList: [],\n        useHeuristicMerge: true,\n        // showPullRequestBranch: false,\n        branchShowMapByType: initBranchShowMapByType,\n    },\n\n    highlightQuery: [],\n\n    showMergeLink: false,\n\n    summaryParameters: {\n        summaryByLOC: false,\n        hideFiles: [\"CHANGELOG.md\", \"version.txt\"],  \n    },\n    searchResultList: [],\n    // selectedClusters: new Set(),\n    // selectedClusterDataForSummary: undefined,\n\n    capturedSummaryInfoSeq: 0,\n    capturedSummaryInfoList: [],\n    currentCapturedSummaryInfoId: undefined,\n\n    favoriteFragments: [],\n    fragmentHistory: [],\n\n    capturedSummaryInfoListForCompare: undefined,\n\n    scrollToRight: false,\n};\n\nexport default handleActions({\n    [updateClusterOverviewHeight]: (state, action) => {\n        return {\n            ...state,\n            layout: {\n                ...state.layout,\n                clusterOverviewHeight: action.payload,\n            },\n        }\n    },\n    [updateGlobalCommitsByTemporalFilter]: (state, action) => {\n        return {\n            ...state,\n            globalCommitSeqSelectionByTemporalFilter: action.payload,\n        }\n    },\n    [updateCommitsByTemporalFilter]: (state, action) => {\n        return {\n            ...state,\n            commitSeqSelectionByTemporalFilter: action.payload\n        };\n    },\n    [udpateCommitsByTemporalBrush]: (state, action) => {\n        return {\n            ...state,\n            commitSeqSelection: action.payload,\n        }\n    },\n    \n    // GROUP PARAMETERS\n    [updateClusterThreshold]: (state, action) => {\n        return {\n            ...state,\n            groupingParameters: {\n                ...state.groupingParameters,\n                threshold: action.payload,\n            }\n        }\n    },\n    // [updateSelectedClusterDataForSummary]: (state, action) => {\n    //     return {\n    //         ...state,\n    //         selectedClusterDataForSummary: action.payload,\n    //     }\n    // },\n    [UPDATE_NONCONFLICT_GROUPING_LEVEL]: (state, action) => {\n        return {\n            ...state,\n            groupingParameters: {\n                ...state.groupingParameters,\n                nonConflictGroupingLevel: action.payload,\n            }\n        }\n    },\n    [UPDATE_RELEASE_BINNING_LEVEL]: (state, action) => {\n        return {\n            ...state,\n            groupingParameters: {\n                ...state.groupingParameters,\n                releaseBinningLevel: action.payload,\n            }\n        }\n    },\n    [UPDATE_KEYWORD_FILTER_LIST]: (state, action) => {\n        return {\n            ...state,\n            groupingParameters: {\n                ...state.groupingParameters,\n                keywordFilterList: action.payload,\n            }\n        }\n    },\n    [updateUseHeuristicMerge]: (state, action) => {\n        return {\n            ...state,\n            groupingParameters: {\n                ...state.groupingParameters,\n                useHeuristicMerge: action.payload,\n            }\n        }\n    },\n    [UPDATE_PREFERENCE_WEIGHTS]: (state, action) => {\n        return {\n            ...state,\n            groupingParameters: {\n                ...state.groupingParameters,\n                preferenceWeights: action.payload,\n            }\n        }\n    },\n    // [UPDATE_SHOW_PULL_REQUEST_BRANCH]: (state, action) => {\n    //     return {\n    //         ...state,\n    //         groupingParameters: {\n    //             ...state.groupingParameters,\n    //             showPullRequestBranch: action.payload,\n    //         }\n    //     }\n    // },\n    [updateBranchShowMapByType]: (state, action) => {\n        let [type, bool] = action.payload;\n        \n        let map = {...state.groupingParameters.branchShowMapByType};\n        map[type] = bool;\n\n        return {\n            ...state,\n            groupingParameters: {\n                ...state.groupingParameters,\n                branchShowMapByType: map,\n            }\n        }\n    },\n\n    // SUMMARY PARAMS\n    [UPDATE_SUMMARY_BY_LOC]: (state, action) => {\n        return {\n            ...state,\n            summaryParameters: {\n                ...state.summaryParameters,\n                summaryByLOC: action.payload,\n            }\n        }\n    },\n    [updateHideFiles]: (state, action) => {\n        return {\n            ...state,\n            summaryParameters: {\n                ...state.summaryParameters,\n                hideFiles: action.payload,\n            }\n        }\n    },\n    \n\n    // CAPTURED SUMMARY INFO\n    [addCapturedSummaryInfoList]: (state, action) => {\n        return {\n            ...state,\n            capturedSummaryInfoSeq: state.capturedSummaryInfoSeq+1,\n            capturedSummaryInfoList: \n                state.capturedSummaryInfoList.concat(\n                    new CapturedSummaryInfo(state.capturedSummaryInfoSeq, action.payload[0], {...action.payload[1]}))\n        }\n    },\n    [removeCapturedSummaryInfoList]: (state, action) => {\n        state.capturedSummaryInfoList.splice(+action.payload, 1);\n\n        return {\n            ...state,\n            capturedSummaryInfoList: state.capturedSummaryInfoList,\n        }\n    },\n    [updateCurrentCapturedSummaryInfoId]: (state, action) => {\n        return {\n            ...state,\n            currentCapturedSummaryInfoId: action.payload,\n        }\n    },\n    [addItemsToCapturedSummaryInfo]: (state, action) => {\n        if (state.currentCapturedSummaryInfoId === undefined) return state;\n\n        const itemList = action.payload;\n        let info = state.capturedSummaryInfoList[state.capturedSummaryInfoList.findIndex(d => d.id===state.currentCapturedSummaryInfoId)];\n// console.log(\"NONONO\", itemList, info );\n        let newItems = itemList.filter( item => info.interestedItemList.findIndex(d => d[0] === item[0] && d[1] === item[1]) < 0);\n        info.interestedItemList = info.interestedItemList.concat(newItems);\n\n// console.log(\"addItemsToCapturedSummaryInfo\", newItems, state.capturedSummaryInfoList, info.interestedItemList);\n        return {\n            ...state,\n            capturedSummaryInfoList: [].concat(state.capturedSummaryInfoList)\n        }\n    },\n    [removeItemFromCaptureSummaryInfo]: (state, action) => {\n        let info = state.capturedSummaryInfoList[state.capturedSummaryInfoList.findIndex(d => d.id===state.currentCapturedSummaryInfoId)];\n        // let info = state.capturedSummaryInfoList[state.currentCapturedSummaryInfoId];\n        info.interestedItemList.splice(+action.payload, 1);\n        info.interestedItemList = [].concat(info.interestedItemList);\n\n// console.log(\"addItemsToCapturedSummaryInfo\", newItems, state.capturedSummaryInfoList, info.interestedItemList);\n        return {\n            ...state,\n            capturedSummaryInfoList: [].concat(state.capturedSummaryInfoList)\n        }\n    },\n    \n    \n    // FRAGMENTS\n    [addFragmentHistory]: (state, action) => {\n        return {\n            ...state,\n            fragmentHistory: state.fragmentHistory.concat([action.payload]),\n        }\n    },\n    [clearFragments]: (state, action) => {\n        return {\n            ...state,\n            fragmentHistory: [],\n            favoriteFragments: [],\n        }\n    },\n    [registerFavoriteFragment]: (state, action) => {\n// console.log(\"registerFavoriteFragment\", state.favoriteFragments, action.payload)\n        let fragment = action.payload;\n        let exists = false;\n        for (let fi = 0; fi < state.favoriteFragments.length; fi++) {\n            let d = state.favoriteFragments[fi];\n            if (d[0] === fragment[0] && d[1] === fragment[1]) {\n                exists = true;\n                break;\n            }\n        }\n        if (!exists) {\n            return {\n                ...state,\n                favoriteFragments: state.favoriteFragments.concat([fragment]),\n            }\n        } else return state;\n    },\n    [unregisterFavoriteFragment]: (state, action) => {\n        let fragment = action.payload;\n        let index = state.favoriteFragments.findIndex(d => d[0] === fragment[0] && d[1] === fragment[1]);\n        state.favoriteFragments.splice(index, 1);\n// console.log(\"unregisterFavoriteFragment\", fragment, index)\n        if (index >= 0) {\n            return {\n                ...state,\n                favoriteFragments: [].concat(state.favoriteFragments),\n            }\n        } else return state;\n    },\n    [updateCapturedSummaryInfoListForCompare]: (state, action) => {\n        return {\n            ...state,\n            capturedSummaryInfoListForCompare: action.payload,\n        }\n    },\n    [UPDATE_HIGHLIGHT_QUERY]: (state, action) => {\n        return {\n            ...state,\n            highlightQuery: action.payload,\n        }\n    },\n    [UPDATE_SHOW_MERGE_LINK]: (state, action) => {\n        return {\n            ...state,\n            showMergeLink: action.payload,\n        }\n    },\n    [UPDATE_SCROLL_TO_RIGHT]: (state, action) => {\n        return {\n            ...state,\n            scrollToRight: action.payload,\n        }\n    },\n}, initialState);","import * as colors from \"@material-ui/core/colors\";\nimport * as d3 from \"d3\";\n\nexport const BranchColors = {\n    MAIN_STEM: colors.blue[900],\n    EXPLICIT: colors.cyan[700],\n    IMPLICIT: colors.grey[400],\n    PR_MERGED: colors.purple[600],\n    PR_CLOSED: colors.pink[600],\n    PR_OPEN: colors.green[300],\n};\n\n// const colorRange = d3.range(5, 0, -1);\n\nconst getListOfColors = (color) => {\n    // let colorRange = [7, 4, 2, 1].map(d => d * 100);\n    let colorRange = [\"A700\", 600, 400, 200, 100];\n    return colorRange.map(d => color[d]);\n}\n\nexport const AttributeColors = {\n    author: getListOfColors(colors.brown),\n    keyword: getListOfColors(colors.teal),\n    commitType: getListOfColors(colors.lightGreen),\n    file: getListOfColors(colors.amber),\n    dir: getListOfColors(colors.orange),\n    // commit: [\n    //     \"#90a4ae\",\n    //     \"#b0bec5\",\n    //     \"#cfd8dc\",\n    //     \"#eceff1\",\n    //     \"#78909c\",\n    // ],\n    commit: [600, 400, 300, 200, 100].map(d => colors.blueGrey[d]),\n    date: [\n        \"#90a4ae\",\n        \"#b0bec5\",\n        \"#cfd8dc\",\n        \"#eceff1\",\n        \"#78909c\",\n    ],\n    highlight: getListOfColors(colors.red),\n}\n\nconst ScoreColorMap = {\n    author: AttributeColors.author,\n    commitDate: AttributeColors.date,\n    file: AttributeColors.file,\n    message: AttributeColors.keyword,\n    commitType: AttributeColors.commitType,\n}\n\nexport function getScoreColor(name, colorIndex) {\n    return ScoreColorMap[name][colorIndex];\n}\n\nexport function changeRGBColorByOpacity(color, opacity) {\n    let c = d3.rgb(color);\n    return \"rgb(\" + c.r + \",\" + c.g + \",\" + c.b + \", \" + opacity + \")\";\n}\n\n// export const ClusterColorMap = {\n//     master: colors.blue[900],\n//     // stale: blueGrey[400],\n//     implicit: colors.grey[400],\n//     staleAndImplicit: colors.blueGrey[600],\n// }\n\nexport const Tableau10 = [\"#4e79a7\",\"#f28e2c\",\"#e15759\",\"#76b7b2\",\"#59a14f\",\"#edc949\",\"#af7aa1\",\"#ff9da7\",\"#9c755f\",\"#bab0ab\"];\n","import { intersection, union } from \"lodash\";\n\nexport function getScoreTemp(a, b, verbose = false) {\n    function getFileList(commit) {\n        if (\"diffStat\" in commit && \"files\" in commit.diffStat) {\n            return Object.keys(commit[\"diffStat\"][\"files\"]);\n        } else {\n            return [];\n        }\n    }\n\n    function getJaccardSimilarity(a, b, test) {\n        a = (!(a instanceof Array) ? [a] : a);\n        b = (!(b instanceof Array) ? [b] : b);\n\n        let intersectionLen = intersection(a, b).length;\n        let unionLen = union(a, b).length;\n\n        return (unionLen !== 0 ? (intersectionLen / unionLen) : 1);\n    }\n\n    function getTfidfCosineSimilarity(a,b) {\n        let aVector = a;\n        let bVector = b;\n\n        if (\"-1\" in aVector || \"-1\" in bVector) return 0;\n        \n        let aKeys = Object.keys(aVector);\n        let bKeys = Object.keys(bVector);\n\n        let innerProduct = 0;\n        while (aKeys.length > 0 && bKeys.length > 0) {\n            if      (aKeys[0] < bKeys[0]) { aKeys.shift(); }\n            else if (aKeys[0] > bKeys[0]) { bKeys.shift(); }\n            else {\n                innerProduct = innerProduct + aVector[aKeys[0]] * bVector[bKeys[0]];\n                aKeys.shift();\n                bKeys.shift();\n            }\n        }\n\n        let aLengthSqr = 0, bLengthSqr = 0;\n\n        Object.keys(aVector).forEach(k => {\n            aLengthSqr += aVector[k] * aVector[k];\n        })\n\n        Object.keys(bVector).forEach(k => {\n            bLengthSqr += bVector[k] * bVector[k];\n        })\n\n        let cosine_sim = innerProduct / Math.sqrt(aLengthSqr * bLengthSqr);\n        return cosine_sim;\n    }\n\n    let score = {}\n\n    // committer\n    // score[\"committer\"] = (a.author === b.author ? 1 : 0);\n    score[\"author\"] = getJaccardSimilarity(a.author, b.author, \"author\");\n    // commit type\n    score[\"commitType\"] = getJaccardSimilarity(a.commitType, b.commitType, \"type\");\n    // file\n    score[\"file\"] = getJaccardSimilarity(getFileList(a), getFileList(b), \"file\");\n    // message\n    score[\"message\"] = getTfidfCosineSimilarity(a[\"tfidf\"], b[\"tfidf\"]);\n\n    return score;\n}","import { CommitCluster, CommitNode, CommitEdge, CommitAttributeNames, PreferenceWeights, BranchTypes } from \"./GithruClasses\";\r\nimport * as d3 from 'd3';\r\nimport { BranchColors, Tableau10, AttributeColors } from \"../ColorClasses\";\r\nimport { getScoreTemp } from \"../CalSimilarity\";\r\n\r\nexport class GitAnalyzer {\r\n    \"use strict\";\r\n\r\n    constructor(json, scoreJson, corpusJson, pullJson, defaultThresholdStep, repoName, releasePrefix = \"\", mainStemBranchName) {\r\n        this.lowLevel = 2;\r\n\r\n        this.roots = [];\r\n        this.allNodeList = [];\r\n        this.nodesMap = {};\r\n        this.edges = [];\r\n\r\n        this.firstParentIdMap = {};\r\n        this.childIdMap = {};\r\n        this.parentIdMap = {};\r\n\r\n        this.maxY = 0;\r\n        this.headId = \"\";\r\n\r\n        this.branchesMap = {};\r\n\r\n        this.gitData = json;\r\n        this.scoreData = scoreJson;\r\n        this.corpusData = corpusJson;\r\n        this.pullData = (pullJson === undefined ? [] : pullJson);\r\n        this.pullMapByNumber = {};\r\n        this.defaultThresholdStep = defaultThresholdStep;\r\n        this.pref = PreferenceWeights;\r\n\r\n        this.repoName = repoName;\r\n        this.mainStemBranchName = mainStemBranchName;\r\n        // this.pullMap = {};\r\n        this.releasePrefix = (releasePrefix === undefined ? \"\" : releasePrefix);\r\nconsole.log(\"URL Params:\", this.repoName, this.mainStemBranchName);\r\n        this.mergeSquashCommitNumber = -1;\r\n\r\n        this.buildContextAbstractionGraph();\r\n    }\r\n\r\n    getNodeById(id) {\r\n        return this.nodesMap[id];\r\n    }\r\n\r\n    addRoot(node) {\r\n        node.isRoot = true;\r\n        this.roots.push(node);\r\n    }\r\n\r\n    addNode(node) {\r\n        // if (node.commit.isHead === true) {\r\n        if ( (this.mainStemBranchName === undefined && node.commit.isHead === true)\r\n                || (this.mainStemBranchName !== undefined \r\n                    && node.commit.branches !== undefined\r\n                    && node.commit.branches.filter( b => b === \"origin/\" + this.mainStemBranchName).length > 0)) {\r\n            this.headId = node.id;\r\n            node.isMainStem = true;\r\n            node.implicitBranchNo = 0;\r\n            // node.y = 1;\r\nconsole.log(\"meet head\", node);\r\n        }\r\n        this.nodesMap[node.id] = node;\r\n    }\r\n\r\n    // 중복처리 해야함.\r\n    addEdge(edge) {\r\n        if (edge.fromNodeId in this.parentIdMap) this.parentIdMap[edge.fromNodeId].push(edge.toNodeId);\r\n        else this.parentIdMap[edge.fromNodeId] = [edge.toNodeId];\r\n\r\n        if (edge.toNodeId in this.childIdMap) this.childIdMap[edge.toNodeId].push(edge.fromNodeId);\r\n        else this.childIdMap[edge.toNodeId] = [edge.fromNodeId];\r\n\r\n        this.edges.push(edge);\r\n    }\r\n\r\n    getChildNodes(node) {\r\n        if (this.childIdMap[node.id] === undefined) return [];\r\n        return this.childIdMap[node.id].map( (id) => this.getNodeById(id));\r\n    }\r\n\r\n    getParentNodes(node) {\r\n        if (this.parentIdMap[node.id] === undefined) return [];\r\n        return this.parentIdMap[node.id].map( (id) => this.getNodeById(id));\r\n    }\r\n    \r\n    ////////////////////////////////////////////////\r\n    // RECURSIVELY FIND MERGE NODES\r\n    findMerges(rootNode) {\r\nif (rootNode.id.startsWith(\"461cc1\")) console.log(\"rootNode\", rootNode)\r\n        let initStack = rootNode.commit[\"parents\"]\r\n            .filter( (d, i) => i !== 0 ) // not first Parent\r\n            .map( id => this.getNodeById(id))\r\n            .filter( node => (!node.isMainStem && !node.isMergeTraversed && (node.implicitBranchNo !== rootNode.implicitBranchNo) ));\r\n        \r\n        while (initStack.length > 0) {\r\n            let n = initStack.pop();\r\n            n.isMergeTraversed = true;\r\n            n.mergedToNode = rootNode;\r\n            rootNode.mergeNodes.push(n);\r\n            if (n.isRelease) rootNode.mergeNodesContainRelease = true;\r\n            if (n.isMajorRelease) rootNode.mergeNodesContainMajorRelease = true;\r\n\r\n            let more = n.commit[\"parents\"]\r\n                .map( id => this.getNodeById(id) )\r\n                .filter( node => (!node.isMainStem && !node.isMergeTraversed && node.implicitBranchNo !== rootNode.implicitBranchNo) );\r\n                // .filter( node => (!node.isMainStem && !node.isMergeTraversed) );// &&node.implicitBranchNo !== rootNode.implicitBranchNo) );\r\n            if (more.length > 0) initStack = initStack.concat(more);\r\n// if (n.id.startsWith(\"1848f7d\")) console.log(\"root \", rootNode, initStack.map(d=>d))\r\n// if (n.id.startsWith(\"461cc1\")) console.log(\"got it\", n, n.commit[\"parents\"].map( id => this.getNodeById(id) )[0].isMergeTraversed, initStack.map(d=>d));\r\n        }\r\n\r\n        // MAKE SQUASH COMMIT FOR HEURISTIC MERGE\r\n        if (rootNode.mergeNodes.length === 0) return;\r\n\r\n        rootNode.mergeSquashCommit = {\r\n            no: this.mergeSquashCommitNumber--,\r\n            author: Array.from([rootNode, ...rootNode.mergeNodes].reduce( (prev, n) => prev.add(n.commit.author), new Set())),\r\n            commitType: Array.from([rootNode, ...rootNode.mergeNodes].reduce( (prev, n) => prev.add(n.commit.commitType), new Set())),\r\n            diffStat: rootNode.commit.diffStat,\r\n            corpus: Array.from(\r\n                [rootNode, ...rootNode.mergeNodes].reduce( (prev, n) => {\r\n                    [\r\n                        ...n.commit.corpus, \r\n                        ...n.pullRequestHeads.reduce( (p, number) => p.concat(this.pullMapByNumber[number].corpus), [])\r\n                    ].forEach(corpus => prev.add(corpus));\r\n                    \r\n                    return prev;\r\n                }, new Set())),\r\n            tfidf: [rootNode, ...rootNode.mergeNodes].reduce( (prev, n) => {\r\n                    let tfidfList = Object.entries(n.commit.tfidf);\r\n                    n.pullRequestHeads.map(number => this.pullMapByNumber[number]).forEach(pull => {\r\n                        tfidfList = tfidfList.concat(Object.entries(pull.tfidf));\r\n                    });\r\n                    tfidfList.forEach( entry => {\r\n                        let [key, value] = entry;\r\n                        if (key in prev) prev[key] += value;\r\n                        else prev[key] = value;\r\n                    });\r\n                    return prev;\r\n                }, {}),\r\n            date:rootNode.commit.date,\r\n        }\r\n    }\r\n\r\n    buildContextAbstractionGraph() {\r\n        let commits = this.gitData.reverse();\r\n        \r\n        // nodes\r\n        commits.forEach( (commit, index) => {\r\n            let node = new CommitNode(commit.id, commit);\r\n            this.addNode(node);\r\n            this.allNodeList.push(node);\r\n\r\n            node.seq = index;\r\n\r\n            // root check.\r\n            if (commit.parents.length === 0) {\r\n                this.addRoot(node);\r\n            } else {\r\n                this.firstParentIdMap[node.id] = commit.parents[0];\r\n            }\r\n\r\n            // merge commit check\r\n            if (\"merge\" in commit && commit[\"merge\"].length > 0) {\r\n                node.isMergeCommit = true;\r\n            }\r\n\r\n            node.cloc = node.commit[\"diffStat\"][\"insertions\"] + node.commit[\"diffStat\"][\"deletions\"];\r\n        });\r\n\r\n        ///////////////////////////////////////////\r\n        // connect pulls to merged commits\r\n        if (this.pullData !== undefined) {\r\n            // SET pull map\r\n            this.pullData.forEach(p => this.pullMapByNumber[p.number] = p);\r\n\r\n            this.pullData.forEach( (pull) => {\r\n                let number = pull.number;\r\n                let parent = pull.head.sha;\r\n                let child = pull.merge_commit_sha;\r\n    if (this.getNodeById(parent) === undefined || (child !== undefined && this.getNodeById(child) === undefined)) return;\r\n    // console.log(\"this.getNodeById[parent]\", this.getNodeById(parent), parent)\r\n                this.getNodeById(parent).pullRequestHeads.push(number);\r\n\r\n                if (d => d.merge_commit_sha !== null) {\r\n                    if ( !(child in this.nodesMap) ||  !(parent in this.nodesMap)) return;\r\n\r\n                    let childCommit = this.nodesMap[child].commit;\r\n\r\n                    if (childCommit.parents.findIndex(d => d === parent) >= 0) {\r\n                        // console.log(\"already pull linked\")\r\n                        return;\r\n                    }\r\n\r\n                    childCommit.parents.push(parent);\r\n                    if (childCommit.merge === undefined) {\r\n                        childCommit.merge = [].concat([childCommit.parents.map(d => d.substring(0, 9) + \"_p\")]);\r\n                    } else {\r\n                        childCommit.merge.push(parent.substring(0, 9) + \"_p\");\r\n                    }\r\n\r\n                    this.getNodeById(childCommit.id).isMergeCommit = true;\r\n                    this.nodesMap[child].pullRequestMerges.push(number);\r\n                }\r\n            });\r\n        }\r\n\r\n        // edge(network)\r\n        commits.forEach(commit => {\r\n            commit.parents.forEach(parentId => {\r\n                let edge = new CommitEdge(commit.id, parentId);\r\n                this.addEdge(edge);\r\n            });\r\n        });\r\n\r\n        // set tagging information\r\n        this.allNodeList.forEach(d => {\r\n            if (d.commit.tags !== undefined && d.commit.tags.length > 0) {\r\n                let tags = d.commit.tags.filter(tag => tag.startsWith(this.releasePrefix) === true).map(tag => tag.substring(this.releasePrefix.length, tag.length));\r\n                if (tags.length <= 0) return;\r\n\r\n                d.isRelease = true;\r\n                d.releaseTagString = tags.join(\",\");\r\n                tags = tags.filter(tag => {\r\n                    let items = tag.split(\".\");\r\n                    if (items.length === 2 && items[1] === \"0\") return true;\r\n                    if (items.length === 3 && items[1] === \"0\" && items[2] === \"0\") return true;\r\n                    else return false;\r\n                });\r\n                if (tags.length > 0) d.isMajorRelease = true;\r\n            }\r\n        });\r\n\r\n        let branchedNodesNotHead = this.allNodeList.filter( node => \r\n            node.id !== this.headId\r\n            // && this.getChildNodes(node).length === 0 \r\n            && node.commit.branches !== undefined && node.commit.branches.length > 0\r\n        ).reverse();\r\n\r\n        // branchedNodes.reverse();\r\n        let branchedNodes = [this.getNodeById(this.headId)].concat(branchedNodesNotHead);\r\n        \r\n        let FPTreeNodeListMapByNodeId = {};\r\n// console.log(\"branchedNodes\", branchedNodes)\r\n\r\n        branchedNodes.forEach( branchedNode => {\r\n            // newBranchNoByNodeId[branchedNode.id] = newBranchNo++;\r\n// if (branchedNode.id.startsWith(\"b35dabf\")) console.log(\"branchedNode\", branchedNode);\r\n            let id = branchedNode.id;\r\n            let firstParentNodesOrderedList = [];\r\n            let firstParentTreeBranchNames = this.nodesMap[id].commit.branches;\r\n            let isHeadBranch = (id === this.headId);\r\n            branchedNode.isLeaf = true;\r\n            branchedNode.traversed = true;\r\n            branchedNode.firstParentTreeBranchNames = firstParentTreeBranchNames;\r\n            branchedNode.firstParentTreeLeafNode = branchedNode;\r\n\r\n            while (id in this.firstParentIdMap) {\r\n                id = this.firstParentIdMap[id];\r\n                let node = this.getNodeById(id);\r\n\r\n// if (branchedNode.id.startsWith(\"b35dabf\")) console.log(\"branchedNode while \", node);\r\n                if (node.traversed === true) break;\r\n\r\n                if (isHeadBranch) {\r\n                    node.isMainStem = true;\r\n                    node.implicitBranchNo = 0;\r\n                } else {\r\n                    if (node.commit.branches !== undefined && node.commit.branches.length > 0) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                firstParentNodesOrderedList.push(node);\r\n\r\n                // TODO - suppose that isHead = origin/master\r\n                // it is NOT commit's branch name but node's\r\n                node.firstParentTreeBranchNames = firstParentTreeBranchNames;\r\n                node.firstParentTreeLeafNode = branchedNode;\r\n                // node.branches = headBranchNames;\r\n                node.traversed = true;\r\n            }\r\n\r\n            FPTreeNodeListMapByNodeId[branchedNode.id] = firstParentNodesOrderedList;\r\n        });\r\n\r\n        // branchedNodes.forEach( node => {\r\n        //     FPTreeNodeListMapByNodeId[node.id]\r\n        //         .reverse()\r\n        //         .filter(d => d.isMergeCommit)\r\n        //         .forEach( node => {\r\n        //             if (!node.isMergeTraversed) this.findMerges(node);\r\n        //         });\r\n        // });\r\n\r\n                    \r\n        // if (isHeadBranch) headFPTreeNodes = firstParentNodesOrderedList;\r\n// console.log(\"process firstparentTree mergenodes\", branchedNode.commit.branches, firstParentNodesOrderedList)           \r\n// if (isHeadBranch) {\r\n//     firstParentNodesOrderedList//.reverse()\r\n//     .filter(d => d.isMergeCommit)\r\n//     .forEach( node => {\r\n//         if (!node.isMergeTraversed) this.findMerges(node);\r\n//     });\r\n// }\r\n\r\n        /////////////////////////////////////\r\n        // annotating branch\r\n        // let branchNodes = this.allNodeList.filter( node => node.commit.branches !== undefined);\r\n        // let branchNo = 1;\r\n        // branchNodes.forEach(node => {\r\n        //     node.commit.branches.forEach(b => {this.branchesMap[b] = branchNo++;});\r\n        //     this.branchBackTracking(node, node.commit.branches);\r\n        // });\r\n\r\n        /////////////////////////////////////\r\n        // get implicit branch number\r\n        // 아마도.. 앞에서부터 한건 root를 골라내기 위함인 것 같다.\r\n        let bno = 0;\r\n        let rootCount = 0;\r\n        this.allNodeList.forEach(node => {\r\n            // when meet other roots\r\n            if (node.isRoot && !node.isMainStem) {\r\n                node.implicitBranchNo += 10000 + this.allNodeList.length + rootCount++;\r\n            }\r\n\r\n            let firstParentChildNodes = this.getChildNodes(node).filter(childNode => this.firstParentIdMap[childNode.id] === node.id);\r\n            if (firstParentChildNodes.length === 0) {\r\n                node.hasNoFirstParentChild = true;\r\n                return;\r\n            }\r\n            let implicitBranchNo = node.implicitBranchNo;\r\n            firstParentChildNodes\r\n                .sort( (a, b) => (b.seq - a.seq))\r\n                .sort( (a, b) => (b.implicitBranchNo - a.implicitBranchNo))\r\n                .forEach( (childNode, i) => {\r\n                    if (i === 0) {\r\n                        childNode.implicitBranchNo = implicitBranchNo;\r\n                    } else {\r\n                        childNode.implicitBranchNo = ++bno;\r\n                    }\r\n            });\r\n        });\r\n\r\n        // branchedNodes = [this.getNodeById(this.headId)].concat(branchedNodesNotHead.reverse());\r\n        branchedNodes = [this.getNodeById(this.headId)].concat(branchedNodesNotHead);\r\n        branchedNodes.forEach( node => {\r\n            FPTreeNodeListMapByNodeId[node.id]\r\n                .reverse()\r\n                .filter(d => d.isMergeCommit)\r\n                .forEach( node => {\r\n                    if (!node.isMergeTraversed) this.findMerges(node);\r\n                });\r\n        });\r\n\r\n        // back to original\r\n        this.gitData.reverse();\r\n    }\r\n\r\n    branchBackTracking(node, branchNames) {\r\n        // masterFist가 보일 때 까지, 혹은 끝까지 갈 때 까지 add 시키자.\r\n\r\n        // TODO \r\n        // branch 가 없는 애들을 찾아서 first parent가 이름을 가지고 있을 때까지 돌려서 해당 이름을 쭉 가지게 만들고\r\n        // origin/master는 골라서 유지하도록 만들어야 함.\r\n        node.branches = node.branches.concat(branchNames);\r\n        node.branchNumbers = node.branchNumbers.concat(branchNames.map(d => this.branchesMap[d]));\r\n        if (node.isMainStem || node.commit.parents.length === 0) {\r\n            return;\r\n        } else {\r\n            this.branchBackTracking(this.nodesMap[node.commit.parents[0]], branchNames);\r\n        }\r\n    }\r\n\r\n    getOverviewClusters(threshold, selection, prefMap = PreferenceWeights, filters, releaseBinningLevel, useHeuristicMerge) {\r\n// console.log(selection)\r\n        let nodeList;\r\n        if (selection !== undefined) nodeList = this.allNodeList.filter( (d, i) => i >= selection[0] && i <= selection[1]);\r\n        else nodeList = this.allNodeList;\r\n        return this.getClusters(threshold, nodeList, prefMap, filters, releaseBinningLevel, useHeuristicMerge);\r\n    }\r\n\r\n    isClusterCut(node, releaseBinningLevel, useHeuristicMerge) {\r\n        // cut clustering(grouping) if meet release node\r\n        if ( (releaseBinningLevel === 2 && (node.isMajorRelease || (useHeuristicMerge && node.mergeNodesContainMajorRelease)))\r\n                || (releaseBinningLevel === 1 && (node.isRelease || (useHeuristicMerge && node.mergeNodesContainRelease)))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // TODO - need OPTIMIZATION\r\n    keywordMatch = (kfList, node) => kfList.filter( f => {\r\n        let [attr, val] = [f.attrName, f.keyword.toLowerCase()];\r\n// console.log(\"test\", attr, val, node.commit.author, node.commit.author.toLowerCase().indexOf(val))\r\n        switch(attr.toLowerCase()) {\r\n            case \"a\":\r\n                return node.commit.author.toLowerCase().indexOf(val) >= 0;\r\n            case \"t\":\r\n                return node.commit.commitType.toLowerCase().indexOf(val) >= 0;\r\n            case \"f\":\r\n                return Object.keys(node.commit.diffStat.files).filter(name => name.toLowerCase().indexOf(val) >= 0).length > 0;\r\n            case \"m\":\r\n                // return Object.keys(node.commit.corpus).filter(name => name.toLowerCase().indexOf(val) >= 0).length > 0;\r\n                return node.commit.corpus.filter(name => name.toLowerCase().indexOf(val) >= 0).length > 0;\r\n            default:\r\n                return false;\r\n    }}).length > 0;\r\n\r\n    // releaseBinningLevel\r\n    // 0: none, 1: major, 2: isRelease (temporary)\r\n    getClusters(threshold, nodeList, prefMap = PreferenceWeights, keywordFilterList, releaseBinningLevel = 0, useHeuristicMerge = true) {\r\n        // include => >0 인게 있으면 무조건 넣어라. OR.\r\n        // exclude => <0 인게 있으면 무조건 빼라. OR.\r\n        // 둘 다 만족하면 exclude로 하자.\r\n\r\n        // KEYWORD FILTERS\r\n        if (keywordFilterList.length > 0) {\r\n            nodeList.forEach((node) => {\r\n                // console.log(\"filter:::\", node.commit.author, this.keywordMatch(keywordFilterList.filter(f => f.isIncludes), node));\r\n                let inKF = keywordFilterList.filter(f => f.isIncludes);\r\n                let exKF = keywordFilterList.filter(f => !f.isIncludes);\r\n                let isIncludes, isExcludes;\r\n\r\n                if (inKF.length === 0) isIncludes = true;\r\n                else isIncludes = this.keywordMatch(inKF, node);\r\n                if (exKF.length === 0) isExcludes = false;\r\n                else isExcludes = this.keywordMatch(exKF, node);\r\n\r\n                node.isFilteredOut = !(isIncludes && !isExcludes);\r\n        // console.log(\"####!!!\", node.commit.author, node.isFilteredOut, isIncludes, isExcludes)\r\n\r\n            });\r\n        } else {\r\n            nodeList.forEach( node => node.isFilteredOut = false);\r\n        }\r\n        \r\n// console.log(\"getclusters, FILTERS \", keywordFilterList, nodeList);\r\n\r\n        // build threshold set\r\n        let thresholdSet = new Set();\r\n        nodeList.filter(node => !node.isFilteredOut).forEach( (node, i) => {\r\n            let parentNode = node;\r\n            while (true) {\r\n                let nextFirstParentChildNodeWithSameBranchNo = this.getChildNodes(parentNode)\r\n                    .filter(childNode => this.firstParentIdMap[childNode.id] === parentNode.id && parentNode.implicitBranchNo === childNode.implicitBranchNo);\r\n                if (nextFirstParentChildNodeWithSameBranchNo.length === 0) {\r\n                    break;\r\n                } else if (nextFirstParentChildNodeWithSameBranchNo[0]) {\r\n                    let scores = this.getScoreByPreferences(parentNode, nextFirstParentChildNodeWithSameBranchNo[0], prefMap, useHeuristicMerge);\r\n                    thresholdSet.add(scores.sum);\r\n// console.log(\"NaN node\", scores.sum,node, scores, parentNode, nextFirstParentChildNodeWithSameBranchNo[0], prefMap, useHeuristicMerge)\r\n                    break;\r\n                }\r\n                parentNode = nextFirstParentChildNodeWithSameBranchNo[0];\r\n            }\r\n            // let firstParentChildNodes = this.getChildNodes(node).filter(childNode => this.firstParentIdMap[childNode.id] === node.id);\r\n            // firstParentChildNodes.forEach(childNode => {\r\n            //     if (node.implicitBranchNo === childNode.implicitBranchNo) {\r\n            //         let score = this.getScoreByPreferences(node, childNode, prefMap);\r\n            //         thresholdSet.add(score);\r\n            //     }\r\n            // });\r\n        });\r\n        thresholdSet.add(0);\r\n        thresholdSet.add(Object.keys(prefMap).length);\r\n        let sortedThresholdList = [...thresholdSet].sort((a, b) => a - b);\r\n        // sortedThresholdList.push(Object.keys(PreferenceWeights).length);\r\n        // sortedThresholdList = [0].concat(sortedThresholdList);\r\nconsole.log(\"thresholdSet\", thresholdSet, sortedThresholdList, threshold, prefMap);\r\n      \r\n        if (threshold === undefined) {\r\n            threshold = sortedThresholdList[this.defaultThresholdStep];\r\n// console.log(\"new start thr. => \", threshold);\r\n        }\r\n\r\n        let container = [];\r\n        let clusterMapByNodeSeq = {};\r\n        // let prefSum = Object.values(prefMap).reduce( (prev, cur) => { prev += cur; return prev;}, 0);\r\n        // let prefNormalizedThreshold = prefSum * threshold / 100;\r\n        let prefNormalizedThreshold = threshold;\r\n\r\n        let targetNodeList = nodeList.filter(node => !node.isFilteredOut);\r\n        if (useHeuristicMerge) targetNodeList = targetNodeList.filter(node => !node.isMergeTraversed);\r\n        \r\n        targetNodeList.forEach( node => {\r\n                if (clusterMapByNodeSeq[node.seq] !== undefined) return;\r\n\r\n                let cluster = new CommitCluster(container.length, node, prefMap);\r\n                container.push(cluster);\r\n                clusterMapByNodeSeq[node.seq] = cluster;\r\n\r\n                // cut clustering(grouping) if meet release node\r\n                if(this.isClusterCut(node, releaseBinningLevel, useHeuristicMerge)) {\r\n// console.log(\"cut!!!\", node.releaseTagString)\r\n                    return;\r\n                }\r\n\r\n                let parentNode = node;\r\n                while(true) {\r\n                    let firstParentChildNodes = this.getChildNodes(parentNode).filter(\r\n                        childNode => \r\n                        nodeList.indexOf(childNode) >= 0\r\n                        && this.firstParentIdMap[childNode.id] === parentNode.id\r\n                        && parentNode.implicitBranchNo === childNode.implicitBranchNo\r\n                    );\r\n                    \r\n                    if (firstParentChildNodes.length == 0) break;\r\n                    let firstParentChildNode = firstParentChildNodes[0];\r\n                     \r\n                    if (firstParentChildNode.isFilteredOut) {\r\n                        // continue\r\n                        parentNode = firstParentChildNode;\r\n                    } else {\r\n                        let scores = this.getScoreByPreferences(node, firstParentChildNode, prefMap, useHeuristicMerge);\r\n\r\n                        thresholdSet.add(scores.sum);\r\n                        if (scores.sum >= prefNormalizedThreshold) {\r\n                            clusterMapByNodeSeq[firstParentChildNode.seq] = cluster;\r\n                            cluster.addNode(firstParentChildNode, scores);\r\n                            parentNode = firstParentChildNode;\r\n    // console.log(\"grouped!!,\", firstParentChildNode.commit.author, firstParentChildNode)\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // cut clustering(grouping) if meet release node\r\n                    if(this.isClusterCut(firstParentChildNode, releaseBinningLevel, useHeuristicMerge)) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n        // set parent/child\r\n        let doneSet = new Set();\r\n        container.forEach( cluster => {\r\n            // connect when implicitBranchNo is the same;\r\n            let implicitBranchNo = cluster.nodeList[0].implicitBranchNo;\r\n            if (!doneSet.has(implicitBranchNo)) {\r\n                let sameBranchClusters = container.filter( c => c.nodeList[0].implicitBranchNo === implicitBranchNo).sort( (a, b) => a.nodeList[0].seq - b.nodeList[0].seq);\r\n                sameBranchClusters.filter( (d, i) => i < sameBranchClusters.length - 1).forEach( (cluster, i) => {\r\n                    cluster.child = sameBranchClusters[i + 1];\r\n                    sameBranchClusters[i + 1].parent = cluster;\r\n                });\r\n    \r\n                doneSet.add(implicitBranchNo);\r\n            }\r\n\r\n            // the end of cluster is connected to the first of a cluster, then set.\r\n            // let lastNode = cluster.nodeList.slice(-1)[0];\r\n            // let firstParentChildNodesOnSameBranch = this.getChildNodes(lastNode)\r\n            //     .filter(childNode => this.firstParentIdMap[childNode.id] === lastNode.id && lastNode.implicitBranchNo === childNode.implicitBranchNo);\r\n            // if (firstParentChildNodesOnSameBranch.length > 0) {\r\n            //     let nextCluster = clusterMapByNodeSeq[firstParentChildNodesOnSameBranch[0].seq];\r\n            //     if (nextCluster !== undefined) {\r\n            //         cluster.child = nextCluster;\r\n            //         nextCluster.parent = cluster;  \r\n            //     }\r\n            // }\r\n\r\n            // set branches\r\n            // cluster.branches = Array.from(cluster.nodeList\r\n            //     .filter(d => d.branches !== undefined && d.branches.length > 0)\r\n            //     .reverse()\r\n            //     .reduce( (prev, cur) => {\r\n            //         cur.branches.forEach( d => prev.add(d) );\r\n            //         return prev;\r\n            //     }, new Set())\r\n            // );\r\n\r\n            cluster.branches = Array.from(cluster.nodeList\r\n                .filter(d => d.firstParentTreeBranchNames !== undefined && d.firstParentTreeBranchNames.length > 0)\r\n                .reverse()\r\n                .reduce( (prev, cur) => {\r\n                    // add pr branches first, then explicit branches;\r\n                    cur.firstParentTreeBranchNames.filter(name => name.startsWith(\"origin/pr\")).forEach( d => prev.add(d) );\r\n                    cur.firstParentTreeBranchNames.filter(name => !name.startsWith(\"origin/pr\")).forEach( d => prev.add(d) );\r\n                    return prev;\r\n                }, new Set())\r\n            );\r\n        });\r\n\r\n        // clusterNodes.reverse();\r\n        // let branchNames = Array.from(\r\n        //     clusterNodes.reduce((prevList, cn) => {\r\n        //         cn.cluster.nodeList.reverse();\r\n        //         let l = cn.cluster.nodeList.reduce((prev, node) => prev.concat(node.branches), []);\r\n        //         l.forEach(branchName => prevList.add(branchName));\r\n        //         cn.cluster.nodeList.reverse();\r\n    \r\n        //         return prevList;\r\n        //     }, new Set())\r\n        // );\r\n        // clusterNodes.reverse();\r\n        // let branchName = (branchNames.length === 0 ? \"\" : branchNames[0] + (branchNames.length > 1 ? \", ...\" : \"\"));\r\n    \r\n\r\n\r\n        // console.log(\"cluster cnt = \", container.length);\r\n        // console.log(\"clusterList\", container, \"threshold set\", thresholdSet);\r\n        \r\n        // return [threshold, [...thresholdSet], container];\r\n        return [threshold, sortedThresholdList, container];\r\n    }\r\n\r\n    getLowLevelThresholdAndClusters(cluster, prefMap = PreferenceWeights, useHeuristicMerge) {\r\n        if (cluster === undefined) return [];\r\n\r\n//         let nodeList = cluster.nodeList;\r\n\r\n//         // get low level threshold\r\n//         let thSet = new Set();\r\n//         nodeList.filter( (d, i) => i < (nodeList.length - 2) )\r\n//             .forEach((d, i) => thSet.add(this.getScoreByPreferences(nodeList[i], nodeList[i+1], prefMap)));\r\n//         let sortedThresholdList = [...thSet].sort( (a, b) => a - b );\r\n\r\n//         let prefSum = Object.values(prefMap).reduce( (prev, cur) => { prev += cur; return prev;}, 0);\r\n//         let newThreshold = sortedThresholdList[Math.min(this.lowLevel, sortedThresholdList.length - 1) - 1];\r\n//         if (newThreshold === undefined) newThreshold = 0;\r\n//         newThreshold = (newThreshold / prefSum * 100).toFixed(1);\r\n// console.log(\"RE THRE!         \", sortedThresholdList, newThreshold, newThreshold/prefSum);\r\n        this.defaultThresholdStep = 2;\r\n        return this.getClusters(undefined, cluster.nodeList, prefMap, useHeuristicMerge);\r\n    }\r\n\r\n    static getTextValue(dataName, value) {\r\n        if (dataName.endsWith(\"Files\") || dataName.endsWith(\"Dirs\")) {\r\n            let vs = value.split(\"/\");\r\n            let fileName = vs.slice(-1)[0];\r\n            if (vs.length > 1) fileName = \".../\" + fileName;\r\n            // return fileName;\r\n            return value;\r\n        } else if (dataName === \"authors\") {\r\n            return value.split(\" <\")[0].split(\" \")[0];\r\n        } else if (dataName === \"authors#2\") {\r\n            return value.split(\" <\")[0];\r\n        } else if (dataName === \"commitTypes\") {\r\n            return value.split(\"_eng\")[0].toUpperCase();\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    static replaceAll(str, searchStr, replaceStr) {\r\n        return str.split(searchStr).join(replaceStr);\r\n    }\r\n\r\n    static searchByKeywords(nodeList, keywords, attrName = \"fullText\") {\r\n        let resultNodeList = [];\r\n        let findAttrs;\r\n        if (attrName === \"fullText\") {\r\n            // findAttrs = CommitAttributeNames;\r\n            findAttrs = CommitAttributeNames.concat();\r\n        } else {\r\n            findAttrs = [attrName];\r\n        }\r\n        keywords = keywords.map(d => d.toLowerCase());\r\n        nodeList.forEach((node) => {\r\n            let foundMap = keywords.reduce((prev, cur) => {\r\n                prev[cur] = false;\r\n                return prev;\r\n            }, {});\r\n            \r\n            findAttrs.forEach((attr) => {\r\n                let values = [];\r\n                if (attr === \"files\") values = values.concat(Object.keys(node.commit.diffStat.files));\r\n                else if (!(attr in node.commit)) return;\r\n                else values = values.concat(node.commit[attr]);\r\n                values.forEach(v => {\r\n                    // AND\r\n                    Object.entries(foundMap).filter(d => !d[1])\r\n                        .forEach(d => {\r\n                            let keyword = d[0];\r\n                            if (v.toLowerCase().indexOf(keyword) >= 0) {\r\n                                foundMap[d[0]] = true;\r\n                            }\r\n                        })\r\n                    ;\r\n                });\r\n            });\r\n\r\n            // if all keywords found\r\n            if (Object.entries(foundMap).filter(d => d[1]).length > 0) {\r\n                resultNodeList.push(node);\r\n            }\r\n        });\r\n        // console.log(\"resultNodeList\", resultNodeList);\r\n        return resultNodeList;\r\n    }\r\n\r\n    static trimYYYYMMDD(dt) {\r\n        return new Date(dt).toISOString().slice(0, 10);\r\n    }\r\n\r\n    static parseTime(dt) {\r\n        let parseTime = d3.timeParse(\"%Y-%m-%d\");\r\n        return parseTime(GitAnalyzer.trimYYYYMMDD(dt));\r\n    }\r\n\r\n    getClusterBranchType(cluster) {\r\n// if (cluster.nodeList.slice(-1)[0].id.startsWith(\"1f2dc3\")) console.log(\"!!!!\", cluster)\r\n        // if this cluster has children, then follow it.\r\n        while (cluster.child !== undefined) {\r\n            cluster = cluster.child;\r\n        }\r\n\r\n        // if most child has no branchName\r\n        if (cluster.branches.length === 0) {\r\n            while (cluster.parent !== undefined ) {\r\n                if (cluster.branches.length > 0) break;\r\n                else cluster = cluster.parent;\r\n            }\r\n        }\r\n\r\n        let branchNames = cluster.branches;\r\n        // let lastBranchName = \"\";\r\n        // if (branchNames.length > 0) {\r\n        //     let FPs = cluster.nodeList.filter(n => n.firstParentTreeLeafNode !== undefined);\r\n        //     if (FPs.length === 0) {\r\n        //         console.log(\"THIS SHOUDLN'T HAPPEN\");\r\n        //     } else {\r\n        //         let names = FPs.slice(-1)[0].firstParentTreeBranchNames;\r\n        //         if (names.length === 1) {\r\n        //             if (branchNames[0] !== names[0]) console.log(\"THIS SHOUDLN'T HAPPEN\", branchNames[0], names, cluster);\r\n        //             lastBranchName = names[0];\r\n        //         } else {\r\n        //             if (names.filter(n => n.startsWith(\"origin/pr\")).length === names.length) {\r\n        //                 lastBranchName = names[0];\r\n        //             } else {\r\n        //                 lastBranchName = names.filter(n => !n.startsWith(\"origin/pr\"))[0];\r\n        //                 if (branchNames[0] !== lastBranchName) console.log(\"THIS SHOUDLN'T HAPPEN\", branchNames[0], names, cluster);\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        let lastBranchName = (branchNames.length > 0 ? branchNames[0] : \"\");\r\n// if (cluster.nodeList.slice(-1)[0].id.startsWith(\"1f2dc3\")) console.log(\"!!!!\", cluster, branchNames, lastBranchName)\r\n        // let implicitBranchNo = cluster.nodeList[0].implicitBranchNo;\r\n        let lastNode = cluster.nodeList.slice(-1)[0];\r\n        let type = BranchTypes.EXPLICIT;\r\n\r\n        if (lastNode.implicitBranchNo === 0) {\r\n            type = BranchTypes.MAIN_STEM;\r\n        } else if (lastBranchName.startsWith(\"origin/pr\")) {\r\n            let prNum = Number(lastBranchName.substring(\"origin/pr/\".length, lastBranchName.length));\r\n            if (this.pullMapByNumber[prNum] === undefined) {\r\nconsole.log(\"NO PULL!!!! .. might pr removed\", prNum, lastBranchName);\r\n                type = BranchTypes.PR_CLOSED;\r\n            } else {\r\n                let closed = (this.pullMapByNumber[prNum].state === \"closed\");\r\n                let merged = this.pullMapByNumber[prNum].merged;\r\n\r\n                if (merged) {\r\n                    type = BranchTypes.PR_MERGED;\r\n                } else if (closed) {\r\n                    type = BranchTypes.PR_CLOSED;\r\n                } else {\r\n                    type = BranchTypes.PR_OPEN;\r\n                }\r\n            }\r\n        } else if (lastBranchName === \"\") {\r\n            type = BranchTypes.IMPLICIT;\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    getScoreByPreferences(node1, node2, prefMap, useHeuristicMerge, maxCommitHours = 96, verbose = false) {\r\n        let scores = undefined;\r\n        let commit1 = (useHeuristicMerge && node1.mergeSquashCommit !== undefined ? node1.mergeSquashCommit : node1.commit);\r\n        let commit2 = (useHeuristicMerge && node2.mergeSquashCommit !== undefined ? node2.mergeSquashCommit : node2.commit);\r\n\r\n        if (commit1.no in this.scoreData && commit2.no in this.scoreData[commit1.no]) {\r\n            scores = this.scoreData[commit1.no][commit2.no];\r\n        }\r\n// console.log(\"commit1.no\", commit1.no, commit2.no, scores, useHeuristicMerge, node1.mergeSquashCommit, node2.mergeSquashCommit);\r\n        if (scores === undefined ) {\r\n            // console.log(\"%%% far nodes' score \", scores, node1, node2);\r\n            scores = getScoreTemp(commit1, commit2, verbose);\r\n            \r\n            if ((this.scoreData[commit1.no] !== undefined)) {\r\n                this.scoreData[commit1.no][commit2.no] = scores;\r\n            } else {\r\n                this.scoreData[commit1.no] = {};\r\n                this.scoreData[commit1.no][commit2.no] = scores;\r\n            }\r\n        }\r\n\r\n        let dateNormFunc = d3.scaleLinear().range([1, 0]).domain([0, maxCommitHours]);\r\n        let diffHours = Math.min(Math.abs(new Date(commit1.date) - new Date(commit2.date))/24, maxCommitHours);\r\n        // let diffDays = Math.abs(new Date(a.date) - new Date(b.date))/24/60/1000/60;\r\n        //score[\"commitDate\"] = dateNormFunc(Math.log10(diffDays));\r\n        scores[\"commitDate\"] = Math.abs(dateNormFunc(diffHours));\r\n    \r\n        scores.sum = Number(Object.entries(prefMap).reduce( (prev, entry) => {\r\n            prev += entry[1] * Math.abs(scores[entry[0]]);\r\n            return prev;\r\n        }, 0).toFixed(7));\r\n\r\n        return scores;\r\n    }\r\n\r\n    static getBranchNamesFromBranchClusterNodes(branchClusterNodes) {\r\n        return Array.from(branchClusterNodes.filter(cn => cn.cluster.branches.length > 0).reverse().reduce( (prev, cur) => {\r\n            cur.cluster.branches.forEach( b => prev.add(b) );\r\n            return prev;\r\n        }, new Set())).map(b => (b.startsWith(\"origin/\") ? b.substring(7, b.length) : b))\r\n    }\r\n\r\n    static reduceLongName(name,threshold) {\r\n        if(name.length < threshold) {\r\n            return name;\r\n        }\r\n        else {\r\n            return name.slice(0, threshold) + \"...\";\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default GitAnalyzer;","import 'date-fns';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from '../modules';\n\nimport GitAnalyzer from './analyzer/GitAnalyzer';\n\nimport \"./TemporalFilter.css\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: 0,\n    },\n    dateField: {\n        width: \"90px\",\n        fontSize: \"10px\",\n        margin: 0,\n        padding: 0,\n    },\n\n}));\n\nconst SearchDiv = (props) => {\n// console.log(\"p\", props.releaseNodeList);\n    return (\n        <RadioGroup name={props.name} style={{ width: \"110px\" }} value={props.value} onChange={props.onChange}>\n            <div className=\"flexVerticalContainer\">\n                <div className=\"flexContainer\">\n                    <div>\n                        <Radio\n                            style={{width:\"25px\", height:\"25px\", padding:0, margin: 0}}\n                            value=\"tag\"\n                            color=\"primary\"\n                            icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                            checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                        />\n                    </div>\n                    <div>\n                        <Select\n                            id={props.name + \"Release\"}\n                            value={props.release}\n                            onChange={props.heandleReleaseChange}\n                            style={{width:\"90px\", fontSize:\"12px\"}}\n                            native\n                        >  \n                            <option value={props.root}>INIT</option>\n                            {props.releaseNodeList.map( (node, i) => (\n                                <option key={i} value={node.seq} >\n                                    {node.releaseTagString}\n                                </option>\n                            ))}\n                            <option value={props.head}>LATEST</option>\n                        </Select>\n                    </div>\n                </div>\n                <div className=\"flexContainer\">\n                    <div>\n                        <Radio\n                            style={{width:\"25px\", height:\"25px\", padding:0, margin: 0}}\n                            value=\"date\"\n                            color=\"primary\"\n                            disableRipple\n                            icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                            checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                        />\n                    </div>\n                    <div>\n                        <TextField \n                            id={props.name + \"Date\"} \n                            type=\"date\" \n                            className={props.dateField} \n                            value={props.startRelease}\n                            defaultValue={props.defaultDateValue}\n                            onChange={(event) => props.handleDateChange(event.target.value)}\n                        />\n                    </div>\n                </div>\n            </div>\n        </RadioGroup>\n    );\n}\n\nconst TemporalFilter = props => {\n    const classes = useStyles();\n    const [fromType, setFromType] = React.useState(\"tag\");\n    const [toType, setToType] = React.useState(\"tag\");\n    const [startDate, setStartDate] = React.useState(\"date\");\n    const [endDate, setEndDate] = React.useState(\"date\");\n\n    const headSeq = props.gitAnalyzer.allNodeList.slice(-1)[0].seq;\n    const rootSeq = props.gitAnalyzer.allNodeList[0].seq;\n\n    let defaultStartSeq = rootSeq;\n    let defaultEndSeq = headSeq;    \n    if (props.gitAnalyzer.repoName === \"realm-java\") {\n        defaultStartSeq = 15731;\n        defaultEndSeq = 15972;    \n    } else if (props.gitAnalyzer.repoName === \"MixedRealityToolkit-Unity\") {\n        defaultStartSeq = 11152;\n        defaultEndSeq = 11231;\n    }\n    \n    const [startRelease, setStartRelease] = React.useState(defaultStartSeq);\n    const [endRelease, setEndRelease] = React.useState(defaultEndSeq);\n    \n    const dispatch = useDispatch(); \n    // const filterSelection = useSelector(state => state.commitFilterSelection);\n\n    const handleFromTypeChange = event => {\n        setFromType(event.target.value);\n    };\n    const handleToTypeChange = event => {\n        setToType(event.target.value);\n    };\n    const handleStartDateChange = date => {\n        setStartDate(date);\n    }\n    const handleEndDateChange = date => {\n        setEndDate(date);\n    }\n    const handleStartReleaseChange = event => {\n        setStartRelease(event.target.value);\n    };\n    const handleEndReleaseChange = event => {\n        setEndRelease(event.target.value);\n    };\n    const releaseNodeList = props.gitAnalyzer.allNodeList.filter(d => d.isRelease);\n    const rootDate = GitAnalyzer.trimYYYYMMDD(props.gitAnalyzer.allNodeList[0].commit.date);\n    const headDate = GitAnalyzer.trimYYYYMMDD(props.gitAnalyzer.allNodeList.slice(-1)[0].commit.date);\n    \n// console.log(\"tf props.gitAnalyzer\", props.gitAnalyzer.allNodeList, \"release\", releaseNodeList)\n    function getSeqByDate(date, isStart) {\n        let fi;\n        if (isStart) {\n            for (let fi = 0; fi < props.gitAnalyzer.allNodeList.length; fi++) {\n// console.log(\"NONONONO\", GitAnalyzer.trimYYYYMMDD(props.gitAnalyzer.allNodeList[fi].commit.date));\n                if (GitAnalyzer.trimYYYYMMDD(props.gitAnalyzer.allNodeList[fi].commit.date) >= date) {\n                    return props.gitAnalyzer.allNodeList[fi].seq;\n                }\n            }\n        } else {\n            for (let fi = props.gitAnalyzer.allNodeList.length - 1; fi >= 0 ; fi--) {\n                if (GitAnalyzer.trimYYYYMMDD(props.gitAnalyzer.allNodeList[fi].commit.date) <= date) {\n                    return props.gitAnalyzer.allNodeList[fi].seq;\n                }\n            }\n        }\n\n        return isStart? 0 : props.gitAnalyzer.allNodeList.length - 1;\n    }\n\n\n// console.log(\"what the hell?\")\n    return (\n            <div className=\"flexVerticalContainer\">\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <div className=\"flexContainer\" style={{alignItems: \"center\"}}>\n                        <SearchDiv\n                            name=\"from\"\n                            value={fromType}\n                            onChange={handleFromTypeChange}\n                            dateField={classes.dateField}\n                            date={startDate}\n                            handleDateChange={handleStartDateChange}\n                            release={startRelease}\n                            heandleReleaseChange={handleStartReleaseChange}\n                            defaultDateValue={rootDate}\n                            defaultReleaseValue={rootSeq}\n                            head={headSeq}\n                            root={rootSeq}\n                            releaseNodeList={releaseNodeList}\n                        />\n                        <div>&nbsp; ~ </div>\n                        <SearchDiv\n                            name=\"to\"\n                            value={toType}\n                            onChange={handleToTypeChange}\n                            dateField={classes.dateField}\n                            date={endDate}\n                            handleDateChange={handleEndDateChange}\n                            release={endRelease}\n                            heandleReleaseChange={handleEndReleaseChange}\n                            defaultDateValue={headDate}\n                            defaultReleaseValue={headSeq}\n                            head={headSeq}\n                            root={rootSeq}\n                            releaseNodeList={releaseNodeList}\n                        />\n                    </div>\n                </FormControl>\n                <div className=\"flexVerticalContainer\" style={{alignItems:\"center\"}}>\n                    <div style={{height:\"10px\"}}></div>\n                    <div style={{width:\"95%\"}}>\n                        <Button \n                            style={{ \"fontSize\": \"11px\", width:\"100%\" }} size=\"small\" variant=\"outlined\" \n                            onClick={() => {\n                                let fromSeq = startRelease;\n                                let toSeq = endRelease;\n                                if (fromType === \"date\") {\n                                    fromSeq = getSeqByDate(startDate, true)\n                                } \n                                if (toType === \"date\") {\n                                    toSeq = getSeqByDate(endDate, false)\n                                }\n// console.log(\"NONONONO\", fromType, toType, startDate, endDate, fromSeq, toSeq);\n                                // props.onCommitFilterChanged([fromSeq, toSeq]);\n                                dispatch(actions.updateGlobalCommitsByTemporalFilter([Number(fromSeq), Number(toSeq)]));\n                        }}>\n                            TEMPORAL FILTER\n                        </Button>\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default TemporalFilter;","import \"./TemporalSelector.css\";\nimport * as d3 from 'd3';\nimport { AttributeColors } from \"./ColorClasses\"\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport * as actions from '../modules';\n\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nlet commitBrush = undefined;\nlet commitSeqXScale = undefined;\n\nfunction navRender(props, state) {\n    // VARIABLES\n    \n    const arrowSvgHeight = state.arrowSvgHeight;\n    const brushHandleSize = 6;\n    const navMarginLeft = brushHandleSize / 2;\n    const navMarginBottom = 3;\n    const temporalAxisHeight = 22;\n    const tagHeight = 50;\n    const temporalAreaHeight = state.temporalAreaHeight;\n    const leftWidth = state.leftPaneWidth + 11;\n    const width = state.width;\n    const parseTime = GitAnalyzer.parseTime;\n\n// console.log(\"navigationRender\");\n    const { allNodeList } = props.gitAnalyzer;\n// console.log(\"navigationRender--- allnodeList.length=\", allNodeList.length);\n    const focusHeight = 25;\n    const height = state.temporalSelectorHeight - navMarginBottom;\n    const focusRelativeHeightPosition = height - focusHeight;\n    const marginLeft = navMarginLeft;\n\n    let globalStartSeq, globalEndSeq;\n    if (state.globalCommitSeqSelectionByTemporalFilter === undefined) {\n        globalStartSeq = 0;\n        globalEndSeq = allNodeList.length - 1;\n    } else {\n        [globalStartSeq, globalEndSeq] = state.globalCommitSeqSelectionByTemporalFilter;\n    }\n\n    const globalFilteredNodeList = allNodeList.filter( \n            node => node.seq >= globalStartSeq && node.seq <= globalEndSeq );\n\n    // FUNCTIONS INIT\n    const handleTemporalLabel = (selection, xTemporalScale) => {\n        let leftAlignWidth = (selection[0] > 50 ? 45 : 0);\n        let rightAlignWidth = (selection[1] > width - 50 ? 80 : 40);\n        d3.select(\"#temporalStartDiv\")\n            // .style(\"left\", (leftWidth + selection[0] + 20) + \"px\")\n            .style(\"left\", (selection[0] - leftAlignWidth) + \"px\")\n            .text(getTemporalLabelByDate(xTemporalScale.invert(selection[0])));\n        d3.select(\"#temporalEndDiv\")\n            // .style(\"left\", (leftWidth + selection[1] - 40 + 15) + \"px\")\n            .style(\"left\", (selection[1] - rightAlignWidth) + \"px\")\n            .text(getTemporalLabelByDate(xTemporalScale.invert(selection[1])));\n    }\n\n    const handleCommitLabel = (selection, commitSeqXScale, globalStartSeq) => {\n        let newXScale = d3.scaleLinear().rangeRound([0, globalFilteredNodeList.length - 1]).domain(commitSeqXScale.range());\n        let newSel = selection.map(d => newXScale(d));\n\n        let [startLabel, endLabel] = newSel.map(d => {\n            let node = globalFilteredNodeList[d];\n            if (node.isRelease) return node.releaseTagString;\n            else return \"#\" + node.commit.id.substring(0, 6);\n        });\n\n        let leftAlignWidth = (selection[0] > 60 ? 60 : 0);\n        let rightAlignWidth = (selection[1] > width - 70 ? 100 : 60);\n        d3.select(\"#commitStartDiv\")\n            // .style(\"left\", (leftWidth + selection[0] + 20) + \"px\")\n            .style(\"left\", (selection[0] - leftAlignWidth) + \"px\")\n            .text(startLabel + \"(\" + (newSel[0] + globalStartSeq) + \")\");\n        d3.select(\"#commitEndDiv\")\n            // .style(\"left\", (leftWidth + selection[1] - 65 + 15) + \"px\")\n            .style(\"left\", (selection[1] - rightAlignWidth) + \"px\")\n            .text(endLabel + \"(\" + (newSel[1] + globalStartSeq) + \")\");\n    }\n\n    const drawTemporalToCommitArrow = () => {\n        let tSel = d3.brushSelection(d3.select(\"#temporalBrush\").node());\n        let cSel = d3.brushSelection(d3.select(\"#commitBrush\").node());\n\n        if (tSel === null || cSel === null) return;\n        drawSelectionArrow(\"navigationSvg\", [[tSel[0], cSel[0]], [tSel[1], cSel[1]]], [temporalAreaHeight, temporalAreaHeight + tagHeight - navMarginBottom]);\n    }\n\n    const drawCommitToClusterArrow = (selection) => {\n        if (selection === null) return;\n        drawSelectionArrow(\"arrowSvg\",\n            [[selection[0], state.clusterOverviewSliderWidth],\n            [selection[1], state.clusterOverviewWidth]], [0, arrowSvgHeight]\n        );\n    }\n\n    const getCommitBrushSelectionsTriggeredByTemporalBrush = (selection, commitSeqXScale, bins, globalStartSeq) => {\n        if (selection === null) return null;\n// console.log(\"getCommitBrushSelectionsTriggeredByTemporalBrush\", d3.event.target);\n        let newXScale = d3.scaleLinear().rangeRound([0, bins.length - 1]).domain(commitSeqXScale.range());\n        let startBinIndex, endBinIndex;\n        [startBinIndex, endBinIndex] = selection.map(d => newXScale(d));\n// console.log(\"before startBinIndex, endBinIndex\", startBinIndex, endBinIndex, bins)\n\n        for (; startBinIndex < endBinIndex; startBinIndex++) {\n            if (bins[startBinIndex].length !== 0) break;\n        }\n        for (; endBinIndex > startBinIndex; endBinIndex--) {\n            if (bins[endBinIndex].length !== 0) break;\n        }\n// console.log(\"startBinIndex, endBinIndex\", startBinIndex, endBinIndex, bins, commitSeqXScale)\n\n        if (bins[startBinIndex] === undefined) {\n            return null;\n        } else {\n// console.log(\"return\", [commitSeqXScale(bins[startBinIndex][0].seq - globalStartSeq), commitSeqXScale(bins[endBinIndex].slice(-1)[0].seq - globalStartSeq)])\n            return [commitSeqXScale(bins[startBinIndex][0].seq - globalStartSeq), commitSeqXScale(bins[endBinIndex].slice(-1)[0].seq - globalStartSeq)];\n        }\n    }\n\n    const commitBrushFunc = (selection, commitSeqXScale) => {\n        console.log(\"brushed width x\", d3.event, selection);\n        if (selection === null) return null;\n\n        let commitSeqScale = d3.scaleLinear().range([0, globalFilteredNodeList.length - 1]).domain(commitSeqXScale.range());\n        let commitSeqSelection = selection.map(d => Math.round(commitSeqScale(d)));\n\n        // STATE UPDATE\n        state.udpateCommitsByTemporalBrush(commitSeqSelection.map(d => d + globalStartSeq));\n// console.log(\"###udpateCommitsByTemporalBrush\", commitSeqSelection.map(d => d + globalStartSeq))\n        // handle deco\n        d3.select(\"#navigationSvg\").selectAll(\".handle\")\n            .style(\"stroke\", d3.schemeCategory10[0])\n            .style(\"fill\", d3.schemeCategory10[0])\n            .style(\"fill-opacity\", 0.2)\n            ;\n\n        return commitSeqSelection;\n    }\n\n    const drawSelectionArrow = (svg, rangeX, rangeY) => {\n        d3.select(\"#\" + svg).selectAll(\".rangeArrowLine\").remove();\n        d3.select(\"#\" + svg).selectAll(\".rangeArrowLine\")\n            .data(rangeX)\n            .enter()\n            .append(\"line\")\n            .attr(\"class\", \"rangeArrowLine\")\n            .attr(\"id\", svg + \"ArrowLine\")\n            .attr(\"x1\", d => d[0])\n            .attr(\"x2\", d => d[1])\n            .attr(\"y1\", rangeY[0])\n            .attr(\"y2\", rangeY[1])\n            .style(\"stroke-width\", 1)\n            .style(\"stroke\", d3.schemeCategory10[0])\n            ;\n    }\n\n    const getTemporalLabelByDate = (dt) => {\n        return new Date(dt).toISOString().slice(2, 10);\n    }\n\n    // LOGIC\n    let navigationSvg = d3.select(\"#navigationSvg\");\n    let commitSeqXScale = d3.scaleBand().range([marginLeft, width - marginLeft]).domain(d3.range(globalFilteredNodeList.length));\n    // let colorScale = d3.scaleLinear().range([\"white\", \"black\"]).domain([0, 1000]);\n\n    ////////////////////////////////////////////\n    // commit rects\n    navigationSvg.append(\"g\")\n        .attr(\"id\", \"commitRects\")\n        .attr(\"transform\", \"translate(0 \" + focusRelativeHeightPosition + \")\")\n        .selectAll(\"line\")\n        .data(globalFilteredNodeList)\n        .enter()\n        .append(\"rect\")\n        .attr(\"id\", d => \"commitRect\" + d.seq)\n        .attr(\"class\", \"commitRect\")\n        .attr(\"x\", d => commitSeqXScale(d.seq - globalStartSeq))\n        .attr(\"y\", 0)\n        .attr(\"width\", commitSeqXScale.bandwidth())\n        .attr(\"height\", focusHeight)\n        // .style(\"fill\", d => colorScale(d.cloc))\n        .style(\"fill\", d => {\n            if (d.isMajorRelease) return AttributeColors.highlight[0];\n            else if (d.isRelease) return AttributeColors.highlight[2];\n            else return AttributeColors[\"commit\"][2];\n            // return \"AAA\";\n        })\n        .style(\"stroke-width\", d => (d.isRelease === true ? \"1px\" : \"0\"))\n        .style(\"stroke\", d => (d.isMajorRelease ? AttributeColors.highlight[0] : (d.isRelease ? AttributeColors.highlight[2] : \"\")))\n        .style(\"stroke-opacity\", 0.8);\n    ;\n    \n    // COMMIT SEQ AXIS\n//     let commitSeqAxis = d3.axisBottom(commitSeqXScale);    \n//     const commitSeqTickCount = 10;\n//     const commitSeqTickInterval = parseInt((commitSeqXScale.domain().slice(-1)[0] - commitSeqXScale.domain()[0]) / commitSeqTickCount);\n\n//     console.log(\"seqscale\", commitSeqTickInterval, commitSeqXScale.domain(), commitSeqXScale.domain().filter( (d, i) => (i % commitSeqTickInterval) === (commitSeqTickInterval - 1)));\n\n//     let commitSeqAxisArea = d3.select(\"#arrowSvg\").append(\"g\")\n//         .attr(\"id\", \"commitSeqAxis\")\n//         .call(\n//             commitSeqAxis.tickSizeOuter(commitSeqAxis.tickSize()).tickSize(commitSeqAxis.tickSize() * -1)\n//             .tickValues( commitSeqXScale.domain().filter( (d, i) => {\n//                 return (i % commitSeqTickInterval) === (commitSeqTickInterval - 1);\n// //                 const diff = e - s;\n// // console.log(\"range\", diff, s, e, diff / 10,  (i%(diff/10)))\n// //                 if ( (e - s) > tickCount) {\n// //                     return (i % ( diff / 10)) === 0;\n// //                 } else {\n// //                     return true;\n// //                 }\n//             }))\n//         );\n//     commitSeqAxisArea.select(\"path\").style(\"stroke-opacity\", 0);\n//     commitSeqAxisArea.selectAll(\".tick line\").style(\"stroke-opacity\", 0);\n//     commitSeqAxisArea.selectAll(\"text\").style(\"font-size\", \"8px\");\n\n\n    ///////////////////////////////\n    // tagging\n    ///////////////////////////////\n    // Temporal Area chart Filter (binning by day)\n    let startDate = parseTime(globalFilteredNodeList[0].commit.date);\n    let endDate = parseTime(globalFilteredNodeList.slice(-1)[0].commit.date);\n// console.log(startDate, endDate)\n    let xTemporalScale = d3.scaleTime().domain([startDate, endDate]).range([marginLeft, width - marginLeft]);\n    let histogram = d3.histogram()\n        .value(d => parseTime(d.commit.date))\n        .domain(xTemporalScale.domain())\n        .thresholds(xTemporalScale.ticks(d3.timeDay))\n        ;\n    let bins = histogram(globalFilteredNodeList).map(d => {\n        d.cloc = d.reduce( (prev, node) => prev + node.cloc, 0);\n        return d;\n    });\n\n    let temporalYSizeHalf = (temporalAreaHeight - temporalAxisHeight) / 2;\n    let yTemporalCommitCountScale = d3.scaleLinear().range([temporalYSizeHalf, 0]).domain([0, d3.max(bins, d => d.length)]);\n    let yTemporalCLOCScale = d3.scaleLinear().range([temporalYSizeHalf, 0]).domain([0, d3.max(bins, d => d.cloc)]);\n\n    let tempArea = navigationSvg.append(\"g\")\n// console.log(\"bins\", bins, temporalAreaHeight)\n    tempArea.append(\"path\")\n        .attr(\"transform\", \"translate(0, \" + (temporalAxisHeight) + \")\")\n        .datum(bins)\n        .attr(\"fill\", AttributeColors[\"commit\"][0])\n        .attr(\"stroke\", AttributeColors[\"commit\"][0])\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"opacity\", 0.9)\n        .attr(\"d\", d3.area()\n            .x(d => xTemporalScale(d.x0))\n            .y0(temporalYSizeHalf)\n            .y1(d => yTemporalCommitCountScale(d.length))\n            .curve(d3.curveCatmullRom.alpha(0.4))\n        )\n    ;\n    tempArea.append(\"path\")\n        .attr(\"transform\", \"translate(0, \" + (temporalAxisHeight + temporalYSizeHalf) + \")\")\n        .datum(bins)\n        .attr(\"fill\", AttributeColors[\"commit\"][0])\n        .attr(\"stroke\", AttributeColors[\"commit\"][0])\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"opacity\", 0.9)\n        .attr(\"d\", d3.area()\n            .x(d => xTemporalScale(d.x0))\n            .y0(temporalYSizeHalf)\n            .y1(d => yTemporalCLOCScale(d.cloc))\n            .curve(d3.curveCatmullRom.alpha(0.4))\n        )\n    ;\n    tempArea.append(\"text\")\n        .attr(\"x\", 7)\n        .attr(\"y\", temporalAxisHeight + 10)\n        .attr(\"text-anchor\", \"start\")\n        .style(\"font-size\", \"10px\")\n        .style(\"font-weight\", 500)\n        .text(\"COMMIT #\")\n    ;\n    tempArea.append(\"text\")\n        .attr(\"x\", 7)\n        .attr(\"y\", temporalAxisHeight + temporalYSizeHalf + 10)\n        .attr(\"text-anchor\", \"start\")\n        .style(\"font-size\", \"10px\")\n        .style(\"font-weight\", 500)\n        .text(\"CLOC\")\n    ;\n\n\n    let tempAxis = d3.axisTop(xTemporalScale);\n    tempArea.append(\"g\")\n        .call(tempAxis.tickSizeOuter(tempAxis.tickSize()).tickSize(tempAxis.tickSize() * -1))\n        .attr(\"transform\", \"translate(\" + 0 + \",\" + (temporalAxisHeight - 1) + \")\")\n        .selectAll(\".tick line\")\n        .attr(\"transform\", \"translate(\" + 0 + \",\" + tempAxis.tickSize() / 2 + \")\")\n        ;\n\n    let releaseTagNodeList = globalFilteredNodeList.filter(d => d.isRelease);\n    let releaseBins = histogram(releaseTagNodeList);\n    // let bar = tempArea.selectAll(\".bar\")\n    //     .data(releaseBins)\n    //     .enter().append(\"g\")\n    //     .attr(\"class\", \"bar\")\n    // bar.append(\"rect\")\n    //     .attr(\"x\", d => xTemporalScale(d.x0))\n    //     .attr(\"y\", temporalAxisHeight)\n    //     .attr(\"width\", d => { return xTemporalScale(d.x1) - xTemporalScale(d.x0); })\n    //     .attr(\"height\", d => (d.length > 0 ? temporalAreaHeight - temporalAxisHeight : 0))\n    //     .style(\"opacity\", 0.3)\n    //     .style(\"stroke\", d => (d.filter(node => node.isMajorRelease).length > 0 ? \"black\" : \"#AAAAAA\"))\n    //     ;\n\n    ///////////////////////////////////////////////\n    // release link between commitseq and temporal\n    // console.log(\"link bt\", releaseTagNodeList)\n    let links = navigationSvg.append(\"g\");\n    links.selectAll(\"line\")\n        .data(releaseTagNodeList)\n        .enter()\n        .append(\"line\")\n        .attr(\"class\", \"linkBetweenCT\")\n        .attr(\"x1\", d => xTemporalScale(parseTime(d.commit.date)))\n        .attr(\"x2\", d => commitSeqXScale(d.seq - globalStartSeq))\n        .attr(\"y1\", temporalAreaHeight)\n        .attr(\"y2\", focusRelativeHeightPosition)\n        .style(\"stroke-width\", 1)\n        .style(\"stroke\", d => (d.isMajorRelease ? \"black\" : \"#BBBBBB\"))\n        .style(\"opacity\", 0.3)\n        .on(\"mouseenter\", function (d) {\n            d3.select(this).style(\"stroke\", \"red\").style(\"stroke-width\", \"3px\");\n            d3.select(\"#releaseLabelDiv\")\n                .text(d.releaseTagString)\n                .style(\"left\", (d3.event.pageX) + \"px\")\n                .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                .style(\"opacity\", 1)\n                ;\n            d3.select(\"#commitRect\" + d.seq).attr(\"height\", focusHeight + 10).attr(\"y\", -5);\n        })\n        .on(\"mouseleave\", function (d) {\n            d3.select(this)\n                .style(\"stroke\", (d.isMajorRelease ? \"black\" : \"#BBBBBB\"))\n                .style(\"stroke-width\", \"1px\")\n                ;\n            d3.select(\"#commitRect\" + d.seq).attr(\"height\", focusHeight).attr(\"y\", 0);\n            d3.select(\"#releaseLabelDiv\").style(\"opacity\", 0.2);\n        })\n        ;\n    ;\n    links.selectAll(\"text\")\n        .data(releaseTagNodeList.filter(d => d.isMajorRelease && d.releaseTagString.split(\".\")[1] === \"0\"))\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", d => commitSeqXScale(d.seq))\n        .attr(\"y\", focusRelativeHeightPosition)\n        .attr(\"text-anchor\", \"end\")\n        .text(d => d.releaseTagString.split(\".\").slice(0, 2).join(\".\"))\n        .style(\"transform\", \"rotate(45)\")\n        ;\n\n\n    ////////////////////////////////////////////////\n    // brushes\n    let commitBrush = d3.brushX()\n        .extent([[marginLeft, focusRelativeHeightPosition], [width - marginLeft, height]]);\n    let temporalBrush = d3.brushX()\n        .extent([[marginLeft, temporalAxisHeight], [width - marginLeft, temporalAreaHeight]]);\n    navigationSvg.append(\"g\")\n        .attr(\"id\", \"commitBrush\")\n        .attr(\"class\", \"brush\")\n        .call(commitBrush)\n        .call(commitBrush.move, commitSeqXScale.range());\n    navigationSvg.append(\"g\")\n        .attr(\"id\", \"temporalBrush\")\n        .attr(\"class\", \"brush\")\n        .call(temporalBrush)\n        .call(temporalBrush.move, commitSeqXScale.range())\n        ;\n\n    temporalBrush.on(\"brush\", () => {\n        drawTemporalToCommitArrow();\n        handleTemporalLabel(d3.event.selection, xTemporalScale);\n    });\n    commitBrush.on(\"brush\", () => {\n        drawCommitToClusterArrow(d3.event.selection);\n        drawTemporalToCommitArrow();\n// console.log(\"commitBrush\", d3.event.selection, commitSeqXScale)\n        handleCommitLabel(d3.event.selection, commitSeqXScale, globalStartSeq);\n    });\n\n    temporalBrush.on(\"end\", () => {\n        if (d3.event.selection === null) return;\n        let newSelection = getCommitBrushSelectionsTriggeredByTemporalBrush(d3.event.selection, commitSeqXScale, bins, globalStartSeq);\n\n        d3.select(\"#commitBrush\").call(commitBrush.move, newSelection);\n        drawTemporalToCommitArrow();\n    });\n    commitBrush.on(\"end\", () => {\n        if (d3.event.selection === null) return;\n        let brushedSeqs = commitBrushFunc(d3.event.selection, commitSeqXScale);\n        let newSelection = brushedSeqs.map(d => xTemporalScale(parseTime(globalFilteredNodeList[d].commit.date)));\n\n        let brushG = d3.select(\"#temporalBrush\");\n        brushG.select(\".selection\").attr(\"x\", newSelection[0]).attr(\"width\", newSelection[1] - newSelection[0]);\n        brushG.select(\".handle--e\").attr(\"x\", newSelection[1] - brushHandleSize / 2);\n        brushG.select(\".handle--w\").attr(\"x\", newSelection[0] - brushHandleSize / 2);\n        ;\n        brushG._groups[0][0].__brush.selection[0][0] = newSelection[0];\n        brushG._groups[0][0].__brush.selection[1][0] = newSelection[1];\n        drawTemporalToCommitArrow();\n        handleTemporalLabel(newSelection, xTemporalScale);\n    });\n\n    navigationSvg.select(\"#commitBrush\").select(\".selection\")\n        .attr(\"asdf\", \"asdf\")\n        .style(\"fill\", AttributeColors[\"commit\"][0])\n        .style(\"fill-opacity\", 0.2)\n        ;\n    navigationSvg.select(\"#temporalBrush\").select(\".selection\")\n        .style(\"fill\", AttributeColors[\"commit\"][0])\n        .style(\"fill-opacity\", 0.2)\n        ;\n\n    // handle deco\n    d3.select(\"#navigationSvg\").selectAll(\".handle\")\n        .style(\"stroke\", d3.schemeCategory10[0])\n        .style(\"fill\", d3.schemeCategory10[0])\n        .style(\"fill-opacity\", 0.2)\n        ;\n    drawTemporalToCommitArrow();\n    drawCommitToClusterArrow(commitSeqXScale.range());\n    handleTemporalLabel(xTemporalScale.range(), xTemporalScale);\n    handleCommitLabel(commitSeqXScale.range(), commitSeqXScale, globalStartSeq);\n\n// console.log(\"function state,\", state, commitSeqXScale.range(), commitSeqXScale)\n\n    // state.setCommitBrush(commitBrush);\n    // state.setCommitSeqXScale(commitSeqXScale);\n\n    return [commitBrush, commitSeqXScale];\n}\n\nconst TemporalSelector = props => {\n// console.log(\"TemporalSelector render\");\n\n    const state = useSelector(state => ({\n        threshold: state.threshold,\n\n        titlePanelHeight: state.layout.titlePanelHeight,\n        temporalSelectorHeight: state.layout.temporalSelectorHeight,\n        temporalAreaHeight: state.layout.temporalAreaHeight,\n        width: state.layout.width,\n        leftPaneWidth: state.layout.leftPaneWidth,\n        clusterOverviewSliderWidth: state.layout.clusterOverviewSliderWidth,\n        clusterOverviewWidth: state.layout.clusterOverviewWidth,\n        arrowSvgHeight:30,      \n        \n        globalCommitSeqSelectionByTemporalFilter: state.globalCommitSeqSelectionByTemporalFilter,\n    }));\n    state.props = props;\n\n    const dispatch = useDispatch();\n    const udpateCommitsByTemporalBrush = (sel) => dispatch(actions.udpateCommitsByTemporalBrush(sel));\n    state.udpateCommitsByTemporalBrush = udpateCommitsByTemporalBrush;\n    const commitSeqSelectionByTemporalFilter = useSelector(state => state.commitSeqSelectionByTemporalFilter);\n\n    let isInitRef = useRef(true);\n    \n    useEffect( () => {\n        d3.select(\"#navigationSvg\").selectAll(\"g\").remove();\n        d3.select(\"#arrowSvg\").selectAll(\".rangeArrowLine\").remove();\n        // d3.select(\"#commitSeqAxis\").remove();\n\n        [commitBrush, commitSeqXScale] = navRender(props, state); //, state.commitSeqSelection);\n        udpateCommitsByTemporalBrush(state.globalCommitSeqSelectionByTemporalFilter);\n    }, [state.globalCommitSeqSelectionByTemporalFilter]);\n\n    useEffect( () => {\n        if (isInitRef.current) {\n            isInitRef.current = false;\n        } else {\nconsole.log(\"changed commitseqselection executed\", state, state.commitBrush, commitBrush, commitSeqXScale);\n            d3.select(\"#commitBrush\").call(commitBrush.move, commitSeqSelectionByTemporalFilter.map(d => commitSeqXScale(d) + commitSeqXScale.bandwidth()/2));\n        }\n    }, [commitSeqSelectionByTemporalFilter]);\n\n    return (\n        <div>\n            <div className=\"flexVerticalContainer\" style={{ width: state.width }}>\n                <div id=\"temporalLabelsDiv\"\n                    style={{\n                        position: \"relative\",\n                        zIndex: 1,\n                        float: \"left\",\n                        height: 0,\n                    }}\n                >\n                    <div id=\"temporalStartDiv\" className=\"rangeTooltip\" style={{ opacity: 1, top: state.temporalAreaHeight + 4 }}>\n                    </div>\n                    <div id=\"temporalEndDiv\" className=\"rangeTooltip\" style={{ opacity: 1, top: state.temporalAreaHeight + 4 }}>\n                    </div>\n                </div>\n                <div id=\"commitLabelsDiv\"\n                    style={{\n                        position: \"relative\",\n                        zIndex: 1,\n                        float: \"left\",\n                        height: 0,\n                    }}\n                >\n                    <div id=\"commitStartDiv\" className=\"rangeTooltip\" style={{ opacity: 1, top: state.temporalSelectorHeight  }}>\n                    </div>\n                    <div id=\"commitEndDiv\" className=\"rangeTooltip\" style={{ opacity: 1, top: state.temporalSelectorHeight  }}>\n                    </div>\n                </div>\n                <div>\n                    <svg id=\"navigationSvg\" width={state.width} height={state.temporalSelectorHeight} />\n                    <svg id=\"arrowSvg\" width={state.width} height={state.arrowSvgHeight} />\n                    <div id=\"releaseLabelDiv\" className=\"releaseLabelTooltip\" style={{ opacity: 0, }} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TemporalSelector;","import React, { useState, useEffect, useRef } from 'react';\nimport \"./ValueSlider.css\";\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport * as d3 from 'd3';\nimport { blueGrey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    height: 35,\n    width: 35,\n    margin: theme.spacing(0),\n    color: \"skyblue\",\n  },\n  button: {\n      height:40,\n      width:40,\n      margin: theme.spacing(0),\n      padding: 0,\n      minWidth: 40\n  }\n}));\n\nconst PrettoSlider = withStyles({\n    root: {\n      color: \"#78909c\",\n      width: 100,\n      height: 100\n    },\n    thumb: {\n      height: 20,\n      width: 20,\n      backgroundColor: \"#fff\",\n      border: \"2px solid currentColor\",\n      marginTop: -8,\n      marginLeft: -12,\n      \"&:focus,&:hover,&$active\": {\n        boxShadow: \"inherit\"\n      }\n    },\n    active: {},\n    valueLabel: {\n      left: \"calc(-50%)\"\n    },\n    track: {\n      height: 20,\n      borderRadius: 7\n    },\n    rail: {\n      height: 20,\n      borderRadius: 5\n    },\n    mark: {\n      height: 1,\n      width: 8,\n    }\n  })(Slider);\n\n\nconst ValueSlider = props => {\n    // const classes = useStyles();\n    const [stepValue, setStepValue] = useState(props.defaultStepValue);\n    const [max, setMax] = useState(1);\n\n    const index = (props.index === undefined ? \"\" : props.index);\n    const divId = props.name + \"ValueSlider\" + index;\n\n    const maxStepCount = 50;\n    const thresholdList = useRef(undefined);\n\n    useEffect( () => {\n// console.log(\"valueslider useEffect called, th=\", props, thresholdList, (props.thresholdList !== undefined ? props.thresholdList.slice(0, maxStepCount).push(props.thresholdList.slice(-1)[0]) : \"aaa\"))\n      let arrayIndices = [];//FromMaxStep = d3.range([0, maxStepCount]);\n      let fi = 0, aIndex = 0;\n      while (aIndex < props.thresholdList.length - maxStepCount) {\n        arrayIndices.push(maxStepCount + aIndex);\n        aIndex += ++fi;\n      }\n// console.log(\"arrayIndices\", arrayIndices);\n\n      thresholdList.current = (props.thresholdList !== undefined && props.thresholdList.length > maxStepCount \n        ? props.thresholdList.slice(0, maxStepCount).concat(arrayIndices.map(d => props.thresholdList[d])).concat(props.thresholdList.slice(-1)[0])\n        : props.thresholdList);\n\n      if (thresholdList.current !== undefined && thresholdList.current.length > 0) {\n        let sv = thresholdList.current.indexOf(props.threshold);\n        if (sv < 0) {\n          for (let fi = 0; fi <= thresholdList.current.length - 2; fi++) {\n            if (props.threshold > thresholdList.current[fi] && props.threshold <= thresholdList.current[fi+1]) {\n// console.log(\"break, \", sv, props.threshold, thresholdList[fi], thresholdList[fi+1], fi)\n              sv = fi + 1;\n              break;\n            }\n            if (fi === thresholdList.current.length - 2) sv = fi;\n          }\n        }\n// console.log(\"--\", props.threshold, sv, thresholdList, );\n          \n        setStepValue(sv);\n        setMax(thresholdList.current.length - 1);\n      }\n\n      d3.select(\"#\" + divId).selectAll(\".MuiSlider-rail\").style(\"width\", \"10px\");\n      d3.select(\"#\" + divId).selectAll(\".MuiSlider-track\").style(\"width\", \"10px\");\n    }, [props.thresholdList]);\n\n// console.log(\"valueslider\", stepValue, max, props, props.defaultStepValue);\n    return (\n        <div id={divId} className=\"flexVerticalContainer\" style={{width:props.width}}>\n            <div align=\"center\"\n                style={{\"margin\":\"0px 10px 5px 0px\", \"height\":props.height - 30}}>\n                <PrettoSlider\n                    // defaultValue={props.threshold}\n                    value={stepValue}\n                    onChangeCommitted={(event, newValue) => {\n                        setStepValue(newValue);\n                        props.changeThreshold(thresholdList.current[newValue]);\n                    }}\n                    onChange={(event, newValue) => {\n                        setStepValue(newValue);\n                    }}\n                    // aria-labelledby=\"vertical-slider\"\n                    min={0}\n                    max={max}\n                    marks={max < 100 ? true : undefined}\n                    step={1}\n                    orientation=\"vertical\"\n                    valueLabelDisplay=\"auto\"\n                    // onChangeCommitted={(threshold) => props.changeThreshold(threshold)}\n                />\n            </div>\n            <div align=\"center\" style={{height:\"25px\", fontSize: \"9px\", fontWeight: \"600\"}}>CLSTR STEP</div>\n            {/* <div style={{height:\"50px\", margin: \"0px 10px 0px 5px\"}}>\n                <Button className={classes.button} variant=\"outlined\">\n                    <RefreshRoundedIcon className={classes.icon} onClick={() => props.changeThreshold(threshold)}/>\n                </Button>\n            </div> */}\n        </div>\n    );\n}\n\nexport default ValueSlider;","\nexport class FileStructureAnalyzer {\n    constructor(rawData, hideFiles, file2Author) {\n\n\n\n        this.fileStructure = {\n            \"name\" : \"project\",\n            \"children\" : []\n        }\n        this.hideFiles = hideFiles;\n\n        // console.log(this.fileStructure);\n\n        //console.log(rawData);\n\n        console.log(file2Author);\n\n\n        for (let path in rawData) {\n\n            //console.log(this.fileStructure);\n\n            this.analyzePath(path, rawData[path], this.fileStructure[\"children\"], file2Author[path])\n\n        }\n        // console.log(this.fileStructure);\n\n        this.compressStructure(this.fileStructure);\n        this.updateAuthorInfo(this.fileStructure);\n\n        console.log(this.fileStructure);\n\n        // console.log(this.fileStructure);\n\n    }\n\n\n    analyzePath(path, score, root, author) {\n        let pathDirectories = path.split(\"/\");\n        let fileName = pathDirectories[pathDirectories.length - 1];\n        if(this.hideFiles.includes(fileName)) return;\n\n       // console.log(path, score, root, author);\n\n        //let size = root.length;\n        if (!path.includes(\"/\")) {\n            root.push({\n                \"name\" : path,\n                \"value\" : score, \n                \"authors\" : author\n            });\n            return;\n        }\n        let curDirectory = pathDirectories[0];\n        let subPath = path.substring(curDirectory.length + 1)\n\n        for (let child in root) {\n\n            // console.log(rochild, curDirectory, child[\"name\"] == curDirectory)\n\n            if(root[child][\"name\"] === curDirectory && root[child][\"children\"] !== undefined) {\n                this.analyzePath(subPath, score, root[child][\"children\"], author);\n                return;\n            }\n        }\n\n        root.push({\n            \"name\" : curDirectory,\n            \"children\" : []\n        });\n        \n        this.analyzePath(subPath, score, root[root.length - 1][\"children\"], author);\n    }\n\n    compressStructure(root) {\n\n        if(root[\"children\"] == undefined) return;\n\n        for(let childNum in root[\"children\"]) {\n            this.compressStructure(root[\"children\"][childNum]);\n        }\n\n        if(root[\"children\"].length == 1 && root[\"name\"] != \"project\") {\n            root[\"name\"] = root[\"name\"] + \"/\" + root[\"children\"][0][\"name\"];\n            if(root[\"children\"][0][\"value\"] == undefined)\n                root[\"children\"] = root[\"children\"][0][\"children\"];\n            else{\n                root[\"value\"] = root[\"children\"][0][\"value\"];\n                delete root.children;\n            }\n        }\n    \n    }\n\n    updateAuthorInfo(root) {\n        if(root[\"children\"] == undefined) {\n            return root[\"authors\"];\n        }\n\n        let authors = {};\n        for(let childNum in root[\"children\"]) {\n            let childAuthors = this.updateAuthorInfo(root[\"children\"][childNum]);\n            for (let author in childAuthors) {\n                if(authors.hasOwnProperty(author)) {\n                    authors[author].insertions += childAuthors[author].insertions;\n                    authors[author].deletions += childAuthors[author].deletions;\n                    authors[author].count += childAuthors[author].count;\n                }\n                else {\n                    let dict = {};\n                    dict.insertions = childAuthors[author].insertions;\n                    dict.deletions = childAuthors[author].deletions;\n                    dict.count = childAuthors[author].count;\n                    authors[author] = dict;\n                }\n            }\n            \n        }\n\n        root[\"authors\"] = authors;\n\n        return authors;\n    }\n\n    getFileStructure() {\n        return this.fileStructure;\n    }\n}\n\nexport default FileStructureAnalyzer;","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3';\nimport FileStructureAnalyzer from './analyzer/FileStructureAnalyzer'\nimport { useSelector } from 'react-redux';\nimport { AttributeColors } from \"./ColorClasses\"\nimport Select from '@material-ui/core/Select'\n\nconst FileIcicleSummary = props => {\n\n    const { width, height, rawModLocData, rawInsertLocData, rawDeleteLocData, rawModNumData, file2Author, pageNum } = props;\n    const { summaryByLOC, hideFiles } = useSelector(state => state.summaryParameters);\n\n    console.log(file2Author);\n\n    let partition = data => {\n        const root = d3.hierarchy(data)\n            .sum(d => d.value)\n            .sort((a, b) => b.height - a.height || b.value - a.value);\n        return d3.partition()\n            .size([height, ((root.height + 1) * width / pageNum)])\n            (root);\n    }\n\n    let format = d3.format(\",d\")\n\n    function rectHeight(d) {\n        return (d.x1 - d.x0 - Math.min(1, (d.x1 - d.x0) / 2));\n    }\n    function labelVisible(d) {\n        return ((d.x1 - d.x0) > 16);\n    }\n\n    let focus = useRef();\n    let root = useRef();\n\n    let currentCLocMode = useRef(\"sum\");\n\n    useEffect(() => {\n        const svg = d3.select(\"#icicleSvg\");\n        svg.selectAll(\"g\").remove();\n\n        let fileAnalyzer;\n        // console.log(\"rawData\", rawModLocData, rawInsertLocData, rawDeleteLocData);\n\n        if (summaryByLOC) {\n            let rawModData;\n            switch(currentCLocMode.current) {\n                case \"sum\" : rawModData = rawModLocData; break;\n                case \"insertion\" : rawModData = rawInsertLocData; break;\n                case \"deletion\" : rawModData = rawDeleteLocData; break;\n            }\n            fileAnalyzer = new FileStructureAnalyzer(rawModData, hideFiles, file2Author);\n        }\n        else\n            fileAnalyzer = new FileStructureAnalyzer(rawModNumData, hideFiles, file2Author);\n\n        let data = fileAnalyzer.getFileStructure();\n\n        // function rectHeight(d) {\n        //     return (d.x1 - d.x0 - Math.min(1, (d.x1 - d.x0) / 2));\n        // }\n\n        function clicked(p) {\n            try {\n                focus.current = focus.current === p ? p = p.parent : p;\n\n                let widthScale;\n                let curHeight = focus.current.height + 1;\n                if (focus.current.data.name === \"project\") curHeight--;\n                if (curHeight < pageNum)\n                    widthScale = pageNum / curHeight;\n                else\n                    widthScale = 1;\n\n                let isRoot = false;\n                if (focus.current.data.name === \"project\")\n                    isRoot = true;\n                if (isRoot) {\n                    root.current.each(d => d.target = {\n                        x0: ((d.x0 - p.x0) / (p.x1 - p.x0) * height),\n                        x1: ((d.x1 - p.x0) / (p.x1 - p.x0) * height),\n                        y0: ((d.y0 - p.y0) - width / pageNum),\n                        y1: ((d.y1 - p.y0) - width / pageNum)\n                    });\n                }\n                else {\n                    root.current.each(d => d.target = {\n                        x0: ((d.x0 - p.x0) / (p.x1 - p.x0) * height),\n                        x1: ((d.x1 - p.x0) / (p.x1 - p.x0) * height),\n                        y0: (d.y0 - p.y0),\n                        y1: (d.y1 - p.y0)\n                    });\n                }\n                let cell = d3.selectAll(\".icicleTreeCells\");\n                let rect = d3.selectAll(\".icicleTreeRects\");\n                let text = d3.selectAll(\".icicleTreeTexts\");\n                let tspan = d3.selectAll(\".icicleTreeTspans\")\n\n\n                // console.log(widthScale);\n                const t = cell.transition().duration(750)\n                    .attr(\"transform\", d => `translate(${d.target.y0 * widthScale},${d.target.x0})`);\n\n                rect.transition(t).attr(\"height\", d => rectHeight(d.target))\n                    .attr(\"width\", d => (d.y1 - d.y0 - 1) * widthScale);\n                text.transition(t).attr(\"fill-opacity\", d => labelVisible(d.target) ? 1 : 0);\n                tspan.transition(t).attr(\"fill-opacity\", d => labelVisible(d.target) ? 0.7 : 0);\n            } catch (e) {\n                console.log(\"debugging\");\n            }\n        }\n\n        root.current = partition(data);\n        focus.current = root.current;\n        // console.log(focus);\n\n        let widthScale;\n        let curHeight = focus.current.height;\n        if (curHeight < pageNum)\n            widthScale = pageNum / curHeight;\n        else\n            widthScale = 1;\n\n        const cell = svg.selectAll(\"g\")\n            .data(root.current.descendants())\n            .join(\"g\")\n            .attr(\"class\", \"icicleTreeCells\")\n            .attr(\"transform\", d => `translate(${(d.y0 - width / pageNum) * widthScale},${d.x0})`)\n            .attr(\"id\", d => d.data.name);\n\n        const rect = cell.append(\"rect\")\n            .attr(\"width\", d => (d.y1 - d.y0 - 1) * widthScale)\n            .attr(\"height\", d => rectHeight(d))\n            .attr(\"class\", \"icicleTreeRects\")\n            .style(\"fill\", d => {\n                if (d.data.value !== undefined) return AttributeColors.file[3];\n                else return AttributeColors.dir[3];\n            })\n            .style(\"cursor\", \"pointer\")\n            .style(\"stroke-width\", \"0px\")\n            .on(\"click\", clicked)\n\n        const text = cell.append(\"text\")\n            .attr(\"class\", \"icicleTreeTexts\")\n            .style(\"user-select\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 4)\n            .attr(\"y\", 13)\n            .style(\"font-weight\", 400)\n            .attr(\"fill-opacity\", d => labelVisible(d) ? 1 : 0)\n            .style(\"overflow\", \"visible\");\n\n        text.append(\"tspan\")\n            .text(d => {\n                if (d.data.children !== undefined)\n                    return d.data.name + \"/\";\n                else\n                    return d.data.name;\n            });\n\n        const tspan = text.append(\"tspan\")\n            .attr(\"class\", \"icicleTreeTspans\")\n            .attr(\"fill-opacity\", d => labelVisible(d) ? 0.7 : 0)\n            .text(d => ` ${format(d.value)}`);\n\n        let title = cell.append(\"title\")\n\n        title.append(\"tspan\").text(d => {\n            if (d.data.children !== undefined)\n                return d.data.name + \"/\" + \"\\n\";\n            else\n                return d.data.name + \"\\n\";\n        })\n        title.append(\"tspan\").text(d => {\n            if (summaryByLOC) return `${format(d.value)}` + \" lines modified\\n\"\n            else return `${format(d.value)}` + \" times touched\\n\"\n        })\n\n        title.append(\"tspan\").text(d => {\n            let authors = d.data.authors;\n\n            let authorArray = [];\n\n            if(summaryByLOC) {\n                if(currentCLocMode.current == \"sum\") {\n                    for(let author in authors) \n                        authorArray.push([author, authors[author].insertions + authors[author].deletions]);\n                }\n                else if(currentCLocMode.current == \"insertion\") {\n                    for(let author in authors) \n                        authorArray.push([author, authors[author].insertions]);\n                }\n                else {  // if deletion\n                    for(let author in authors) \n                        authorArray.push([author, authors[author].deletions]);\n                }\n            }\n            else {\n                for(let author in authors) \n                    authorArray.push([author, authors[author].count]);\n            }\n\n\n            authorArray.sort((a, b) => b[1] - a[1]);\n\n            let message = \"  \";\n            authorArray.forEach(node => {\n                message = message + \"\\n  \" + node[0] + \" :: \" + node[1];\n            })\n            // console.log(message);\n\n            return \"Contributors:\" + message;\n        })\n    }, [\n        summaryByLOC, hideFiles, rawModLocData, rawModNumData, file2Author\n    ])\n\n    function updateLOCType(event) {\n        let rawData;\n        switch (event.target.value) {\n            case \"sum\": rawData = rawModLocData; break;\n            case \"insertion\": rawData = rawInsertLocData; break;\n            case \"deletion\": rawData = rawDeleteLocData; break;\n        }\n        \n        switch (event.target.value) {\n            case \"sum\": currentCLocMode.current = \"sum\"; break;\n            case \"insertion\": currentCLocMode.current = \"insertion\"; break;\n            case \"deletion\": currentCLocMode.current = \"deletion\"; break;\n        }\n\n        let fileAnalyzer = new FileStructureAnalyzer(rawData, hideFiles, file2Author);\n        let data = fileAnalyzer.getFileStructure();\n        root.current = partition(data);\n        focus.current = root.current;\n\n        let widthScale;\n        let curHeight = focus.current.height;\n        if (curHeight < pageNum)\n            widthScale = pageNum / curHeight;\n        else\n            widthScale = 1;\n\n\n        let rootData = root.current.descendants();\n\n        let cell = d3.selectAll(\".icicleTreeCells\")\n            .data(rootData)\n            .join();\n\n        const t = cell.transition()\n            .duration(750)\n            .attr(\"transform\", d => `translate(${(d.y0 - width / pageNum) * widthScale},${d.x0})`)\n            .attr(\"id\", d => d.data.name);\n\n        // console.log(rootData);\n        // console.log(cell.select(\"rect\"));\n\n        cell.select(\"rect\")\n            .transition()\n            .duration(750)\n            .attr(\"width\", d => (d.y1 - d.y0 - 1) * widthScale)\n            .attr(\"height\", d => {\n                return rectHeight(d)\n            })\n            .style(\"fill\", d => {\n                if (d.data.value !== undefined) return AttributeColors.file[3];\n                else return AttributeColors.dir[3];\n            })\n\n        let text = cell.select(\"text\")\n            .style(\"user-select\", \"none\")\n            .attr(\"pointer-events\", \"none\")\n            .attr(\"x\", 4)\n            .attr(\"y\", 13)\n            .style(\"font-weight\", 400)\n            .attr(\"fill-opacity\", d => labelVisible(d) ? 1 : 0)\n            .style(\"overflow\", \"visible\");\n\n        text.selectAll(\"tspan\").remove();\n        text.append(\"tspan\")\n            .text(d => {\n                if (d.data.children !== undefined)\n                    return d.data.name + \"/\";\n                else\n                    return d.data.name;\n            });\n\n        text.append(\"tspan\")\n            .attr(\"class\", \"icicleTreeTspans\")\n            .attr(\"fill-opacity\", d => labelVisible(d) ? 0.7 : 0)\n            .text(d => ` ${format(d.value)}`);\n\n        cell.selectAll(\"title\").remove();\n\n        let title = cell.append(\"title\");\n\n        title.append(\"tspan\").text(d => {\n            if (d.data.children !== undefined)\n                return d.data.name + \"/\" + \"\\n\";\n            else\n                return d.data.name + \"\\n\";\n        });\n        title.append(\"tspan\").text(d => {\n            let str;\n            switch (event.target.value) {\n                case \"sum\": str = \" lines modified\\n\"; break;\n                case \"insertion\": str = \" lines inserted\\n\"; break;\n                case \"deletion\": str = \" lines deleted\\n\"; break;\n            }\n            return (`${format(d.value)}` + str);\n        });\n\n        title.append(\"tspan\").text(d => {\n            let authors = d.data.authors;\n\n            let authorArray = [];\n\n            if(summaryByLOC) {\n                if(currentCLocMode.current == \"sum\") {\n                    for(let author in authors) \n                        authorArray.push([author, authors[author].insertions + authors[author].deletions]);\n                }\n                else if(currentCLocMode.current == \"insertion\") {\n                    for(let author in authors) \n                        authorArray.push([author, authors[author].insertions]);\n                }\n                else {  // if deletion\n                    for(let author in authors) \n                        authorArray.push([author, authors[author].deletions]);\n                }\n            }\n            else {\n                for(let author in authors) \n                    authorArray.push([author, authors[author].count]);\n            }\n\n            authorArray.sort((a, b) => b[1] - a[1]);\n\n            let message = \"  \";\n            authorArray.forEach(node => {\n                message = message + \"\\n  \" + node[0] + \" :: \" + node[1];\n            })\n\n            return \"Contributors:\" + message;\n        });\n    }\n\n    return (\n        <div>\n            {summaryByLOC &&\n                <Select\n                    id={\"icicleTreeLocSelector\"}\n                    style={{ width: \"90px\", fontSize: \"12px\", height: \"12px\" }}\n                    onChange={updateLOCType}\n                    native\n                >\n                    <option value=\"sum\">Sum</option>\n                    <option value=\"insertion\">Insertion</option>\n                    <option value=\"deletion\">Deletion</option>\n                </Select>\n            }\n            <svg\n                id=\"icicleSvg\"\n                width={width}\n                height={summaryByLOC ? height - 18 : height}\n            ></svg>\n        </div>\n    );\n}\n\nexport default FileIcicleSummary;","import React, { useEffect, useRef, Fragment, } from 'react';\nimport { Table, TableRow, TableCell, TableBody, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport * as d3 from 'd3';\nimport { getScoreColor, AttributeColors, BranchColors } from './ColorClasses';\nimport { PreferenceList, ClusterData, DataTypeByNameMap, BranchTypes } from './analyzer/GithruClasses';\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport FileIcicleSummary from './FileIcicleSummary';\nimport WordCloud from 'wordcloud';\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    padding: 1,\n  },\n  tableCell: {\n    fontSize: \"12px\",\n    paddingLeft: 2,\n    paddingRight: 1,\n    paddingTop: 2,\n    paddingBottom: 2,\n    verticalAlign: \"text-top\",\n    minWidth: \"40px\"\n  },\n  nodeList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxHeight: \"450px\",\n    maxWidth: \"100%\",\n    overflowY: \"auto\",\n  },\n  bar: {\n    padding: 0,\n  },\n  div: {\n    font: \"14px bold\"\n  },\n  vseparator: {\n    width: \"100%\",\n    height: \"10px\"\n  },\n}));\n\n\nconst hover = (event) => {\n  event.target.style.textDecoration = \"underline\";\n  event.target.style.fontWeight = \"bold\";\n  // event.target.style.color = \"red\";\n  // event.target.style.fill = \"red\";\n}\nconst hout = event => {\n  event.target.style.textDecoration = \"\";\n  event.target.style.color = \"\";\n  event.target.style.fill = \"\";\n  event.target.style.fontWeight = \"400\";\n}\n\nfunction Cause(props) {\n  const { cluster, prefMap, gitAnalyzer, width } = props;\n\n  if (cluster.id === -1) return \"\";\n\n  const nodeList = cluster.nodeList;\n  if (nodeList.length > 1) {\n    let scoreSumMap = d3.range(nodeList.length - 1).reduce((prev, cur, i) => {\n      let scoreMap = gitAnalyzer.getScoreByPreferences(nodeList[cur], nodeList[cur + 1], prefMap);\n      // let scoreMap = scoreData[nodeList[cur].commit.no][nodeList[cur + 1].commit.no];\n      PreferenceList.forEach(prefName => {\n        let normedScore = +scoreMap[prefName] * prefMap[prefName];\n        if (i === 0) prev[prefName] = normedScore;\n        else prev[prefName] += normedScore;\n      });\n      return prev;\n    }, {});\n\n    let scoreSumList = Object.entries(scoreSumMap).map(d => [d[0], d[1] / (nodeList.length - 1)]);\n    scoreSumList.sort((a, b) => b[1] - a[1]);\n    let sum = scoreSumList.reduce((prev, cur) => { prev += cur[1]; return prev }, 0);\n    let pos = 0;\n\n    return (\n      <div id=\"causeDiv\"\n        className=\"flexContainer\"\n        height=\"20px\" width=\"100%\">\n        {scoreSumList.map((d, i) => {\n          let xWidth = width * d[1] / sum;\n          // let xPos = pos;\n          pos += xWidth;\n\n          return (\n            <div\n              key={i}\n              height=\"20px\"\n              style={{\n                fontSize: \"12px\",\n                width: xWidth,\n                background: getScoreColor(d[0], 3),\n                strokeWidth: 0,\n                overflow: \"hidden\",\n              }}\n            >\n              {d[0]}\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return (<div></div>);\n  }\n}\n\nconst BarChartSummary = (props) => {\n  const ref = useRef();\n  const yAxisHeight = 20;\n  // const itemHeight = 20;\n  const nameMargin = 2;\n\n  const { dataNameList, clusterData, width, height } = props;\n  const totalCount = clusterData.cluster.nodeCount;\n\n  const numByDataName = { \"authors\": 15, \"commitTypes\": 4, \"keywords\": 10 };\n\n  let dataList = dataNameList.map(dataName => {\n    let data = Object.entries(clusterData[dataName]);\n\n    // console.log(dataName, data)\n    if (dataName != \"keywords\") data.sort((a, b) => b[1] - a[1]);\n    else data.sort((a, b) => b[1][1] - a[1][1]);\n\n    return data.filter((d, i) => i < numByDataName[dataName]).map(d => {\n      if (dataName !== \"keywords\") d[1] = d[1] / totalCount;\n      else d[1] = d[1][0] / totalCount;\n      return d.concat(dataName)\n    }\n    );\n  });\n  // console.log(\"dataList\", dataList)\n  let authorList = dataList[0];\n  let commitTypeList = dataList[1];\n  let keywordList = dataList[2];\n\n  keywordList = keywordList.sort((a, b) => b[1] - a[1]);\n  console.log(keywordList);\n\n  // let keywordString = \"KEYWORDS: \";\n  // for(let word in keywordList) {\n  //   keywordString += keywordList[word][0];\n  //   keywordString += \", \"\n  // }\n  // keywordString = keywordString.slice(0, keywordString.length - 2)\n  // console.log(keywordString);\n\n  function processKey(word) {\n    if (word === undefined) return word;\n    return word.replace(/[`~! @#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n    // return replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(word, \".\", \"\"), \">\", \"\"), \"=\", \"\"), \"}\", \"\"), \"{\", \"\"), \" \", \"\"), \"/\", \"\");\n}\n\n\n\n  let authorRatio = 0.6;\n  let commitTypeRatio = 0.2;\n  \n  // let sortedAuthorList = dataList.reduce((prev, cur) => prev.concat(cur), []);\n  // console.log(sortedAuthorList)\n  let xScaleDomainMax = 1;\n  let xScale = d3.scaleLinear().domain([0, xScaleDomainMax]).range([0, width - nameMargin]);\n  let yAuthorScale = d3.scaleBand().domain(authorList.map(d => d[0])).range([0, (height - yAxisHeight) * authorRatio * 0.95]).paddingInner(0.1).paddingOuter(0.1);\n  let yCommitTypeScale = d3.scaleBand().domain(commitTypeList.map(d => d[0])).range([0, (height - yAxisHeight) * commitTypeRatio * 0.95]).paddingInner(0.1).paddingOuter(0.1);\n\n  useEffect(() => {\n    const svgAuthor = d3.select(\"#barStatAuthor\").attr(\"transform\", \"translate(0,\" + (0) + \")\");\n    const svgCommitType = d3.select(\"#barStatCommitType\").attr(\"transform\", \"translate(0,\" + (0) + \")\");\n    \n    svgAuthor.selectAll(\"g\").remove();\n    svgCommitType.selectAll(\"g\").remove();\n\n    const yAuthorAxis = d3.axisLeft(yAuthorScale).ticks(0).tickSizeInner(0).tickSizeOuter(0);\n    const yCommitTypeAxis = d3.axisLeft(yCommitTypeScale).ticks(0).tickSizeInner(0).tickSizeOuter(0);\n\n    const xAxis = d3.axisBottom(xScale).ticks(5).tickFormat(d3.format(\".0%\")).tickSizeOuter(0);\n    let textSize = 15;\n\n    ///////// 여기까지 햇숨\n\n    // auhor's detailed chart bar\n\n    let rectsAuthor = svgAuthor.selectAll(\"g\")\n      .data(authorList)\n      .enter()\n      .append(\"g\")\n      ;\n    rectsAuthor.append(\"rect\")\n      .attr(\"x\", nameMargin)\n      .attr(\"y\", d => yAuthorScale(d[0]))\n      .attr(\"width\", d => xScale(d[1]))\n      .attr(\"height\", yAuthorScale.bandwidth())\n      .style(\"stroke-width\", 0)\n      .style(\"fill\", d => AttributeColors[DataTypeByNameMap[d[2]]][1])\n      .style(\"fill-opacity\", 0.3)\n      ;\n    rectsAuthor.append(\"text\")\n      .attr(\"x\", nameMargin + 1)\n      .attr(\"y\", d => (yAuthorScale(d[0]) + yAuthorScale.bandwidth() - (yAuthorScale.bandwidth() - textSize) / 2))\n      .style(\"font-size\", \"12px\")\n      .style(\"font-weight\", \"400\")\n      .style(\"cursor\", \"pointer\")\n      .text(d => GitAnalyzer.getTextValue(d[2], d[0]))\n      .on(\"mouseover\", () => hover(d3.event))\n      .on(\"mouseout\", () => hout(d3.event))\n      .on(\"click\", d => props.registerFavoriteFragment([d[2], d[0]]));\n    ;\n\n    let xAxisRenderAuthor = svgAuthor.append(\"g\")\n      .attr(\"transform\", \"translate(\" + nameMargin + \",\" + (height - yAxisHeight) * (authorRatio * 0.95) + \")\")\n      .call(xAxis);\n    xAxisRenderAuthor.selectAll(\"text\").style(\"font-size\", \"10px\");\n    xAxisRenderAuthor.selectAll(\".domain\").style(\"stroke\", \"#AAAAAA\")\n      ;\n    let yAxisRenderAuthor = svgAuthor.append(\"g\")\n      .attr(\"transform\", \"translate(1, 0)\")\n      .call(yAuthorAxis);\n    yAxisRenderAuthor.selectAll(\"text\").style(\"font-size\", \"10px\");\n    yAxisRenderAuthor.selectAll(\".domain\").style(\"stroke\", \"#AAAAAA\")\n\n    // commit type's detailed char bar (TODO)\n\n\n    let rectsCommitType = svgCommitType.selectAll(\"g\")\n      .data(commitTypeList)\n      .enter()\n      .append(\"g\")\n      ;\n    rectsCommitType.append(\"rect\")\n      .attr(\"x\", nameMargin)\n      .attr(\"y\", d => yCommitTypeScale(d[0]))\n      .attr(\"width\", d => xScale(d[1]))\n      .attr(\"height\", yCommitTypeScale.bandwidth())\n      .style(\"stroke-width\", 0)\n      .style(\"fill\", d => AttributeColors[DataTypeByNameMap[d[2]]][1])\n      .style(\"fill-opacity\", 0.3)\n      ;\n    rectsCommitType.append(\"text\")\n      .attr(\"x\", nameMargin + 1)\n      .attr(\"y\", d => (yCommitTypeScale(d[0]) + yCommitTypeScale.bandwidth() - (yCommitTypeScale.bandwidth() - textSize) / 2))\n      .style(\"font-size\", \"12px\")\n      .style(\"font-weight\", \"400\")\n      .style(\"cursor\", \"pointer\")\n      .text(d => GitAnalyzer.getTextValue(d[2], d[0]))\n      .on(\"mouseover\", () => hover(d3.event))\n      .on(\"mouseout\", () => hout(d3.event))\n      .on(\"click\", d => props.registerFavoriteFragment([d[2], d[0]]));\n    ;\n\n    let xAxisRenderCommitType = svgCommitType.append(\"g\")\n      .attr(\"transform\", \"translate(\" + nameMargin + \",\" + (height - yAxisHeight) * (commitTypeRatio * 0.95) + \")\")\n      .call(xAxis);\n    xAxisRenderCommitType.selectAll(\"text\").style(\"font-size\", \"10px\");\n    xAxisRenderCommitType.selectAll(\".domain\").style(\"stroke\", \"#AAAAAA\")\n      ;\n    let yAxisRenderCommitType = svgCommitType.append(\"g\")\n      .attr(\"transform\", \"translate(1, 0)\")\n      .call(yCommitTypeAxis);\n    yAxisRenderCommitType.selectAll(\"text\").style(\"font-size\", \"10px\");\n    yAxisRenderCommitType.selectAll(\".domain\").style(\"stroke\", \"#AAAAAA\")\n\n    let max = 5;\n    let min = 3;\n\n    let aMin = keywordList[0][1];\n    let aMax = keywordList[0][1];\n\n    keywordList.forEach(node => {\n        if(node[1] > aMax) aMax = node[1];\n        if(node[1] < aMin) aMin = node[1];\n    })\n\n    keywordList.forEach(node => {\n        node[1] = ((node[1] - aMin) / (aMax - aMin)) * (max - min) + min;\n    })\n\n    console.log(AttributeColors.keyword[2])\n\n    WordCloud(document.getElementById(\"keywordsDetailedList\"), {\n      list: keywordList,\n      wait: 0,\n      rotateRatio: 0,\n      weightFactor: 3,\n      color: AttributeColors.keyword[1],\n      classes: function(word) {\n          return \"wordCloud wordCloud_\" + processKey(word); \n      },\n      hover: function(item, dimension, event) {\n          if(item !== undefined) {\n              d3.selectAll(\".wordCloud\")\n                .style(\"font-weight\", \"300\")\n                .style(\"opacity\", 0.5);\n              d3.selectAll(\".wordCloud_\" + processKey(item[0]))\n                .style(\"font-weight\", \"900\")\n                .style(\"opacity\", 1);\n          }\n      }\n\n    \n  });\n  d3.select(\"#keywordsDetailedList\")\n        .on(\"mouseleave\", function(d) {\n            d3.selectAll(\".wordCloud\")\n            .style(\"font-weight\", 300)\n            .style(\"opacity\", 1);\n        })\n        \n  \n\n  }, [clusterData]);\n\n  return (\n    // <div style={{\n    //overflowY:\"auto\", \n    // height:summaryHeight}}>\n    <div>\n      <div id=\"keywordsDetailedList\" style={{position: \"relative\", top: \"-40px\", width: \"151px\", height: \"120px\"}}>\n      </div>\n      <div className=\"flexVerticalContainer\" style={{ width: \"100%\", position: \"relative\", top: \"-40px\"}}>\n      {/* <div style={{font:\"14px bold\"}}>{dataName}</div> */}\n      <svg id={\"barStatAuthor\"} width=\"100%\" ref={ref} height={height * authorRatio }></svg>\n      <svg id={\"barStatCommitType\"} width=\"100%\" ref={ref} height={height * authorRatio}></svg>\n      </div>\n    \n    </div>\n\n  );\n}\n\nconst MessagePrint = (props) => {\n  let message = (props.message !== undefined && props.message !== null ? props.message : \"\");\n\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"wrap\", fontSize: \"10px\", marginLeft:props.marginLeft }}>\n      {message.trim().split(\"\\n\").map( (line, li) => \n        <Fragment key={li}>\n          {line.trim() !== \"\" && line.trim().split(\" \").map((word, i) => (\n            <div key={i} style={{ display: \"inline\", cursor: \"pointer\", }}>\n              <span\n                onMouseOver={hover}\n                onMouseOut={hout}\n                onClick={() => props.registerFavoriteFragment([\"keywords\", word])}\n              >\n                {word}\n              </span>\n              &nbsp;\n            </div>\n          ))}\n          {line.trim() !== \"\" && <br />}\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nconst NodeDetail = (props) => {\n  const classes = useStyles();\n  const { node, parentNode, registerFavoriteFragment, gitAnalyzer } = props;\n  // console.log(\"NodeDetail\", props);\n  const isParent = (parentNode === undefined && node.mergeNodes.length > 0);\n  const isChild = (parentNode !== undefined);\n  const className = (isChild ? \"commitChildRow\" + parentNode.seq : \"commitRow\" + node.seq);\n\n  const toggleRowShow = () => {\n    let childClass = \".\" + \"commitChildRow\" + node.seq;\n    // console.log(\"togrowshow\", d3.select(childClass).style(\"visibility\"));\n    let visible = d3.select(childClass).style(\"visibility\") === \"visible\";\n\n    d3.selectAll(childClass).style(\"visibility\", (visible ? \"collapse\" : \"\"));\n  }\n\n  return (\n    <TableRow\n      className={\"flexContainer \" + className}\n      style={{ visibility: (isChild ? \"collapse\" : \"\") }}\n    >\n      {props.useHeuristicMerge && (\n        <TableCell className={classes.tableCell} style={{ width: \"40px\", cursor: \"pointer\" }}>\n          <div align=\"center\"\n            onClick={isParent ? toggleRowShow : undefined}\n          // onClick = {parentNode !== undefined ? () => toggleRowShow : undefined}\n          >\n            {isChild ? \"+\" :\n              (isParent &&\n                <u>CM({node.mergeNodes.length})</u>\n              )\n            }\n          </div>\n          {/* <div>{(hasMergeNodes ? \"M(\" + node.mergeNodes.length + \")\" : (isMergeNode ? \"⎿\" : \"\"))}</div> */}\n        </TableCell>\n      )}\n      {!props.useHeuristicMerge && (\n        <TableCell className={classes.tableCell} style={{ width: \"40px\", }}>\n          <div align=\"center\">\n            {node.isMergeTraversed && node.mergedToNode !== undefined &&\n              <Fragment>\n                CMed \n                <br />\n                <span style={{fontSize: \"8px\"}}>({node.mergedToNode.id.substring(0, 7)})</span>\n              </Fragment>\n            }\n          </div>\n          {/* <div>{(hasMergeNodes ? \"M(\" + node.mergeNodes.length + \")\" : (isMergeNode ? \"⎿\" : \"\"))}</div> */}\n        </TableCell>\n      )}\n      <TableCell className={classes.tableCell}>\n        <div\n          style={{ width: \"55px\", fontSize: \"10px\", cursor: \"pointer\" }}\n          onMouseOver={hover}\n          onMouseOut={hout}\n          onClick={() => registerFavoriteFragment([\"keywords\", node.commit.id.substring(0, 6)])}\n        >#{node.commit.id.substring(0, 6)}</div>\n      </TableCell>\n      <TableCell className={classes.tableCell}>\n        <div\n          style={{ width: \"55px\", fontSize: \"10px\" }}\n          // onMouseOver={hover}\n          // onMouseOut={hout}\n        // onClick={() => registerFavoriteFragment([\"date\", node.commit.date])}\n        >{GitAnalyzer.getTextValue(\"date\", GitAnalyzer.trimYYYYMMDD(node.commit.date)).substring(2, 10)}</div>\n      </TableCell>\n      <TableCell className={classes.tableCell} style={{cursor: \"pointer\"}}>\n        <div\n          style={{}}\n          onMouseOver={hover}\n          onMouseOut={hout}\n          onClick={() => registerFavoriteFragment([\"authors\", node.commit.author])}\n        >\n          {/* {GitAnalyzer.getTextValue(\"authors\", node.commit.author)} */}\n          {GitAnalyzer.getTextValue(\"authors#2\", node.commit.author)}\n        </div>\n      </TableCell>\n      <TableCell className={classes.tableCell} >\n        <div\n          style={{ width: \"30px\", fontSize: \"10px\", cursor: \"pointer\" }}\n          onMouseOver={hover}\n          onMouseOut={hout}\n          onClick={() => registerFavoriteFragment([\"commitTypes\", node.commit.commitType])}\n        >{GitAnalyzer.getTextValue(\"commitTypes\", node.commit.commitType).substring(0, 3)}</div>\n      </TableCell>\n      <TableCell className={classes.tableCell}>\n        <div className=\"flexVerticalContainer\">\n          <MessagePrint message={node.commit.message} registerFavoriteFragment={registerFavoriteFragment} />\n          {node.pullRequestHeads.map((prNum, i) => {\n            \n            let {message, body, state, merged} = gitAnalyzer.pullMapByNumber[prNum];\n            let closed = (state === \"closed\");\n            let type;\n\n            if (merged) {\n                type = BranchTypes.PR_MERGED;\n            } else if (closed) {\n                type = BranchTypes.PR_CLOSED;\n            } else {\n                type = BranchTypes.PR_OPEN;\n            }\n            \n            return (\n              <React.Fragment key={i}>\n                <div style={{fontWeight:\"900\", color: BranchColors[type] }}>[Pull Request #{prNum}] - {type.substring(3, type.length)}</div>\n                {message !== undefined && message !== null && message.trim() !== \"\" && \n                  <MessagePrint marginLeft={10} message={message} registerFavoriteFragment={registerFavoriteFragment}/>\n                }\n                {body !== undefined && body !== null && body.trim() !== \"\" && \n                  <MessagePrint marginLeft={10} message={body} registerFavoriteFragment={registerFavoriteFragment}/>\n                }\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </TableCell>\n      <TableCell className={classes.tableCell} >\n        <div\n          style={{ width: \"80px\", wordBreak: \"break-word\", }}\n        // onMouseOver={hover}\n        // onMouseOut={hout}\n        >\n          {node.commit.tags !== undefined && node.commit.tags.length > 0 && GitAnalyzer.getTextValue(\"tags\", node.commit.tags.join(\", \"))}\n          {node.commit.tags !== undefined && node.commit.tags.length > 0 && <br />}\n          {node.commit.branches !== undefined && GitAnalyzer.getTextValue(\"branches\", node.commit.branches.map(b => (b.startsWith(\"origin/\") ? b.split(\"origin/\")[1] : b)).join(\", \"))}\n        </div>\n      </TableCell>\n      {/* <TableCell className={classes.tableCell} style={{ width: \"50px\" }}>\n        <div\n          onMouseOver={hover}\n          onMouseOut={hout}\n        >{node.commit.branches !== undefined && GitAnalyzer.getTextValue(\"branches\", node.commit.branches.join(\", \"))}</div>\n      </TableCell> */}\n    </TableRow>\n  )\n}\n\nconst NodeDetailList = (props) => {\n  const classes = useStyles();\n  const { nodeList, gitAnalyzer, } = props;\n\n  return (\n    <Table size=\"small\" className={classes.table}>\n      <TableBody>\n        {nodeList.map((node, i) => {\n          return (\n            <React.Fragment key={node.id}>\n              <NodeDetail\n                node={node}\n                gitAnalyzer={gitAnalyzer}\n                registerFavoriteFragment={props.registerFavoriteFragment}\n                useHeuristicMerge={props.useHeuristicMerge}\n              />\n              {node.mergeNodes.map((mn, fi) => (\n                <NodeDetail\n                  gitAnalyzer={gitAnalyzer}\n                  parentNode={node}\n                  node={mn}\n                  key={fi}\n                  registerFavoriteFragment={props.registerFavoriteFragment}\n                  useHeuristicMerge={props.useHeuristicMerge}\n                />\n              ))}\n            </React.Fragment>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\n\n\n\n///////////////////////////////////////\n// DEFAULT HOOK\n///////////////////////////////////////\nconst GroupSummary = props => {\n  const classes = useStyles();\n  const { selectedClusterNode, width, gitAnalyzer, arrowStartX, arrowWidth, registerFavoriteFragment } = props;\n  //const clusterData = new ClusterData(selectedClusterNode.cluster, gitAnalyzer.corpusData);\n  const clusterData = selectedClusterNode.clusterData;\n  const { cluster } = clusterData;\n  const { nodeList } = cluster;\n  const marginLeft = 10;\n  // const width = props.width - marginLeft;\n  const height = 400;\n  const barChartWidth = 150;\n  const fileSummaryWidth = 400;\n  const rightWidth = width - barChartWidth - fileSummaryWidth;\n  const arrowHeight = 20;\n  const showNameList = [\"authors\", \"commitTypes\", \"keywords\",];\n\n  // console.log(\"groupsummary rerender\", clusterData)\n  return (\n    <div className=\"flexVerticalContainer\">\n      <div id=\"GroupSummaryArrowAreaDiv\"\n        style={{ height: arrowHeight + \"px\", width: \"100%\" }}>\n        <svg\n          id={\"GroupSummaryArrowAreaSvg\"}\n          className=\"branchSummaryArrowArea\"\n          style={{\n            position: \"absolute\",\n            width: \"100%\",\n            height: arrowHeight + \"px\",\n            pointerEvents: \"none\"\n          }}\n        >\n          <line\n            // className={[\"branchSummaryArrowLine\", clusterNode.cluster.id].join(\"_\") + \" branchSummaryArrowLine\"}\n            x1={arrowStartX}\n            x2={0}\n            y1={0}\n            y2={arrowHeight}\n            style={{\n              strokeWidth: 1,\n              stroke: selectedClusterNode.color,\n              strokeOpacity: 1\n            }}\n          />\n          <line\n            // className={[\"branchSummaryArrowLine\", clusterNode.cluster.id].join(\"_\") + \" branchSummaryArrowLine\"}\n            x1={arrowStartX + arrowWidth}\n            x2={width}\n            y1={0}\n            y2={arrowHeight}\n            style={{\n              strokeWidth: 1,\n              stroke: selectedClusterNode.color,\n              strokeOpacity: 1\n            }}\n          />\n        </svg>\n      </div>\n      <div\n        id=\"GroupSummaryTitle\"\n        className=\"flexVerticalContainer\"\n        style={{ width: width }}\n      >\n        <div className={classes.div + \" flexContainer\"}>\n          <div style={{ width: \"60px\" }}>CAUSE: &nbsp;</div>\n          <Cause\n            cluster={cluster}\n            width={340}\n            // scoreData={gitAnalyzer.scoreData}\n            prefMap={cluster.pref}\n            gitAnalyzer={gitAnalyzer}\n          />\n        </div>\n        <div className={classes.div + \" flexContainer\"}>\n          <div style={{ width: \"60px\" }}>RANGE: &nbsp;</div>\n          <div>\n            {GitAnalyzer.trimYYYYMMDD(nodeList[0].commit.date).substring(2, 10)}(#{nodeList[0].commit.id.substring(0, 6)})\n            ~ &nbsp;\n          {GitAnalyzer.trimYYYYMMDD(nodeList.slice(-1)[0].commit.date).substring(2, 10)}(#{nodeList.slice(-1)[0].commit.id.substring(0, 6)})\n          , {cluster.nodeCount} commits, {cluster.locStat.clocSum} CLOC\n          </div>\n        </div>\n        <div className={classes.div + \" flexContainer\"}>\n          <div>\n            {cluster.nodeCount} COMMITS, {cluster.locStat.clocSum} CLOC\n          </div>\n        </div>\n        <div style={{ height: \"2px\" }} />\n      </div>\n      <div id=\"GroupSummaryDiv\"\n        className=\"flexContainer\"\n        style={{ width: width }}>\n        {/* style={{width:props.width-marginLeft, marginLeft:marginLeft + \"px\"}}> */}\n        {/* <div>FOCUS SELECTED Cluster Context (ⓒx{nodeList.length})</div> */}\n        <div className=\"flexVerticalContainer\" style={{ width: fileSummaryWidth + \"px\" }}>\n          <div id=\"groupFileSummaryDiv\">\n            <FileIcicleSummary\n              width={fileSummaryWidth}\n              height={height}\n              rawModLocData={clusterData.clocByFiles}\n              rawInsertLocData={clusterData.insertionByFiles}\n              rawDeleteLocData={clusterData.deletionByFiles}\n              rawModNumData={clusterData.touchCountByFiles}\n              file2Author={clusterData.fileToAuthor}\n              pageNum={5}\n            />\n          </div>\n        </div>\n\n        <div name=\"nodeList\" className={classes.nodeList} style={{\n          width: rightWidth + \"px\",\n          marginLeft: marginLeft,\n          height: height\n        }}>\n          <NodeDetailList\n            gitAnalyzer={gitAnalyzer}\n            nodeList={nodeList}\n            registerFavoriteFragment={registerFavoriteFragment}\n            useHeuristicMerge={props.useHeuristicMerge}\n          />\n        </div>\n\n        <div className=\"flexContainer\" style={{\n          width: barChartWidth + \"px\",\n          // flexWrap: \"wrap\",\n          marginLeft: \"5px\",\n          marginRight: \"5px\"\n        }}>\n          {/* {showNameList.map((dataName, i) => ( */}\n          <BarChartSummary\n            // key={i}\n            dataNameList={showNameList}\n            clusterData={clusterData}\n            width={barChartWidth - 10}\n            height={height}\n            registerFavoriteFragment={registerFavoriteFragment}\n          />\n          {/* ))} */}\n        </div>\n      </div>\n      <div style={{ height: \"50px\" }}></div>\n    </div>\n  )\n}\n\nexport default GroupSummary;","import * as d3 from 'd3';\nimport React, { useLayoutEffect, useRef, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ClusterBlock, ClusterNode, ClusterData, AttrsAbbreviationMap, DataTypeByNameMap, LOCStat } from \"./analyzer/GithruClasses\";\nimport { AttributeColors } from './ColorClasses';\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport GroupSummary from './GroupSummary';\nimport * as actions from '../modules';\n\n\nconst branchSummaryValueRectMouseover = (d, color, rectMargin) => {\n// console.log(\"branchSummaryValueRectMouseover\", d);\n    if (d === undefined) return;\n\n    let sameValueElements = d3.selectAll(\".branchSummaryValueRect\")\n        // .filter(selection => (selection !== undefined && d[0] === selection[0] && d[1] === selection[1]));\n        .filter(selection => {return (selection.data !== undefined && d[0] === selection.data[0] && d[1] === selection.data[1]);})\n        .each( function() {\n            let newColor = d3.select(this).attr(\"highlight-color\");\n            d3.select(this)\n                .style(\"font-weight\", \"bold\")\n                .style(\"background-color\", newColor);\n            d3.select(this).select(\"span\").style(\"background\", newColor);\n        });\n\n    // sameValueElements.style(\"opacity\", \"1\");\n    // sameValueElements.style(\"border\", \"2px blue solid\");\n    // sameValueElements.style(\"font-weight\", \"bold\");\n    sameValueElements.style(\"font-weight\", \"bold\")\n    // sameValueElements.style(\"border\", \"2px blue solid\")\n    sameValueElements.style(\"opacity\", 1.0)\n// console.log(\"samevalue\", sameValueElements);\n\n    sameValueElements.each(function () {\n        let [clusterId, valueId] = d3.select(this).attr(\"id\").split(\"_\").slice(1, 3);    \n        d3.select(\"#branchSummaryClusterRect_\" + clusterId).style(\"border\", rectMargin + \"px \" + color + \" solid\");\n        d3.select(\"#blocksBox\" + clusterId).style(\"stroke-width\", \"3px\");\n        // d3.select(\"#\" + d3.select(this).attr(\"id\") + \"_text\").style(\"font-weight\", \"normal\");\n        d3.selectAll(\".branchSummaryArrowLine_\" + clusterId)\n            // .style(\"stroke-width\", \"2px\")\n            .style(\"stroke-opacity\", 1);\n    });\n}\n\nconst branchSummaryValueRectMouseleave = (rectMargin) => {\n    d3.selectAll(\".branchSummaryValueRect\").each( function() {\n        let orgColor = d3.select(this).attr(\"org-color\");\n        d3.select(this)\n            .style(\"font-weight\", \"normal\")\n            .style(\"background-color\", orgColor);\n        d3.select(this).select(\"span\").style(\"background\", orgColor);\n    })\n    ;\n\n    d3.selectAll(\".branchSummaryClusterRect\").style(\"border\", \"dotted \" + rectMargin + \"px WhiteSmoke\");\n    d3.selectAll(\".blocksBox\").style(\"stroke-width\", \"1px\");\n    d3.selectAll(\".branchSummaryArrowLine\").style(\"stroke-width\", \"1px\").style(\"stroke-opacity\", 0.3);\n    // d3.selectAll(\".branchSummaryValueRectText\").style(\"font-weight\", \"\");\n}\n\n\n\n///////////////////////////////////////////////////\n// MAIN HOOK\nconst BranchSummary = (props) => {\n// console.log(\"BranchSummary start!!\", props);\n    const {branchNo, width, height, hideFiles, summaryByLOC} = props;\n    const clusterOverviewHeight = useSelector(state => state.layout.clusterOverviewHeight);\n    let isInitRef = useRef(true);\n\n    const clusterNodes = (props.clusterNodes === undefined ? [] : props.clusterNodes.filter(d => !d.isNonConfilctMerge));\n    clusterNodes.sort((a, b) => a.x - b.x);\n\n    const itemHeight = 20;\n    const itemTopCount = 5;\n    let arrowHeight = 20;\n\n    let showAttrs;\n    let showAttrValueCount;\n    let showAttrRenderFlow;\n    let showByCommitCountOnly;\n\n    const dispatch = useDispatch();\n    const registerFavoriteFragment = (f) => {\n        dispatch(actions.registerFavoriteFragment(f));\n    }\n    const [selectedClusterNodeIndex, setSelectedClusterNodeIndex] = useState(undefined);\n\n\n    if (!summaryByLOC) {\n        showAttrs = [[\"authors\"], [\"commitTypes\"], [\"touchCountByFiles\", \"touchCountByDirs\"], [\"keywords\"], ];\n        showAttrValueCount = [3, 3, 4, 3];\n        // showAttrRenderFlow = [false, false, true, false];\n        showAttrRenderFlow = [true, true, true, true];\n        showByCommitCountOnly = [true, true, false, true];\n    } else {\n        showAttrs = [[\"authorsLOCStat\"], [\"commitTypesLOCStat\"], [\"clocByDirs\"], [\"clocByFiles\"], [\"keywords\"], ];\n        showAttrValueCount = [2, 2, 2, 3, 3];\n        // showAttrRenderFlow = [false, false, true, true, false];\n        showAttrRenderFlow = [true, true, true, true, true];\n        showByCommitCountOnly = [false, false, false, false, true];\n    }\n\n    const margin = 2;\n    const divHeight = itemHeight * showAttrValueCount.reduce( (prev, cur, i) => prev + (showAttrRenderFlow[i] ? cur : 1), 0) + margin * 2;\n    const summaryWidth = 0;\n    const underlineHeight = 10;\n    let itemMinWidth = 20;\n    const summaryMinWidth = 600;\n    const totalCommitCount = clusterNodes.filter(d => !d.isNonConfilctMerge).reduce((prev, node) => prev + node.cluster.nodeCount, 0);\n    const totalCLOC = clusterNodes.filter(d => !d.isNonConfilctMerge).reduce((prev, node) => prev + node.cluster.locStat.clocSum, 0);\n    const totalValue = (!summaryByLOC ? totalCommitCount : totalCLOC);\n\n    if (itemMinWidth * clusterNodes.length > width) itemMinWidth = 10;\n    let maxWidth = Math.max(width, itemMinWidth * clusterNodes.length);\n\n    let summaryStartX = 0;\n    let summaryEndX = width;\n    let arrowDivStartX = 0;\n    let arrowDivWidth = width;\n\n    clusterNodes.forEach(clusterNode => {\n        let clusterData = new ClusterData(clusterNode.cluster, props.gitAnalyzer.corpusData, props.useHeuristicMerge);\n        clusterData[\"touchCountByDirs\"] = Object.entries(clusterData[\"touchCountByDirs\"])\n            .filter(d => d[0].split(\"/\").length === 4)\n            .reduce((prev, cur) => { prev[cur[0]] = cur[1]; return prev }, {});\n        clusterData[\"clocByDirs\"] = Object.entries(clusterData[\"clocByDirs\"])\n            .filter(d => d[0].split(\"/\").length === 4)\n            .reduce((prev, cur) => { prev[cur[0]] = cur[1]; return prev }, {});\n\n        clusterNode.clusterData = clusterData;\n// console.log(\"clusterData\", clusterData);\n    });\n\n    // branch name\n    clusterNodes.reverse();\n\n    let branchNames = GitAnalyzer.getBranchNamesFromBranchClusterNodes(clusterNodes);\n\n    clusterNodes.reverse();\n    // if (!props.showPullRequestBranch) branchNames = branchNames.filter( b => b.startsWith(\"origin/pr\") === false);\n    let branchName = branchNames.join(\", \")\n    \n    let widthScale, rectWidths;\n// console.log(\"overflow?\", itemMinWidth * totalValue > width, itemMinWidth * totalValue , width)\n    if (itemMinWidth * totalValue > width) {\n        widthScale = d3.scaleLinear().range([0, maxWidth - (itemMinWidth * clusterNodes.length)]).domain([0, totalValue - clusterNodes.length]);\n        rectWidths = clusterNodes.map( clusterNode => itemMinWidth + widthScale(\n            (summaryByLOC ? clusterNode.cluster.locStat.clocSum : clusterNode.cluster.nodeCount - 1)\n        ));\n    } else {\n        widthScale = d3.scaleLinear().range([0, width]).domain([0, totalValue]);\n        \n        rectWidths = clusterNodes.map( clusterNode => widthScale(\n            (summaryByLOC ? clusterNode.cluster.locStat.clocSum : clusterNode.cluster.nodeCount)\n        ));\n    }\n    \n    const rectMargin = 2;\n\n    /////////////////////////////////////////////\n    // DRAW SUMMARY FUNC\n    const drawSummary = (clusterNode, index) => {\n        if (clusterNode.isNonConfilctMerge) return;\n\n        let branchSummaryClusterRectStr = \"branchSummaryClusterRect_\" + clusterNode.cluster.id;\n        // d3.select(\"#\" + branchSummaryClusterRectStr).selectAll(\"div\").remove();\n// console.log(\"removed? \", d3.select(\"#\" + branchSummaryClusterRectStr).selectAll(\"div\"));\n        let topDataList = showAttrs.reduce((prev, attrList, attrIndex) => {\n            let dataList = attrList.reduce((p, attr) => p.concat(\n                Object.entries(clusterNode.clusterData[attr]).map(d => \n                    [attr].concat( [d[0], (d[1] instanceof LOCStat ? d[1].clocSum : d[1])] )\n            )), []);\n            // let ignoreList = dataList.filter(d => d[0].endsWith(\"Files\") && hideFiles.indexOf(d[1]) >= 0);\n// console.log(dataList);\n            if (dataList.length === 0) return prev;\n            if(dataList.length === 0 || dataList[0][0] != \"keywords\") {\n                dataList = dataList.filter(d => !(d[0].endsWith(\"Files\") && hideFiles.indexOf(d[1]) >= 0))\n                    .sort((a, b) => b[2] - a[2])\n                    // .concat(ignoreList)\n            } else {\n                dataList = dataList.filter(d => !(d[0].endsWith(\"Files\") && hideFiles.indexOf(d[1]) >= 0))\n                    .sort((a, b) => b[2][1] - a[2][1])\n                    .map( d => [d[0], d[1], d[2][0]])\n                ;\n            }\n            dataList = dataList.filter((d, i) => i < showAttrValueCount[attrIndex]);\n\n            Array(showAttrValueCount[attrIndex] - dataList.length).fill().forEach(() => dataList.push(undefined));\n            prev.push(dataList);\n            return prev;\n        }, []);\n\n        // d3.select(\"#\" + branchSummaryClusterRectStr).selectAll(\".branchSummaryClusterRect\").selectAll(\"div\").remove();\n        // let borderRect = d3.select(\"#branchSummary\" + branchNo + \"_\" + index + \"_border_rect\").selectAll(\".branchSummaryClusterRect\").data(topDataList).enter();\n        d3.select(\"#\" + branchSummaryClusterRectStr).selectAll(\".branchSummaryValueWrap\").remove();\n        let borderRect = d3.select(\"#\" + branchSummaryClusterRectStr).selectAll(\".branchSummaryClusterRect\").data(topDataList).enter();\n// console.log(\"borderRect = \", branchSummaryClusterRectStr, d3.select(branchSummaryClusterRectStr), borderRect, topDataList)\n\n        borderRect.append(\"div\")\n            .attr(\"id\", (d, i) => \"branchSummaryValueWrap_\" + clusterNode.cluster.id + \"_\" + i)\n            // .attr(\"class\", (d, i) => (showAttrRenderFlow[i] ? \"flexVerticalContainer\": \"flexContainer\"))\n            .attr(\"class\", (d, i) => \"branchSummaryValueWrap \" + (showAttrRenderFlow[i] ? \"flexVerticalContainer\": \"flexContainer\"))\n            .style(\"width\", \"100%\")//(rectWidths[index] - rectMargin * 2) + \"px\")\n            // .style(\"height\", itemHeight + \"px\")\n            .style(\"background-color\",\"#EEEEEE\")//\"rgba(128,128,128,0.1)\")\n            .style(\"border\", \"1px \" + clusterNode.color)\n            .style(\"flex-wrap\", \"wrap\")\n            .style(\"font-size\", \"12px\")\n            .on(\"click\", () => {\n                d3.selectAll(\".branchSummaryClusterRectOver\").style(\"opacity\", 0)\n                d3.select(\"#branchSummaryClusterRect_\" + clusterNode.cluster.id + \"_over\").style(\"opacity\", 0.2).style(\"background\", clusterNode.color);\n                setSelectedClusterNodeIndex(index);\n            })\n            .on(\"mouseenter\", function(d) {\n                // if (!showAttrRenderFlow[d.parentIndex]) \n                d3.select(branchSummaryClusterRectStr).style(\"border\", rectMargin + \"px \" + clusterNode.color + \" solid\");\n                d3.select(this).style(\"overflow\", \"visible\").style(\"font-size\", \"12px\").style(\"z-index\", 100);\n                d3.select(this).selectAll(\"span\").style(\"background\")\n                branchSummaryValueRectMouseover(d.data, clusterNode.color, rectMargin);\n            })\n            .on(\"mouseleave\", function(d) {\n                // if (!showAttrRenderFlow[d.parentIndex]) \n                d3.select(this).style(\"overflow\", \"hidden\");\n                d3.select(this).style(\"z-index\", undefined).style(\"font-size\", \"12px\");\n                branchSummaryValueRectMouseleave(rectMargin);\n            })\n            // .style(\"z-index\", (d, i) => showAttrRenderFlow[i] ? i * 10 + 1 : (i * 10))\n                .selectAll(\".branchSummaryValueRect\")\n                .data( (d, i) => d.map( (data) => { return {\"data\": data, \"parentIndex\": i}; }))\n                .enter()\n                    .append(\"div\")\n                    .attr(\"id\", (d, i) => \"branchSummaryValueRect_\" + clusterNode.cluster.id + \"_\" + d.parentIndex + \"_\" + i)\n                    .attr(\"class\", \"branchSummaryValueRect\")\n                    // .style(\"width\", d => (d.data ? (100 * d.data[2] / \n                    //         (summaryByLOC && showAttrRenderFlow[d.parentIndex] ? clusterNode.cluster.locStat.clocSum : clusterNode.cluster.nodeCount)\n                    //     ) : 0) + \"%\")\n                    .style(\"width\", d => { \n                        // console.log(\"summaryByLOC\", d, summaryByLOC, !showByCommitCountOnly[d.parentIndex]);\n                        return (d.data ? (100 * d.data[2] / \n                        (summaryByLOC && !showByCommitCountOnly[d.parentIndex] ? clusterNode.cluster.locStat.clocSum : clusterNode.cluster.nodeCount)\n                    ) : 0) + \"%\";})\n                    .style(\"height\", itemHeight + \"px\")\n                    // .style(\"height\", d => (d.data === undefined && showAttrRenderFlow[d.parentIndex]) ? (itemHeight) + \"px\" : \"\")\n                    .style(\"border-radius\", \"5px\")\n                    .style(\"background-color\", d => { return (d.data ? AttributeColors[DataTypeByNameMap[d.data[0]]][3] : \"\");  } )\n                    .attr(\"highlight-color\", d => { return (d.data ? AttributeColors[DataTypeByNameMap[d.data[0]]][1] : \"\");  } )\n                    .attr(\"org-color\", d => { return (d.data ? AttributeColors[DataTypeByNameMap[d.data[0]]][3] : \"\");  } )\n                    // .style(\"opacity\", 1)\n                    .style(\"font-size\", \"12px\")\n                    .style(\"overflow\", \"hidden\")\n                    .style(\"padding-left\", \"2px\")\n                    .style(\"color\", d => (d.data === undefined ? \"\" : (d.data[0].endsWith(\"Files\") && hideFiles.indexOf(d.data[1]) >= 0 ? \"grey\" : \"\")))\n                    .on(\"mouseover\", function(d) {\n                        // if (!showAttrRenderFlow[d.parentIndex]) \n                        d3.select(this).style(\"overflow\", \"visible\").style(\"font-size\", \"12px\").style(\"z-index\", 100);\n                        d3.select(this).selectAll(\"span\").style(\"background\")\n                        branchSummaryValueRectMouseover(d.data, clusterNode.color, rectMargin);\n                    })\n                    .on(\"mouseleave\", function(d) {\n                        // if (!showAttrRenderFlow[d.parentIndex]) \n                        d3.select(this).style(\"overflow\", \"hidden\");\n                        d3.select(this).style(\"z-index\", undefined).style(\"font-size\", \"12px\");\n                        branchSummaryValueRectMouseleave(rectMargin);\n                    })\n                    .append(\"span\")\n                        .attr(\"class\", \"valueRectSpan\")\n                        .text(d => d.data === undefined ? \"\" : GitAnalyzer.getTextValue(d.data[0], d.data[1]))\n                        .style(\"overflow\", d => showAttrRenderFlow[d.parentIndex] ? \"visible\" : \"hidden\")\n                        .style(\"white-space\", \"pre\")\n        ;\n        \n        // resize height(rendered) \n        // let bsrect = d3.select(\"#\" + branchSummaryClusterRectStr);\n        // let totalWrapHeight = showAttrRenderFlow.reduce( (prev, cur, i) => prev + bsrect.select(\"#branchSummaryValueWrap_\" + clusterNode.cluster.id + \"_\" + i).node().getBoundingClientRect().height, 0);\n        // d3.select(\"#\" + branchSummaryClusterRectStr).style(\"height\", (totalWrapHeight + rectMargin * 2) + \"px\");\n// console.log(\"totalWrapHeight\", totalWrapHeight)\n    }\n    \n\n    useLayoutEffect( () => {\n        setSelectedClusterNodeIndex(undefined);\n// console.log(\"useEffect (NOT INIT)\", branchNo, clusterNodes, hideFiles)\n        // if (!isInitRef.current) {\n            // d3.selectAll(\".branchSummaryClusterRect\").selectAll(\"div\").remove();\n            clusterNodes.forEach( (clusterNode, i) => {\n                let branchSummaryClusterRectStr = \"branchSummaryClusterRect_\" + clusterNode.cluster.id;\n                // d3.select(\"#\" + branchSummaryClusterRectStr).selectAll(\"div\").remove();\n                drawSummary(clusterNode, i);\n            });\n\n            if (clusterNodes.length === 1 && clusterNodes[0].cluster.nodeList.length < 100) setSelectedClusterNodeIndex(0);\n        // }\n    // });\n    }, [branchNo, JSON.stringify(clusterNodes.map(d => d.cluster.id)), hideFiles]);\n\n    useLayoutEffect( () => {\n        let prevIndex = selectedClusterNodeIndex;\n        setSelectedClusterNodeIndex(undefined);\n        clusterNodes.forEach( (clusterNode, i) => {\n            drawSummary(clusterNode, i);\n        });\n// console.log(\"useLayoutEffect prevIndex\", prevIndex)\n        setSelectedClusterNodeIndex(prevIndex);\n    }, [summaryByLOC]);\n\n    if (clusterNodes.length === 0) return (<div></div>);\n\n    let currentX = 0;\n    let descriptionHeight = 30;\n\n    let branchNum = (clusterNodes.length > 0 ? clusterNodes[0].cluster.nodeList[0].implicitBranchNo : -1);\n    arrowHeight = clusterOverviewHeight - Number(d3.select(\"#underlines\" + branchNum).attr(\"y\")) + descriptionHeight;\n// console.log(\"BS render?\", divHeight,  branchNo, arrowHeight, clusterOverviewHeight, d3.select(\"#underlines\" + branchNum).attr(\"y1\"));\n// console.log(\"selectedClusterNodeIndex !== undefined && clusterNodes[selectedClusterNodeIndex] !== undefined\", props,selectedClusterNodeIndex !== undefined, clusterNodes[selectedClusterNodeIndex] !== undefined)\n\n    let containReleaseList = clusterNodes.reduce( (prev, clusterNode) => \n        prev.concat( clusterNode.blockList.reduce( (p, block) => p.concat(block.releaseNodeList.map(d => d.releaseTagString)), []) )\n    , []);\n    if (containReleaseList.length > 3) containReleaseList = [containReleaseList[0], containReleaseList[1], \"...\", containReleaseList.slice(-1)[0]];\n    let containReleaseNames = containReleaseList.join(\", \");\n\n    return (\n        <div id={\"branchSummaryDiv\" + branchNo}>\n            <svg id={\"branchSummaryArrow\" + branchNo}\n                className=\"branchSummaryArrowArea\"\n                style={{\n                    position:\"absolute\",\n                    width: arrowDivWidth + \"px\",\n                    height: arrowHeight + \"px\",\n                    left: arrowDivStartX + \"px\",\n                    top: clusterNodes[0].height + underlineHeight + \"px\",\n                    pointerEvents: \"none\"\n                }}\n            >\n                {clusterNodes.map( (clusterNode, i) => {\n                    let startCurrentX = currentX;\n                    currentX += rectWidths[i];\n                    return (\n                        <React.Fragment key={i}>\n                        <line \n                            className={[\"branchSummaryArrowLine\", clusterNode.cluster.id].join(\"_\") + \" branchSummaryArrowLine\"}\n                            x1={Math.max(0, clusterNode.x - summaryStartX)}\n                            x2={startCurrentX}\n                            y1={0}\n                            y2={arrowHeight}\n                            style={{\n                                strokeWidth: 1,\n                                stroke: clusterNode.color,\n                                strokeOpacity: 0.3\n                            }}\n                        />\n                        <line \n                            className={[\"branchSummaryArrowLine\", clusterNode.cluster.id].join(\"_\") + \" branchSummaryArrowLine\"}\n                            x1={Math.max(0, clusterNode.x - summaryStartX + clusterNode.width)}\n                            x2={currentX}\n                            y1={0}\n                            y2={arrowHeight}\n                            style={{\n                                strokeWidth: 1,\n                                stroke: clusterNode.color,\n                                strokeOpacity: 0.3\n                            }}\n                        />\n                        </React.Fragment>\n                    );\n                })}\n            </svg>\n\n            <div id={\"branchDescription\" + branchNo}\n                align=\"left\"\n                style={{\n                    position: \"absolute\",\n                    width: arrowDivWidth + \"px\",\n                    height: \"20px\",\n                    left: arrowDivStartX + \"px\",\n                    top: (clusterNodes[0].height + underlineHeight + arrowHeight - descriptionHeight + 10 ) + \"px\",\n                    fontSize: \"14px\",\n                    fontWeight: \"bold\",\n                    overflow: \"visible\",\n                    whiteSpace: \"nowrap\",\n                }}\n            >\n                [{containReleaseNames}] {branchName}  \n                <span style={{fontWeight: \"normal\"}}> (total {(summaryByLOC ? \"CLOC\" : \"commit #\")}: {totalValue})</span>\n                {/* {clusterNodes[0].cluster.implicitBranchNo} */}\n            </div>\n            \n            <div id={\"branchSummary\" + branchNo}\n                className=\"branchSummaryArea\"\n                style={{\n                    position: \"absolute\",\n                    \"width\": maxWidth + summaryWidth + \"px\",\n                    \"height\": (divHeight) + \"px\",\n                    \"left\": summaryStartX + \"px\",\n                    \"top\": (clusterNodes[0].height + underlineHeight + arrowHeight) + \"px\",\n                }}\n                className=\"flexContainer\"\n            >\n                {clusterNodes.map( (clusterNode, i) => {\n                    let overWidth = (i > 0 ? rectWidths.slice(0, i).reduce( (prev, cur) => prev + cur, 0) : 0);\n                    return(\n                        <Fragment key={clusterNode.cluster.id}>\n                            <div\n                                id={\"branchSummaryClusterRect_\" + clusterNode.cluster.id}\n                                className=\"branchSummaryClusterRect flexVerticalContainer\"\n                                style={{\n                                    width: rectWidths[i],\n                                    // height: clusterNode.isNonConfilctMerge ? itemHeight : itemHeight * showAttrValueCount.length,\n                                    fill: \"white\",\n                                    // strokeDasharray: (clusterNode.isNonConfilctMerge ? 4 : 0),\n                                    backgroundColor: \"white\",\n                                    border: \"dotted \" + rectMargin + \"px WhiteSmoke\",\n                                    cursor: \"pointer\",\n                                }}\n                            >\n                            </div>\n                            <div\n                                id={\"branchSummaryClusterRect_\" + clusterNode.cluster.id + \"_over\"}\n                                className=\"branchSummaryClusterRectOver flexVerticalContainer\"\n                                style={{\n                                    position: \"absolute\",\n                                    height: (divHeight) + \"px\",\n                                    left: overWidth + \"px\",\n                                    top: \"0px\",\n                                    width: rectWidths[i],\n                                    pointerEvents: \"none\",\n                                    opacity: 0,\n                                    // height: clusterNode.isNonConfilctMerge ? itemHeight : itemHeight * showAttrValueCount.length,\n                                    // background: \"white\",\n                                    // strokeDasharray: (clusterNode.isNonConfilctMerge ? 4 : 0),\n                                    // backgroundColor: \"white\",\n                                    // border: \"dotted \" + rectMargin + \"px WhiteSmoke\",\n                                    // cursor: \"pointer\",\n                                }}\n                            >\n                            </div>\n                        </Fragment>\n                    );\n                })}\n            </div>\n            <div\n                style={{\n                    position: \"absolute\",\n                    // \"width\": maxWidth + summaryWidth + \"px\",\n                    \"width\" : width + \"px\",\n                    // \"height\": (divHeight) + \"px\",\n                    \"left\": summaryStartX + \"px\",\n                    \"top\": (clusterNodes[0].height + underlineHeight + arrowHeight + divHeight) + \"px\",\n            }}\n            >\n                {selectedClusterNodeIndex !== undefined && clusterNodes[selectedClusterNodeIndex] !== undefined &&\n                    <GroupSummary\n                        gitAnalyzer={props.gitAnalyzer}\n                        width={width}\n                        selectedClusterNode={clusterNodes[selectedClusterNodeIndex]}\n                        arrowStartX={rectWidths.filter( (d, i) => i < selectedClusterNodeIndex).reduce( (prev, cur) => prev + cur, 0)}\n                        arrowWidth={rectWidths[selectedClusterNodeIndex]}\n                        registerFavoriteFragment={registerFavoriteFragment}\n                        useHeuristicMerge={props.useHeuristicMerge}\n                    />\n                }\n            </div>\n            \n        </div>\n    );\n}\n        \nexport default BranchSummary;","import * as d3 from 'd3';\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport { intersection } from \"lodash\";\nimport { BranchColors } from './ColorClasses';\n\n\nconst moverLinks = (HALinkIds) => {\n    HALinkIds.forEach(l => d3.select(\"#mergedRelationLink_\" + l)\n        .style(\"stroke-dasharray\", \"\")\n        .style(\"stroke\", \"BLACK\").style(\"visibility\", \"\"));\n}\n\nconst mleaveLinks = (HALinkIds) => {\n    HALinkIds.forEach(l => {\n        let link = d3.select(\"#mergedRelationLink_\" + l);\n        link.style(\"stroke\", link.attr(\"orgColor\"))\n            .style(\"stroke-dasharray\", \"1, 1\")\n            .style(\"visibility\", link.attr(\"orgVisibility\"));\n    });\n}\n\n// selectedClusters 조정해야함\nexport function drawClusters(\n    layout, sel, clusterNodeList, maxBlockIndex, gitAnalyzer, pref, threshold,\n    nonConflictGroupingLevel = 0, ignoreFiles = [], useHeuristicMerge, showMergeLink, showGroupSummaryFunc) {\n    const defaultBlockOpacity = 0.4;\n    const defaultClusterOpacity = 0.05;\n    // const selectedClusterOpacity = 0.5;\n\n// console.log(\"DRAWCLUSTER!!!\", clusterNodeList, maxBlockIndex, showGroupSummaryFunc)\n    if (sel === undefined) sel = [0, gitAnalyzer.allNodeList.length - 1];\n    d3.select(\"#clusterOverviewSvg\").selectAll(\"g\").remove();\n    // console.log(\"brushed\", sel);\n\n    let marginLeft = 1;\n    let marginRight = 1;\n    let width = layout.clusterOverviewWidth - marginLeft - marginRight;\n    let height = layout.orgClusterOverviewHeight;\n    let maxHeightCommitCount = 10;\n    let startBlockIndex, endBlockIndex;\n    let summaryLineHeight = 10;\n\n    startBlockIndex = 0;\n    endBlockIndex = maxBlockIndex + 1;\n\n    const yRange = d3.range(0, d3.max(clusterNodeList.map(d => d.y)) + 1);\n    const minHeight = yRange.slice(-1)[0] * 60;\n    // console.log(\"minHeight = \", minHeight, height);\n\n    if (minHeight > layout.orgClusterOverviewHeight) height = minHeight;\n    // else if (minHeight < layout.clusterOverviewHeight) height = layout.orgClusterOverviewHeight;\n// console.log(\"overview height adjust\", yRange, minHeight, height, layout)\n    d3.select(\"#clusterOverviewSvg\").attr(\"height\", height);\n\n    console.log(\"BRUSHING CONVERTED\", startBlockIndex, endBlockIndex, width, layout.clusterOverviewWidth);\n    let xBandScale = d3.scaleBand().domain(d3.range(0, endBlockIndex - 1)).range([0, width]);\n    let yBandScale = d3.scaleBand().domain(yRange).range([0, height - summaryLineHeight]).paddingInner(0.2).paddingOuter(0.2);\n    let xRectScale = d3.scaleLinear().domain([0, endBlockIndex - 1]).range([0, width]);\n    let blockHeightScale = d3.scaleLinear().range([0, yBandScale.bandwidth() - 2]).domain([0, maxHeightCommitCount]);\n    let clusterOverviewSvg = d3.select(\"#clusterOverviewSvg\")\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + marginLeft + \" 0)\")\n        .attr(\"id\", \"clusters\");\n\n    let colorByBranchNo = {};\n\n    // console.log(\"BRUSHED clusterNodeList\", clusterNodeList)\n    // console.log(\"BRUSHED clusternodelist\", clusterNodeList.filter(cn => cn.blockList[0].x <= endBlockIndex && cn.blockList.slice(-1)[0].x >= startBlockIndex));\n    // let brushedClusterNodeList = clusterNodeList.filter(cn => cn.blockList[0].x <= endBlockIndex && cn.blockList.slice(-1)[0].x >= startBlockIndex);\n    let brushedClusterNodeList = clusterNodeList;\n    //////////////////////////////////////////////\n    // nonConflictGroupMerging (나중에 function으로 빼라.)\n    //////////////////////////////////////////////\n    if (nonConflictGroupingLevel > 0) {\n        let branchNodesListForSwitching = Object.values(brushedClusterNodeList\n            .reduce((prev, clusterNode) => {\n                let branchNum = clusterNode.cluster.nodeList[0].implicitBranchNo;\n                if (branchNum in prev) prev[branchNum].push(clusterNode);\n                else prev[branchNum] = [clusterNode];\n                return prev;\n            }, {}))\n            .filter(cn => cn.length > 2);\n        // console.log(\"branchNodesListForSwitching\", branchNodesListForSwitching);\n\n        // switch non-confilct groups\n        branchNodesListForSwitching.forEach(branchNodes => {\n            branchNodes.sort((a, b) => a.blockList[0].x - b.blockList[0].x);\n            let fileSetList = branchNodes.map(clusterNode => getFileSetForCluster(clusterNode.cluster, ignoreFiles));\n\n            branchNodes.filter((d, i) => i < branchNodes.length - 2).forEach((clusterNode, i) => {\n                // break recursive\n                if (clusterNode.isNonConfilctMerge) return;\n\n                // A(org) -> B(skip) -> C(target)\n                let fileSetOrg = Array.from(fileSetList[i]);\n                let fileSetSkip = Array.from(fileSetList[i + 1]);\n                let fileSetTarget = Array.from(fileSetList[i + 2]);\n                // console.log(\"fileSet\", fileSetOrg, fileSetSkip, fileSetTarget);\n                // console.log(\"check check!!\", intersection(fileSetOrg, fileSetSkip), intersection(fileSetSkip, fileSetTarget));\n                // check non-conflict\n                if (intersection(fileSetOrg, fileSetSkip).length > 0 || intersection(fileSetSkip, fileSetTarget).length > 0) return;\n\n                // check similarity between A end and C first\n                // console.log(\"compare\", clusterNode.cluster.nodeList.slice(-1)[0], branchNodes[i+2].cluster.nodeList[0]);\n                let scores = gitAnalyzer.getScoreByPreferences(clusterNode.cluster.nodeList.slice(-1)[0], branchNodes[i + 2].cluster.nodeList[0], pref, false);\n                // console.log(\"NONCONFLICT SWITCH\", branchNodes, threshold, scores.sum, fileSetOrg, fileSetSkip, fileSetTarget);\n\n                // \n                if (threshold <= scores.sum) {\n                    let targetClusterNode = branchNodes[i + 2];\n                    targetClusterNode.isNonConfilctMerge = true;\n\n                    targetClusterNode.cluster.nodeList.forEach(n => clusterNode.cluster.addNode(n, scores));\n                    // clusterNode.cluster.nodeList.concat(targetCluster.nodeList);\n                    clusterNode.blockList.slice(-1)[0].isNonConflictMergedSource = true;\n                    clusterNode.blockList.slice(-1)[0].commitCount += targetClusterNode.cluster.nodeList.length;\n                    targetClusterNode.blockList.forEach(b => b.isNonConflictMergedTarget = true);\n                }\n            });\n        });\n    }\n    //////////////////////////////////////////////\n    let blockMapByNode = {};\n    // SET MERGED NODE RELATION\n    brushedClusterNodeList.forEach(clusterNode => {\n        let blockList = clusterNode.blockList.filter(d => !d.isNonConflictMergedTarget);\n        blockList.forEach(block => {\n            block.nodeList.forEach(node => {\n                blockMapByNode[node.id] = block;\n            });\n        })\n    });\n\n    let clusterNodesByBranchNo = brushedClusterNodeList\n        .reduce((prev, clusterNode) => {\n            let branchNum = clusterNode.cluster.nodeList[0].implicitBranchNo;\n            if (branchNum in prev) prev[branchNum].push(clusterNode);\n            else prev[branchNum] = [clusterNode];\n            return prev;\n        }, {});\n\n    // console.log(\"brushedClusterNodeList\", brushedClusterNodeList, xBandScale.bandwidth());\n    //////////////////////////////////////////\n    // PRE-BUILD HA MergeLINKS\n    let toBlockListMapByBlock = {};\n    brushedClusterNodeList.forEach(clusterNode => {\n        clusterNode.blockList.filter(b => b.containsMergeTraversedNodes).map(block => {\n            let toBlockList = Array.from(block.mergedToNodeList.reduce((prev, node) => {\n                let matchedBlock = blockMapByNode[node.id];\n                if (matchedBlock !== undefined) prev.add(matchedBlock);\n                return prev;\n            }, new Set()));\n            toBlockListMapByBlock[block.id] = toBlockList;\n            toBlockList.map(toBlock => {\n                let id = block.id + \"_\" + toBlock.id;\n                block.HALinkIds.push(id);\n                toBlock.HALinkIds.push(id);\n            });\n        });\n    });\n\n    brushedClusterNodeList\n        .forEach(clusterNode => {\n            let blocksBox = clusterOverviewSvg.append(\"g\");\n            let boxWidth = (clusterNode.blockList.slice(-1)[0].x - clusterNode.blockList[0].x + 1) * xBandScale.bandwidth();\n            let boxHeight = yBandScale.bandwidth();\n            let x = xRectScale(clusterNode.blockList[0].x);\n            let y = yBandScale(clusterNode.y);\n\n            clusterNode.branchType = gitAnalyzer.getClusterBranchType(clusterNode.cluster);\n            clusterNode.color = getClusterNodeColor(clusterNode);\n            let clusterColor = clusterNode.color;\n            \n            clusterNode.x = x;\n            clusterNode.width = boxWidth;\n            clusterNode.height = y + boxHeight;\n\n            // let drawBlockList = clusterNode.blockList.filter(b => b.x >= startBlockIndex && b.x <= endBlockIndex);\n            let drawBlockList = clusterNode.blockList;\n            let elem = clusterOverviewSvg.append(\"g\").selectAll(\"rect\")\n                // .data(drawBlockList.filter(d => d.x >= startBlockIndex && d.x <= endBlockIndex))\n                .data(drawBlockList)\n                .enter();\n            elem.append(\"rect\")\n                .attr(\"class\", \"block\")\n                .attr(\"id\", d => \"block\" + d.id)\n                // .attr(\"x\", d => {console.log(\"xxx\", d, d.x, xBandScale(d.x)); return xBandScale(d.x)})\n                .attr(\"x\", d => xBandScale(d.x))\n                .attr(\"y\", d => yBandScale(clusterNode.y) + (yBandScale.bandwidth() - blockHeightScale(Math.min(d.commitCount, maxHeightCommitCount))) / 2)\n                .attr(\"width\", xBandScale.bandwidth())\n                .attr(\"height\", d => blockHeightScale(Math.min(d.commitCount, maxHeightCommitCount)))\n                .attr(\"rx\", (xBandScale.bandwidth() >= 10 ? 5 : 2))\n                .style(\"pointer-events\", \"none\")\n                .style(\"fill\", d => {\n                    if (d.isNonConflictMergedTarget) return \"white\";\n                    else return clusterColor;\n                })\n                .style(\"fill-opacity\", d => {\n                    if (d.isNonConflictMergedSource || d.isNonConflictMergedTarget) return 1;\n                    else if (d.containsMergeTraversedNodes) return 0;\n                    else return defaultBlockOpacity;\n                })\n                .style(\"stroke-width\", d => {\n                    // if (useHeuristicMerge && d.containsMergedNodes && !d.isNonConflictMergedTarget) {\n                    if (d.containsMergedNodes && !d.isNonConflictMergedTarget) {\n                        if (xBandScale.bandwidth() < 15) return 1;\n                        else return 2;\n                    }\n                    else if (d.containsMergeTraversedNodes) return 1;\n                    else return 0;\n                })\n                .style(\"stroke\", d => {\n                    // if (useHeuristicMerge && d.containsMergedNodes && !d.isNonConflictMergedTarget) return \"black\";\n                    if (d.containsMergedNodes && !d.isNonConflictMergedTarget) return \"black\";\n                    else if (d.containsMergeTraversedNodes) return \"grey\";\n                    else return \"\";\n                })\n                .style(\"stroke-dasharray\", d => (!useHeuristicMerge && (d.containsMergedNodes || d.containsMergeTraversedNodes) ? \"1, 1\" : \"\"))\n                ;\n\n            //////////////////////////////////////////////\n            // SET releaseStr to block\n            drawBlockList.forEach(block => {\n                let releaseNodeList = block.nodeList.filter(node => node.isRelease);\n\n                if (useHeuristicMerge) {\n                    releaseNodeList = releaseNodeList.concat(\n                        block.nodeList.reduce((prev, node) =>\n                            prev.concat(node.mergeNodes.filter(node => node.isRelease && node.seq >= sel[0] && node.seq <= sel[1]))\n                            , [])\n                    );\n                }\n                block.releaseNodeList = releaseNodeList;\n                releaseNodeList.sort((a, b) => b.seq - a.seq);\n                if (releaseNodeList.length === 1) block.releaseTagString = releaseNodeList[0].releaseTagString;\n                if (releaseNodeList.length > 1)\n                    block.releaseTagString = releaseNodeList[0].releaseTagString + \" (~\" + releaseNodeList.slice(-1)[0].releaseTagString + \")\";\n                if (releaseNodeList.filter(node => node.isMajorRelease).length > 0) block.containsMajorRelease = true;\n                else block.containsMajorRelease = false;\n                // console.log(\"block\", releaseNodeList, block);\n\n                ////////////////////////////////// \n                // HA MERGED EDGES\n                if (block.containsMergeTraversedNodes) {\n                    let toBlockList = toBlockListMapByBlock[block.id];\n                    let linkVertical = d3.linkVertical().x(d => d.x).y(d => d.y);\n                    let linkHorizontal = d3.linkHorizontal().x(d => d.x).y(d => d.y);\n\n                    let dataset = toBlockList.map(toBlock => {\n                        // console.log(\"check\", clusterNode, toBlock.clusterNode, clusterNode === toBlock.clusterNode);\n                        let sx, sy, tx, ty;\n                        sx = xRectScale(block.x) + xBandScale.bandwidth() / 2;\n                        sy = yBandScale(clusterNode.y) + boxHeight / 2;\n                        tx = xRectScale(toBlock.x) + xBandScale.bandwidth() / 2;\n                        ty = yBandScale(toBlock.clusterNode.y) + boxHeight / 2;\n                        // console.log(\"coordinagtes, \", sx, sy, tx, ty, block.mergedToNodeList, toBlock.nodeList, block.mergedToNodeList.map(n => blockMapByNode[n.id]), blockMapByNode,)\n// if (toBlock.clusterNode.y === clusterNode.y) console.log(\"appeared horizon\", block, toBlock);\n                        return {\n                            source: { x: sx, y: sy, }, target: { x: tx, y: ty }, toBlock: toBlock,\n                            id:block.id + \"_\" + toBlock.id,\n                            linkFunc: (toBlock.clusterNode.y !== clusterNode.y ? linkVertical : linkHorizontal),\n                        }\n                    });\n                    clusterOverviewSvg.append(\"g\").selectAll(\"path\")\n                        .data(dataset)\n                        .enter()\n                        .append(\"path\")\n                        .attr(\"id\", d => \"mergedRelationLink_\" + block.id + \"_\" + d.toBlock.id)\n                        .attr(\"class\", \"mergedRelationLinks\")// + \"mergedRelationLinks_\" + d.id)\n                        .attr(\"d\", d => d.linkFunc(d))\n                        .attr(\"orgColor\", clusterColor)\n                        .attr(\"orgVisibility\", (showMergeLink ? \"visible\" : \"hidden\"))\n                        .style(\"pointer-events\", \"none\")\n                        .style(\"stroke-dasharray\", (\"1, 1\"))\n                        .style(\"stroke\", clusterColor)\n                        .style(\"stroke-width\", 2)\n                        .style(\"fill-opacity\", 0)\n                        .style(\"stroke-opacity\", \"0.6\")\n                        .style(\"visibility\", function () {\n                            return (showMergeLink ? \"visible\" : \"hidden\");\n                        });\n                }\n            });\n\n            let releaseBlockList = drawBlockList.filter(block => block.releaseTagString !== undefined && block.releaseTagString !== \"\");\n            let releases = clusterOverviewSvg.append(\"g\").selectAll(\"line\")\n                .data(releaseBlockList)\n                .enter();\n            releases.append(\"line\")\n                .attr(\"id\", d => d.releaseTagString)\n                .attr(\"stroke\", \"red\")\n                .style(\"stroke-width\", \"2px\")\n                .attr(\"x1\", d => xBandScale(d.x) + xBandScale.bandwidth())\n                .attr(\"x2\", d => xBandScale(d.x) + xBandScale.bandwidth())\n                .attr(\"y1\", yBandScale(clusterNode.y) - 3)\n                .attr(\"y2\", yBandScale(clusterNode.y) + yBandScale.bandwidth() + 3)\n                .style(\"stroke-dasharray\", \"2\")\n                ;\n            releases\n                .append(\"text\")\n                .attr(\"x\", d => xBandScale(d.x) + xBandScale.bandwidth())\n                .attr(\"y\", yBandScale(clusterNode.y))\n                .attr(\"text-anchor\", \"start\")\n                .style(\"font-size\", \"10px\")\n                .style(\"font-weight\", d => (d.containsMajorRelease ? \"bold\" : \"\"))\n                .text(d => d.releaseTagString)\n                ;\n\n            colorByBranchNo[clusterNode.cluster.nodeList[0].implicitBranchNo] = clusterColor;\n\n\n            /////////////////////////////////////\n            // BLOCKS BOX\n            let HALinkIds = clusterNode.blockList.reduce((prev, block) => prev.concat(block.HALinkIds), []);\n            blocksBox.append(\"rect\")\n                .attr(\"class\", \"blocksBox\")\n                .attr(\"id\", \"blocksBox\" + clusterNode.cluster.id)\n                .attr(\"style\", \"stroke:\" + clusterColor + \";fill-opacity:\" + defaultClusterOpacity + \";fill:\" + clusterColor)\n                .style(\"stroke-dasharray\", (clusterNode.isNonConfilctMerge ? 4 : 0))\n                .style(\"stroke-opacity\", (clusterNode.isNonConfilctMerge ? 0.3 : 1))\n                .style(\"stroke-width\", 1)\n                .style(\"cursor\", \"pointer\")\n                .attr(\"x\", x)\n                .attr(\"y\", y)\n                .attr(\"width\", boxWidth)\n                .attr(\"height\", boxHeight)\n                .attr(\"rx\", (boxWidth >= 10 ? 5 : 2))\n                .on(\"click\", function () {\n                    // BLOCK CLICK EVENT (NOT BRANCH)\n                    if (clusterNode.isNonConfilctMerge) return;\n\n                    let isMulti = showGroupSummaryFunc(-1, [clusterNode]);\n                    if (!isMulti) {\n                        d3.selectAll(\".blocksBox\").style(\"fill-opacity\", defaultClusterOpacity);\n                    }\n                    // d3.selectAll(\".blocksBox\").style(\"fill-opacity\", defaultClusterOpacity);\n                    d3.select(this).style(\"fill-opacity\", \"0.4\");\n                    d3.selectAll(\".branchUnderlines\").style(\"fill-opacity\", 0.4);\n                    // showBranchSummary(clusterNodesByBranchNo[branchNo], branchNo, width, height, ignoreFiles, summaryByLOC);\n                })\n                .on(\"mouseover\", function () {\n                    if (clusterNode.isNonConfilctMerge) return;\n                    d3.select(this).style(\"stroke-width\", 3);\n\n                    if (!useHeuristicMerge) moverLinks(HALinkIds);\n                })\n                .on(\"mouseleave\", function () {\n                    if (clusterNode.isNonConfilctMerge) return;\n                    d3.select(this).style(\"stroke-width\", 1);\n\n                    if (!useHeuristicMerge) mleaveLinks(HALinkIds);\n                })\n                ;\n            if (boxWidth >= 10) {\n                blocksBox\n                    .append(\"text\")\n                    .attr(\"x\", x + boxWidth)\n                    .attr(\"y\", y + yBandScale.bandwidth() - 1)\n                    .attr(\"text-anchor\", \"end\")\n                    .style(\"font-size\", \"12px\")\n                    .text(clusterNode.isNonConfilctMerge ? \"\" : clusterNode.cluster.nodeCount)// + clusterNode.cluster.mergedNodeCount)\n                    // .text(clusterNode.blockList.reduce((prev, cur) => (prev + cur.commitCount), 0))\n                    ;\n            }\n\n            ////////////////////////////////// \n            // EDGES\n            let dataset = [];\n            let child = clusterNode.cluster.child;\n            let parent = clusterNode.cluster.parent;\n            const pushDataSet = (node, isChild) => {\n                if (node === undefined) return true;\n\n                let sx, sy, tx, ty;\n\n                let [minNX, maxNX] = d3.extent(node.blockList.map(d => d.x));\n                if (isChild) {\n                    sx = x + boxWidth;\n                    sy = y + boxHeight / 2;\n                    tx = xRectScale(minNX);\n                    ty = yBandScale(node.y) + boxHeight / 2;\n                } else {\n                    sx = xRectScale(maxNX) + xBandScale.bandwidth();\n                    sy = yBandScale(node.y) + boxHeight / 2;\n                    tx = x;\n                    ty = y + boxHeight / 2;\n                }\n\n                dataset.push({\n                    source: { x: sx, y: sy, }, target: { x: tx, y: ty }\n                });\n            }\n\n            if (child !== undefined) pushDataSet(clusterNodeList.filter(d => d.cluster === child)[0], true);\n            if (parent !== undefined) pushDataSet(clusterNodeList.filter(d => d.cluster === parent)[0], false);\n            // console.log(\"datset.lnegth = \", clusterNode.cluster, child, parent, clusterNode.cluster.id, dataset.length, dataset)\n            blocksBox.selectAll(\"path\")\n                .data(dataset)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", \"edge\" + clusterNode.cluster.id)\n                .attr(\"d\", d3.linkHorizontal().x(d => d.x).y(d => d.y))\n                .style(\"pointer-events\", \"none\")\n                // .style(\"stroke-dasharray\", (\"1, 1\"))\n                .style(\"stroke\", clusterColor)\n                .style(\"stroke-width\", 2)\n                .style(\"fill-opacity\", 0)\n                .style(\"stroke-opacity\", \"0.3\")\n            ;\n        });\n\n    //////////////////////////////////////////////////\n    // UNDERLINES\n    Object.values(clusterNodesByBranchNo).forEach(branchClusterNodes => {\n        branchClusterNodes.sort((a, b) => a.blockList[0].x - b.blockList[0].x);\n        let branchNo = branchClusterNodes[0].cluster.nodeList[0].implicitBranchNo;\n        let elem = clusterOverviewSvg.append(\"g\");\n        let branchUnderlineWidth = xRectScale(branchClusterNodes.slice(-1)[0].blockList.slice(-1)[0].x) + xBandScale.bandwidth() - xRectScale(branchClusterNodes[0].blockList[0].x);\n\n        let HALinkIds = branchClusterNodes.reduce((p, clusterNode) =>\n            p.concat(clusterNode.blockList.reduce((prev, block) => prev.concat(block.HALinkIds), []))\n            , []);\n        \n        let branchNames = GitAnalyzer.getBranchNamesFromBranchClusterNodes(branchClusterNodes);\n\n        elem.append(\"rect\")\n            .attr(\"class\", \"branchUnderlines\")\n            .attr(\"id\", \"underlines\" + branchNo)\n            // .style(, \"stroke-width:\" + summaryLineHeight + \"px\")\n            .attr(\"x\", xRectScale(branchClusterNodes[0].blockList[0].x))\n            .attr(\"width\", branchUnderlineWidth)\n            .attr(\"y\", yBandScale(branchClusterNodes[0].y) + yBandScale.bandwidth())// + summaryLineHeight / 2)\n            .attr(\"rx\", (xRectScale(branchClusterNodes.slice(-1)[0].blockList.slice(-1)[0].x) + xBandScale.bandwidth() - xRectScale(branchClusterNodes[0].blockList[0].x) >= 10 ? 4 : 2))\n            .attr(\"height\", summaryLineHeight)\n            .style(\"fill\", colorByBranchNo[branchNo])\n            .style(\"fill-opacity\", \"0.4\")\n            .style(\"stroke\", colorByBranchNo[branchNo])\n            .style(\"stroke-opacity\", 0.4)\n            .style(\"cursor\", \"pointer\")\n            .on(\"click\", function () {\n                console.log(\"branch show\", branchNo);\n                showGroupSummaryFunc(branchNo, branchClusterNodes);\n                // d3.select(this)\n                //     .attr(\"y\", yBandScale(branchNodes[0].y) + yBandScale.bandwidth())\n                //     .attr(\"height\", summaryLineHeight);\n                d3.selectAll(\".branchUnderlines\").style(\"fill-opacity\", 0.4);\n                d3.select(this).style(\"fill-opacity\", 1);\n                d3.select(\".blocksBox\").style(\"fill-opacity\", defaultClusterOpacity);\n            })\n            .on(\"mouseover\", function (d) {\n                // d3.select(this)\n                //     .attr(\"y\", yBandScale(branchNodes[0].y))\n                //     .attr(\"height\", yBandScale.bandwidth() + summaryLineHeight);\n                d3.select(this).style(\"stroke-width\", \"3px\").style(\"stroke-opacity\", 1)//.style(\"fill-opacity\", 0);\n\n                if (!useHeuristicMerge) moverLinks(HALinkIds);\n                \n                d3.select(\"#clusterToolTip\")\n                    .html(branchNames.join(\"<br />\"))\n                    .style(\"visibility\", \"visible\")\n                    .style(\"opacity\", 0.8)\n                    .style(\"left\", (d3.event.pageX + 4) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 2) + \"px\");\n            })\n            .on(\"mouseleave\", function (d) {\n                // d3.select(this)\n                // .attr(\"y\", yBandScale(branchNodes[0].y) + yBandScale.bandwidth())\n                // .attr(\"height\", summaryLineHeight);\n                d3.select(this).style(\"stroke-width\", \"1px\").style(\"stroke-opacity\", 0.4)//.style(\"fill-opacity\", 0.4);\n\n                if (!useHeuristicMerge) mleaveLinks(HALinkIds);\n                d3.select(\"#clusterToolTip\").style(\"visibility\", \"hidden\");\n            })\n            ;\n\n        elem.append(\"text\")\n            .attr(\"id\", \"foldButton\" + branchNo)\n            .attr(\"x\", Math.min(xRectScale(branchClusterNodes.slice(-1)[0].blockList.slice(-1)[0].x) + xBandScale.bandwidth(), width) + 2)\n            .attr(\"y\", yBandScale(branchClusterNodes[0].y) + yBandScale.bandwidth() + summaryLineHeight)\n            // .text(branchNo + \"<\")\n            // .text( (branchNodes[0].cluster.branches.length > 0 ? branchNodes[0].cluster.branches.map(b => b.split(\"/\").slice(-1)[0]) : \"\") + \"▼\")\n            .text(\n                // GitAnalyzer.getBranchNamesFromBranchClusterNodes(branchClusterNodes).join(\",\") + \n                \"▼\")\n            .style(\"font-size\", (branchUnderlineWidth > 30 ? \"14px\" : (branchUnderlineWidth > 8 ? \"12px\" : \"8px\")))\n            .style(\"font-weight\", \"bold\")\n            .style(\"pointer-events\", \"none\")\n            .attr(\"fill\", colorByBranchNo[branchNo])\n            .attr(\"text-anchor\", \"end\")\n    });\n\n    return [clusterNodesByBranchNo, width, height];\n}\n\nfunction getClusterNodeColorFromClusterNodes(clusterNodes) {\n    return getClusterNodeColor(clusterNodes.slice(-1)[0].cluster);\n}\n\nfunction getClusterNodeColor(clusterNode) {\n    return BranchColors[clusterNode.branchType];\n}\n\nfunction getFileSetForCluster(cluster, ignoreFiles) {\n    return cluster.nodeList.reduce((prev, node) => {\n        let fileNameList = Object.keys(node.commit.diffStat.files);\n        fileNameList.filter(f => ignoreFiles.indexOf(f) < 0).forEach(d => prev.add(d));\n        return prev;\n    }, new Set());\n}","import Button from '@material-ui/core/Button';\nimport * as d3 from 'd3';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from '../modules';\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport ValueSlider from './ValueSlider';\nimport BranchSummary from './BranchSummary';\nimport { intersection } from \"lodash\";\n\nimport { drawClusters } from './CommitGraphDrawCluster';\nimport { buildClusterNodes } from './CommitGraphClustering';\n\nfunction highlightKeywordMatchBlock(searchResultList, currentClusterNodeList) {\n    // highlight blocks\n    let searchResultCommitSeqList = searchResultList.reduce((prev, cur) => {\n        prev.push(cur.seq);\n        return prev;\n    }, []);\n    d3.selectAll(\".matches\").remove();\n    if (searchResultList.length === 0) return;\n    \n    let matchSvg = d3.select(\"#clusters\").append(\"g\").attr(\"class\", \"matches\");\n    currentClusterNodeList\n        .reduce((prev, cur) => {\n            prev = prev.concat(cur.blockList);\n            return prev;\n        }, [])\n        .filter(block => d3.select(\"#block\" + block.id).size() > 0)\n        .forEach(block => {\n            if (intersection(searchResultCommitSeqList, block.nodeList.map(d => d.seq)).length > 0) {\n                let blockNode = d3.select(\"#block\" + block.id);\n                let x = +blockNode.attr(\"x\");\n                let y = +blockNode.attr(\"y\");\n                let width = +blockNode.attr(\"width\");\n                let height = +blockNode.attr(\"height\");\n\n                const over = 4;\n                matchSvg\n                    .append(\"ellipse\")\n                    .attr(\"class\", \"matchRect\")\n                    .attr(\"cx\", x + width / 2.0)\n                    .attr(\"cy\", y + height / 2.0)\n                    .attr(\"rx\", width / 2.0 + over)\n                    .attr(\"ry\", height / 2.0 + over)\n                    .style(\"fill\", \"red\")\n                    .style(\"fill-opacity\", \"0.2\")\n                    .style(\"stroke\", \"red\")\n                    .style(\"stroke-width\", \"2\")\n                    .style(\"pointer-events\", \"none\")\n                ;\n            }\n        });\n    \n    searchResultCommitSeqList.forEach ( seq => {\n        const commitRect = d3.select(\"#commitRect\" + seq);\n        const x = +commitRect.attr(\"x\");\n        const y = +commitRect.attr(\"y\");\n        const width = +commitRect.attr(\"width\");\n        const height = +commitRect.attr(\"height\");\n        const over = 2;\n\n        d3.select(\"#commitRects\")\n            .append(\"ellipse\")\n            .attr(\"class\", \"matchRect\")\n            .attr(\"cx\", x + width / 2.0)\n            .attr(\"cy\", y + height / 2.0)\n            .attr(\"rx\", width / 2.0 + over)\n            .attr(\"ry\", height / 2.0)\n            .style(\"fill\", \"red\")\n            .style(\"fill-opacity\", \"0.2\")\n            .style(\"stroke\", \"red\")\n            .style(\"stroke-width\", \"2\")\n            .style(\"pointer-events\", \"none\")\n        ;\n    });\n}\n\n/////////////////////\n// HOOK CLASS\nconst CommitGraph = (props) => {\n    // const ignoreFiles = [\"CHANGELOG.md\", \"version.txt\"];\n    const state = useSelector(state => state);\n    const layout = JSON.parse(JSON.stringify(state.layout));\n    const overviewWidth = layout.clusterOverviewWidth;\n    const width = layout.clusterOverviewWidth - layout.clusterOverviewSliderWidth;\n    const height = layout.clusterOverviewHeight;\n\n    // local layout vars\n    layout.height = height;\n    layout.sliderWidth = layout.clusterOverviewSliderWidth;\n    // layout.clusterOverviewMarginRight = 3;\n    layout.clusterOverviewWidth = layout.width - layout.sliderWidth// - this.clusterOverviewMarginRight;\n    layout.minBlockShow = 0;\n\n    const dispatch = useDispatch();\n    const updateClusterThreshold = (th) => dispatch(actions.updateClusterThreshold(th));\n    const updateClusterOverviewHeight = (height) => dispatch(actions.updateClusterOverviewHeight(height));\n    const [thresholdList, setThresholdList] = useState([]);\n\n    // info = [clusterNodes, isBranch]\n    let prevSelectedClusterNodesInfo = useRef([undefined, undefined]);\n    const [selectedClusterNodesInfo, setSelectedClusterNodesInfo] = useState([undefined, undefined]);\n\n    let clusteringResult = useRef();\n    let clusterNodesResult = useRef();\n    let clusterNodesByBranchNo = useRef();\n    let groupSvgWidth = useRef(0);\n    let totalStat = useRef([0, 0]);\n    \n    const showGroupSummaryFunc = (branchNo, clusterNodes) => {\n        // CONTROL MULTI CLICK (SHIFT)\n        let currentClusterNodes = prevSelectedClusterNodesInfo.current[1];\n// console.log(\"prev = \", prevSelectedClusterNodesInfo.current);\n        let multi = false;\n        if (d3.event !== null \n                && d3.event.shiftKey \n                && branchNo === -1\n                && prevSelectedClusterNodesInfo.current !== undefined && prevSelectedClusterNodesInfo.current[0] === -1 \n                && prevSelectedClusterNodesInfo.current[1][0].cluster.nodeList[0].implicitBranchNo === clusterNodes[0].cluster.nodeList[0].implicitBranchNo\n                ) {\n            // already chosen => pass\n            if (prevSelectedClusterNodesInfo.current[1].filter(d => d.cluster.id === clusterNodes[0].cluster.id).length === 0) {\n                currentClusterNodes.push(clusterNodes[0]);\n            }\n            multi = true;\n        } else {\n            currentClusterNodes = clusterNodes;\n        }\n        prevSelectedClusterNodesInfo.current = [branchNo, currentClusterNodes];\n        setSelectedClusterNodesInfo([branchNo, currentClusterNodes]);\n\n        if (branchNo >= 0) d3.select(\"#underlines\" + branchNo).style(\"fill-opacity\", 1);\n        \n        return multi;\n// console.log(\"showGroupSummaryFunc called\", [branchNo, clusterNodes])\n    }\n\n    const buildAndDrawClusterNodes = () => {\n        let [threshold, thresholdList, clusterList] = clusteringResult.current;\n\n        setSelectedClusterNodesInfo([undefined, undefined]);\n\n        clusterNodesResult.current = buildClusterNodes(props.gitAnalyzer, threshold, thresholdList, clusterList, state.groupingParameters.branchShowMapByType);\n        setThresholdList(clusterNodesResult.current[2]);\n\n        let svgHeight;\n        [clusterNodesByBranchNo.current, groupSvgWidth.current, svgHeight] = drawClusters(\n            layout, state.commitSeqSelection, clusterNodesResult.current[0], clusterNodesResult.current[1], \n            props.gitAnalyzer, state.groupingParameters.preferenceWeights, state.groupingParameters.threshold,\n            state.groupingParameters.nonConflictGroupingLevel, state.summaryParameters.hideFiles,\n            state.groupingParameters.useHeuristicMerge, state.showMergeLink, \n            showGroupSummaryFunc);\n        updateClusterOverviewHeight(svgHeight);\n        \n        totalStat.current = [\n            clusterNodesResult.current[0].filter(d => !d.isNonConfilctMerge).length,\n            clusterNodesResult.current[0].filter(d => !d.isNonConfilctMerge).reduce( (prev, d) => prev + d.cluster.nodeCount, 0),\n            // (useHeuristicMerge ? clusteringResult.current[0].filter(d => !d.isNonConfilctMerge).reduce( (prev, d) => prev + d.mergeNodes.nodeCount, 0) : 0)\n        ];\n\n// console.log(\"clusterNodesByBranchNo\", clusterNodesByBranchNo.current, selectedClusterNodesInfo[0] in clusterNodesByBranchNo.current)\n        if (!(selectedClusterNodesInfo[0] in clusterNodesByBranchNo.current)) {\n            setSelectedClusterNodesInfo([undefined, undefined]);\n            prevSelectedClusterNodesInfo.current = [undefined, undefined];\n        } else {\n            showGroupSummaryFunc(selectedClusterNodesInfo[0], clusterNodesByBranchNo.current[selectedClusterNodesInfo[0]]);\n            // setSelectedClusterNodesInfo([selectedClusterNodesInfo[0], ]);\n            // prevSelectedClusterNodesInfo.current()\n        }\n\n        highlight();\n    }\n\n    const highlight = () => {\n        if (state.highlightQuery !== undefined && state.highlightQuery.length > 0) {\n            let searchResultNodeList = GitAnalyzer.searchByKeywords(\n                clusterNodesResult.current[0].reduce( (prev, clusterNode) => prev.concat(clusterNode.cluster.nodeList.map(d => d)), []), \n                state.highlightQuery);\n            highlightKeywordMatchBlock(searchResultNodeList, clusterNodesResult.current[0]);\n        } else {\n            highlightKeywordMatchBlock([], undefined);\n        }\n    }\n\n    //////////////////////////////////////\n    // USE EFFECTS\n    //////////////////////////////////////\n    useEffect( () => {\n        setSelectedClusterNodesInfo([undefined, undefined]);\n    }, [state.globalCommitSeqSelectionByTemporalFilter]);\n\n    useEffect(() => {\n// console.log(\"called useEffect buildAndDrawClusterNodes\");\n// console.log(\"CHANGED USEEFFECT\", state, prevSelectedClusterNodesInfo, selectedClusterNodesInfo, props.gitAnalyzer.allNodeList.filter(d => d.mergeNodes.length > 0));\n        clusteringResult.current = props.gitAnalyzer.getOverviewClusters(\n                state.groupingParameters.threshold, state.commitSeqSelection, state.groupingParameters.preferenceWeights, \n                state.groupingParameters.keywordFilterList, state.groupingParameters.releaseBinningLevel, state.groupingParameters.useHeuristicMerge);\n        \n        buildAndDrawClusterNodes();\n    }, [\n        state.groupingParameters.useHeuristicMerge,\n        state.commitSeqSelection,\n        state.groupingParameters.threshold, \n        state.groupingParameters.nonConflictGroupingLevel, \n        state.groupingParameters.releaseBinningLevel,\n        state.groupingParameters.keywordFilterList,\n        state.groupingParameters.preferenceWeights,\n    ]);\n\n    useEffect( () => {\n        buildAndDrawClusterNodes();\n    }, [\n        state.groupingParameters.branchShowMapByType,\n    ]);\n\n    useEffect( () => {\n        highlight();\n    }, [state.highlightQuery,]);\n\n    useEffect( () => {\n        if(state.showMergeLink) {\n            d3.selectAll(\".mergedRelationLinks\")\n                .attr(\"orgVisibility\", \"visible\")\n                .style(\"visibility\", \"visible\");\n        }\n        else {\n            d3.selectAll(\".mergedRelationLinks\")\n                .attr(\"orgVisibility\", \"hidden\")\n                .style(\"visibility\", \"hidden\");\n        }\n    }, [state.showMergeLink,]);\n\n\n    return (\n        <div className=\"flexVerticalContainer\" style={{ width: overviewWidth }}>\n            <div className=\"flexContainer\">\n                <div width={layout.sliderWidth} align=\"right\">\n                    <ValueSlider\n                        name={\"clusterOverview\"}\n                        defaultStepValue={0}\n                        threshold={state.groupingParameters.threshold}\n                        changeThreshold={updateClusterThreshold}\n                        height={height}\n                        thresholdList={thresholdList}\n                        width={layout.sliderWidth} />\n                </div>\n                <div \n                    id=\"branchSummaryDiv\" \n                    style={{ position: \"relative\", zIndex: 1, float: \"left\" }} \n                    width={width} \n                    height={height}\n                    visible={\"visible\"}\n                >\n                    {/* {selectedClusterNodesInfo[0] !== undefined && selectedClusterNodesInfo[1] !== undefined  && */}\n                        <BranchSummary\n                            clusterNodes = {selectedClusterNodesInfo[1]}\n                            branchNo = {selectedClusterNodesInfo[0]}\n                            width = {groupSvgWidth.current}\n                            height = {state.layout.clusterOverviewHeight}\n                            hideFiles = {state.summaryParameters.hideFiles}\n                            summaryByLOC = {state.summaryParameters.summaryByLOC}\n                            useHeuristicMerge = {state.groupingParameters.useHeuristicMerge}\n                            branchShowMapByType = {state.groupingParameters.branchShowMapByType}\n                            gitAnalyzer = {props.gitAnalyzer}\n                        />\n                    {/* } */}\n                </div>\n                <div>\n                    <svg id=\"clusterOverviewSvg\" width={width} height={height}\n                        style={{ \"background\": \"#fafafa\", \"opacity\": \"0.95\" }}\n                    // transform={\"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"}>           \n                    >\n                    </svg>\n                </div>\n            </div>\n            <div className=\"flexContainer\" style={{ width: overviewWidth, justifyContent: \"space-between\", height: \"25px\" }}>\n                <div style={{width:layout.sliderWidth + 10}}></div>\n                <div style={{width:\"100%\"}}>\n                    ({totalStat.current[0]} CLUSTERS, {totalStat.current[1]} COMMITS)\n                </div>\n                <div align=\"right\" style={{width:\"300px\", paddingTop:\"5px\", paddingRight:\"5px\"}}>\n                    {selectedClusterNodesInfo[1] !== undefined &&\n                        <Button style={{ \"fontSize\": \"11px\", \"zIndex\": 10 }} size=\"small\" variant=\"outlined\" \n                            onClick={ () => {\n                                // if (selectedClusterNodesInfo[1] === undefined) return;\n                                const maxCaptureCount = 6;\n                                if (state.capturedSummaryInfoList.length >= maxCaptureCount) {\n                                    alert(\"# of max CAPTURE is \" + maxCaptureCount);\n                                    return;\n                                }\n                                dispatch(actions.addCapturedSummaryInfoList(\n                                    [\n                                        selectedClusterNodesInfo[1],\n                                        state.groupingParameters,\n                                    ]\n                                ));\n                                console.log(\"button click\", selectedClusterNodesInfo, selectedClusterNodesInfo[1], state.capturedSummaryInfoList.concat(selectedClusterNodesInfo[1]));\n                            }}>\n                            CAPTURE SELECTION\n                        </Button>\n                    }\n\n                </div>\n            </div>\n            <div className=\"flexContainer\">\n                \n            </div>\n            {/* <ClusterToolTip\n                    cluster={overCluster}\n                /> */}\n            <div id=\"clusterToolTip\" className=\"tooltip\" style={{ visibility: \"hidden\", opacity: 0.8 }}></div>\n        </div>\n    );\n}\n\n\nexport default CommitGraph;","import * as d3 from 'd3';\nimport { ClusterBlock, ClusterNode } from \"./analyzer/GithruClasses\";\n\nexport function buildClusterNodes(gitAnalyzer, threshold, thresholdList, clusterList, branchShowMapByType) {\n    // console.log(\"clusterOverviewRender\", pref, threshold, releaseBinningLevel, gitAnalyzer, selection, keywordFilterList);\n    if (threshold === undefined) threshold = 0;\n    let clusterNodeList = [];\n    // let pointSet = new Set();\n\n    // if (!showPullRequestBranch) {\n    //     clusterList = clusterList.filter(cluster => {\n    //         if (cluster.nodeList[0].implicitBranchNo === 0 || cluster.branches.length === 0) return true;\n    //         cluster.onPullRequestBranch = cluster.branches.filter(b => b.startsWith(\"origin/pr\") === false).length > 0;\n    //         // console.log(\"onPullRequestBranch\", cluster, cluster.onPullRequestBranch)\n    //         return cluster.onPullRequestBranch;\n    //     });\n    // }\n    \n    let [startPoint, endPoint] = d3.extent(clusterList.reduce((prev, cluster) => prev.concat(cluster.nodeList), []).map(n => n.seq));\n    // let startPoint = clusterList[0].nodeList[0].seq;\n    // let endPoint = clusterList.slice(-1)[0].nodeList.slice(-1)[0].seq;\n    // let pointArrayForCheckEmptyBlock = d3.range(startPoint, endPoint + 1).map(d => false);\n    // console.log(\"nodeList = \", clusterList.map(c => c.nodeList), clusterList.reduce( (prev, cluster) => prev.concat(cluster.nodeList), []).map(n => n.seq).sort( (a, b) => a - b ));\n    let xArray = d3.range(startPoint, endPoint + 1).map(d => -1);\n    let clusterNodeMapByCluster = {};\n    let cIndex = 0;\n\n    clusterList.forEach(cluster => {\n        ////////////////////////////////\n        // FILTER branchShowMapByType\n        let branchType = gitAnalyzer.getClusterBranchType(cluster);\n        let noShowTypes = Object.entries(branchShowMapByType).filter(entry => entry[1] === false).map(e => e[0]);\n        // SKIP IF NO SHOW\n        if (noShowTypes.findIndex(t => t === branchType) >= 0) return;\n\n        ////////////////////////////////\n        // BUILD NODES\n        cluster.nodeList.forEach(n => xArray[n.seq - startPoint] = cIndex);\n        \n        let clusterNode = new ClusterNode(cluster);\n        clusterNode.branchType = branchType;\n        clusterNodeList.push(clusterNode);\n        clusterNodeMapByCluster[clusterNode.cluster.id] = clusterNode;\n        cIndex++;\n    });\n\n    // console.log(\"xArray\", xArray, startPoint, endPoint)\n    let fi, blockStartSeq = startPoint, blockIndex = 0, prevClusterIndexOfBlock = xArray[0];\n    for (fi = startPoint + 1; fi <= endPoint + 1; fi++) {\n        let currentClusterIndexOfBlock = xArray[fi - startPoint];\n        // console.log(\"looping!!\", fi - startPoint, prevClusterIndexOfBlock, currentClusterIndexOfBlock, \"blockIndex = \", blockIndex);\n\n        if (fi !== endPoint + 1 && currentClusterIndexOfBlock < 0) continue;\n        if (prevClusterIndexOfBlock === -1) prevClusterIndexOfBlock = currentClusterIndexOfBlock;\n\n        if (currentClusterIndexOfBlock !== prevClusterIndexOfBlock) {\n            // console.log(\"changed!!\", fi - startPoint, prevClusterIndexOfBlock, currentClusterIndexOfBlock, \"blockIndex = \", blockIndex);\n            // console.log(\"clusterNode?\", prevClusterIndexOfBlock, currentClusterIndexOfBlock, clusterNodeList[prevClusterIndexOfBlock])\n            // create and insert cluster node\n            let clusterNode = clusterNodeList[prevClusterIndexOfBlock];\n            let nodeList = clusterNode.cluster.nodeList.filter(n => (n.seq >= blockStartSeq && n.seq < fi));\n            let containsMergedNodes = nodeList.filter(node => node.mergeNodes.length > 0).length > 0;\n            let containsMergeTraversedNodes = nodeList.filter(node => node.isMergeTraversed).length > 0;\n            let mergedToNodeList = nodeList.filter(node => node.mergedToNode !== undefined).map(n => n.mergedToNode);\n            // console.log(\"mergedToNodeList\", nodeList, mergedToNodeList);\n            clusterNode.y = Math.min(...clusterNode.cluster.nodeList.map(d => d.implicitBranchNo));\n            clusterNode.blockList.push(new ClusterBlock(blockIndex, nodeList, blockStartSeq, fi, blockIndex, containsMergedNodes, containsMergeTraversedNodes, mergedToNodeList, clusterNode));\n            blockIndex++;\n            blockStartSeq = fi;\n        }\n        prevClusterIndexOfBlock = currentClusterIndexOfBlock;\n    }\n\nconsole.log(\"clusterNodeList Reslut\", clusterNodeList);\n\n    // compress vertical\n    clusterNodeList.sort((a, b) => (b.blockList.slice(-1)[0].x - a.blockList.slice(-1)[0].x));\n\n    let maxBlockIndex = blockIndex;\n    // let maxBlockIndex = pointList.length - 1;\n    let xMargin = 3;\n    let maxY = 1;\n    let yArray = Array.from({ length: maxBlockIndex }, d => maxBlockIndex);\n    clusterNodeList.filter(nodeList => nodeList.y !== 0).forEach(cn => {\n        if (cn.cluster.child !== undefined && clusterNodeMapByCluster[cn.cluster.child.id] !== undefined) return;\n        // if (cn.cluster.child !== undefined && (!showPullRequestBranch && cn.cluster.child.onPullRequestBranch)) return;\n        let startX = cn.blockList[0].x;\n        let endX = cn.blockList[cn.blockList.length - 1].x;\n        // let endX = Math.max(cn.blockList[cn.blockList.length - 1].x + xMargin, pointList.length - 1);\n        let y;\n        for (y = 1; y < maxY; y++) {\n            if (Math.max(0, yArray[y] - xMargin) > endX) {\n                break;\n            }\n        }\n        if (y === maxY) {\n            maxY++;\n        }\n        // yArray[y] = startX;\n\n        let endXOfClusterTree = startX;\n        let pc = cn.cluster.parent;\n        while (pc !== undefined) {\n            // there can be some cases when parent is hidden but grandparent is not... -_-\n            if (clusterNodeMapByCluster[pc.id] === undefined) {\n                pc = pc.parent;\n                continue;\n            }\n            endXOfClusterTree = clusterNodeMapByCluster[pc.id].blockList[0].x;\n            clusterNodeMapByCluster[pc.id].y = y;\n            pc = pc.parent;\n        }\n        yArray[y] = endXOfClusterTree;\n        cn.y = y;\n    });\n\n    return [clusterNodeList, maxBlockIndex, thresholdList];\n}","import React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport * as actions from '../modules';\n\n// import \"./Search.css\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\n\nimport Form from 'react-bootstrap/Form';\nimport { KeywordFilter } from './analyzer/GithruClasses';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textArea: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginBottom: \"8px\",\n        fontSize: \"12px\",\n        minHeight: \"50px\",\n    },\n}));\n\nconst KeywordTextAreaFilter = props => {\n    const classes = useStyles();\n    const [ includeFilterStr, setIncludeFilterStr ] = useState(\"\");\n    const [ excludeFilterStr, setExcludeFilterStr ] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const parseFilterStr = (str, isIncludes) => {\n        console.log(\"parseFilterStr\", str, isIncludes, str.split(\"\\n\"))\n        return str.split(\"\\n\").map(d => d.trim()).filter(d => d !== \"\").map(line => {\n            let items = line.split(\":\");\n            if (items.length !== 2) {\n                return undefined;\n            } else {\n                return new KeywordFilter(isIncludes, items[ 0 ], items[ 1 ]);\n            }\n        });\n    }\n\n    return (\n        <div align=\"center\" className=\"flexVerticalContainer\" style={{ width: \"100%\", alignItems: \"center\" }}>\n            {/* <TextField\n                style={{ \"fontSize\": \"11px\" }} \n                id=\"standard-basic\"\n                className={classes.textField}\n                margin=\"none\"\n                size=\"small\"\n\n                defaultValue={filters}\n                onChange={(event) => {\n                    console.log(\"addFilter!!\", event.target.value);\n                    setFilters(event.target.value);\n                }}\n            /> */}\n            <form className={classes.container} noValidate autoComplete=\"on\">\n                <Form.Control\n                    className={classes.textArea} as=\"textarea\" rows=\"2\"\n                    placeholder=\"INCLUDES (a:author, f:file, t:commitType, m:message)\"\n                    onChange={(event) => {\n                        setIncludeFilterStr(event.target.value);\n                    }}\n                />\n\n                <Form.Control\n                    className={classes.textArea} as=\"textarea\" rows=\"2\"\n                    placeholder=\"EXCLUDES (a:author, f:file, t:commitType, m:message)\"\n                    onChange={(event) => {\n                        setExcludeFilterStr(event.target.value);\n                    }}\n                />\n            </form>\n            <div className=\"flexVerticalContainer\" style={{ width: \"100%\", alignItems: \"center\" }}>\n                <Button\n                    style={{ \"fontSize\": \"11px\", width: \"95%\" }} size=\"small\" variant=\"outlined\"\n                    onClick={() => {\n                        let kfList = [];\n                        kfList = kfList.concat(parseFilterStr(includeFilterStr, true));\n                        kfList = kfList.concat(parseFilterStr(excludeFilterStr, false));\n\n                        if (kfList.filter(d => d === undefined).length > 0) {\n                            alert(\"insert [dataType]:[keyword]\");\n                            return;\n                        }\n                        console.log(\"keyword filters\", kfList);\n\n                        dispatch(actions.updateKeywordFilterList(kfList));\n                    }}>\n                    FILTER IN/OUT BY KEYWORDS\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default KeywordTextAreaFilter;","import React, { useState, } from 'react';\nimport \"./ValueSlider.css\";\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { PreferenceList } from './analyzer/GithruClasses';\nimport { cloneDeep } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../modules';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    height: 35,\n    width: 35,\n    margin: theme.spacing(0),\n    color: \"skyblue\",\n  },\n  button: {\n      height:40,\n      width:40,\n      margin: theme.spacing(0),\n      padding: 0,\n      minWidth: 40\n  },\n  div: {\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n  prefDiv: {\n    display: \"flex\",\n    fontSize: \"12px\",\n    width: \"100%\",\n    height: \"20px\",\n    padding: 0\n  },\n  prefName: {\n    // display: \"flex\",\n    fontWeight: \"bold\",\n    fontSize: \"10px\",\n    width: \"90px\",\n    textAlign: \"right\",\n    paddingRight: 10,\n    paddingTop: 5,\n    textTransform: \"uppercase\"\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"8px\",\n    paddingLeft: \"8px\",\n    paddingRight: \"8px\"\n  }\n}));\n\nconst HorizontalSlider = withStyles({\n  root: {\n    color: \"#78909c\",\n    height: 8,\n    padding: \"10px 0px\"\n  },\n  thumb: {\n    height: \"8px\",\n    width: \"8px\",\n    marginTop: \"-3px\",\n  },\n  valueLabel: {\n    fontSize: \"10px\",\n    circle: {\n      width: \"10px\",\n      height: \"10px\",\n    }\n  },\n  // valueLabelCircle: {\n  //   width: \"10px\",\n  //   height: \"10px\",\n  // }\n  // thumb: {\n  //   height: 10,\n  //   width: 10,\n  //   backgroundColor: '#fff',\n  //   border: '2px solid currentColor',\n  //   // marginTop: -8,\n  //   // marginLeft: -12,\n  //   // '&:focus,&:hover,&$active': {\n  //   //   boxShadow: 'inherit',\n  //   // },\n  // },\n  // valueLabel: {\n  //   left: 'calc(-50% + 4px)',\n  // },\n  // track: {\n  //   height: 8,\n  //   borderRadius: 4,\n  // },\n  // rail: {\n  //   height: 8,\n  //   borderRadius: 4,\n  // },\n})(Slider);\n\nconst PreferenceSliders = props => {\n  const classes = useStyles();\n// console.log(\"??\", props.pref);\n  const preferenceWeights = useSelector(state => state.groupingParameters.preferenceWeights);\n  const [pref, setPref] = useState(preferenceWeights);\n\n  const width = useSelector(state => state.layout.leftPaneWidth);\n  const dispatch = useDispatch();\n\n// console.log(\"PrefSliders ---\", PreferenceList);\n\n  // useEffect( () => {\n  //   setPref(preferenceWeights);\n  // }, [preferenceWeights]);\n\n  // if (pref === undefined) return null;\n\n  return (\n    <div id=\"preferenceSliders\" className=\"flexVerticalContainer\" style={{ width: width, marginRight:10 }}>\n      {PreferenceList.map((prefName, i) => (\n        <div key={i} className={classes.prefDiv}>\n          <div className={classes.prefName}>\n            {prefName.startsWith(\"commit\") ? \"commit \" + prefName.split(\"commit\")[1] : prefName}\n          </div>\n          \n          <div style={{width:\"150px\"}}>\n            <HorizontalSlider\n              value={pref[prefName]}\n              min={0}\n              max={1}\n              step={0.1}\n              valueLabelDisplay=\"auto\"\n              onChangeCommitted={(event, newValue) => {\n                let newPref = cloneDeep(pref);\n                newPref[prefName] = newValue;\n                setPref(newPref);\n              }}\n              onChange={(event, newValue) => {\n                let newPref = cloneDeep(pref);\n                newPref[prefName] = newValue;\n                setPref(newPref);\n              }}\n            />\n          </div>\n        </div>\n      ))}\n      {/* <div style={{height:10}}/> */}\n      <div className={classes.buttons} >\n          <Button style={{ \"fontSize\": \"11px\", \"flex\": 1, \"marginRight\": \"8px\"}}variant=\"outlined\" size=\"small\" onClick={() => {\n              let newPref = cloneDeep(pref);\n              PreferenceList.forEach(d => newPref[d] = 1);\n              setPref(newPref);\n          }}>\n            RESET\n          </Button>\n          <Button style={{ \"fontSize\": \"11px\"}} size=\"small\" variant=\"outlined\" \n            onClick={() => dispatch(actions.updatePreferenceWeights(pref))}>\n            CHANGE PREFERENCES\n          </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default PreferenceSliders;","import React, { useState, Fragment } from 'react';\nimport * as actions from '../modules';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Checkbox } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport \"./ManageParameter.css\"\nimport Form from 'react-bootstrap/Form';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: \"0px\",\n        padding: \"2px\",\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textArea: {\n        marginTop: \"8px\",\n        marginBottom: \"8px\",\n        minHeight: \"50px\",\n        fontSize: \"12px\",\n    },\n}));\n\nconst ManageParameters = (props) => {\n    const classes = useStyles();\n\n    const {\n        width,\n        releaseBinningLevel,\n        nonConflictGroupingLevel,\n        summaryByLOC,\n        hideFiles,\n        useHeuristicMerge,\n        // showPullRequestBranch,\n        showMergeLink,\n        branchShowMapByType,\n    } = useSelector(state => ({\n        width: state.layout.leftPaneWidth,\n        releaseBinningLevel: state.groupingParameters.releaseBinningLevel,\n        nonConflictGroupingLevel: state.groupingParameters.nonConflictGroupingLevel,\n        useHeuristicMerge: state.groupingParameters.useHeuristicMerge,\n        // showPullRequestBranch: state.groupingParameters.showPullRequestBranch,\n        branchShowMapByType: state.groupingParameters.branchShowMapByType,\n        summaryByLOC: state.summaryParameters.summaryByLOC,\n        hideFiles: state.summaryParameters.hideFiles,\n        showMergeLink: state.showMergeLink,\n    }));\n\n    // console.log(\"hidefile\", hideFiles)\n    const [ hideFilesStr, setHideFilesStr ] = useState(hideFiles.join(\"\\n\"));\n    const dispatch = useDispatch();\n\n    const parseFilterStr = (str, isIncludes) => {\n        // console.log(\"parseFilterStr\", str, isIncludes, str.split(\"\\n\"))\n        return str.split(\"\\n\").map(d => d.trim()).filter(d => d !== \"\");\n    }\n\n    const defaultHideFilesValue = \"CHANGELOG.md\\nversion.txt\"\n\n    return (\n        <div className=\"flexVerticalContainer\">\n\n            {/* <SectionTitle title=\"\" /> */}\n            {/* <div style={{ fontSize: \"12px\" }}>\n                <Checkbox\n                    className={classes.root}\n                    size=\"small\"\n                    color=\"default\"\n                    checked={(!showPullRequestBranch)}\n                    onChange={() => {\n                        dispatch(actions.updateShowPullRequestBranch(!showPullRequestBranch));\n                    }}\n                />\n                Hide Pull Request Branches\n            </div> */}\n            <SectionTitle title=\"BRANCH TYPE FILTER\" />\n            <div className=\"parameter-body\">\n                {[\"EXPLICIT\", \"IMPLICIT\", \"PR_OPEN\", ].map( (type, i) => {\n                    let bool = branchShowMapByType[type];\n                    return (<Fragment key={i}>\n                        <Checkbox\n                            className={classes.root}\n                            size=\"small\"\n                            color=\"default\"\n                            checked={bool}\n                            onChange={() => {\n                                dispatch(actions.updateBranchShowMapByType([type, !bool]));\n                            }}\n                        />{type}\n                    </Fragment>);\n                })}\n            </div>\n            <div className=\"parameter-body\">\n                {[\"PR_MERGED\", \"PR_CLOSED\"].map( (type, i) => {\n                    let bool = branchShowMapByType[type];\n                    return (<Fragment key={i}>\n                        <Checkbox\n                            className={classes.root}\n                            size=\"small\"\n                            color=\"default\"\n                            checked={bool}\n                            onChange={() => {\n                                dispatch(actions.updateBranchShowMapByType([type, !bool]));\n                            }}\n                        />{type}\n                    </Fragment>);\n                })}\n            </div>\n            <SectionTitle title=\"CLUSTERING\" />\n            <div className=\"parameter-body\">\n                <Checkbox\n                    className={classes.root}\n                    size=\"small\"\n                    color=\"default\"\n                    checked={(useHeuristicMerge)}\n                    onChange={() => {\n                        dispatch(actions.updateUseHeuristicMerge(!useHeuristicMerge));\n                    }}\n                />\n                Apply CONTEXTUAL squash MERGE\n            </div>\n            <div style={{\n                marginLeft: \"17px\",\n                fontSize: \"12px\",\n                display: (!useHeuristicMerge ? \"\" : \"none\")\n            }}>\n                <Checkbox\n                    className={classes.root}\n                    size=\"small\"\n                    color=\"default\"\n                    checked={(!showMergeLink)}\n                    onChange={() => {\n                        dispatch(actions.updateShowMergeLink(!showMergeLink));\n                    }}\n                />\n                    Hide CONTEXTUAL squash MERGE Edges\n            </div>\n            <div className=\"parameter-body\">\n                <Checkbox\n                    className={classes.root}\n                    size=\"small\"\n                    color=\"default\"\n                    checked={(nonConflictGroupingLevel > 0)}\n                    onChange={() => {\n                        let val = (nonConflictGroupingLevel > 0 ? 0 : 1);\n                        dispatch(actions.updateNonConflictGroupingLevel(val));\n                    }}\n                />\n                Non-Conflict Clustering\n            </div>\n            <div className=\"parameter-body\">\n                <Checkbox\n                    className={classes.root}\n                    size=\"small\"\n                    color=\"default\"\n                    checked={(releaseBinningLevel === 1)}\n                    onChange={() => {\n                        let val = (releaseBinningLevel === 1 ? 0 : 1);\n                        dispatch(actions.updateReleaseBinningLevel(val));\n                    }}\n                />\n                CUT at RELEASE\n            </div>\n            <div className=\"parameter-body\">\n                <Checkbox\n                    className={classes.root}\n                    size=\"small\"\n                    color=\"default\"\n                    checked={(releaseBinningLevel === 2)}\n                    onChange={() => {\n                        let val = (releaseBinningLevel === 2 ? 0 : 2);\n                        dispatch(actions.updateReleaseBinningLevel(val));\n                    }}\n                />\n                CUT at MAJOR RELEASE\n            </div>\n            <div className=\"parameter-body\" align=\"right\">\n                <span\n                    style={{ \"fontSize\": \"11px\", width: \"100%\", textDecoration: \"underline\", cursor:\"pointer\" }}\n                    onClick={() => {\n                        dispatch(actions.updateUseHeuristicMerge(false));\n                        [\"EXPLICIT\", \"IMPLICIT\", \"PR_OPEN\", \"PR_MERGED\", \"PR_CLOSED\"].map( type => dispatch(actions.updateBranchShowMapByType([type, true])));\n                    }}>\n                    SHOW ALL BRANCHES/NODES\n                </span>\n            </div>\n            {/* <div style={{ height: \"20px\" }}></div> */}\n            <SectionTitle title={\"SUMMARY\"} />\n            <div className=\"parameter-body\">\n                <Checkbox\n                    className={classes.root}\n                    size=\"small\"\n                    color=\"default\"\n                    checked={(summaryByLOC)}\n                    onChange={() => {\n                        console.log(\"summaryByLOC\", summaryByLOC);\n                        dispatch(actions.updateSummaryByLOC(!summaryByLOC));\n                    }}\n                />\n                Summary by CLOC\n            </div>\n            <div className=\"flexVerticalContainer\" style={{\n                fontSize: \"12px\",\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\"\n            }}>\n                <form className={classes.container} noValidate autoComplete=\"on\">\n                    <Form.Control\n                        className={classes.textArea}\n                        as=\"textarea\" rows=\"2\"\n                        placeholder=\"INSERT FILE NAMES\"\n                        defaultValue={hideFilesStr}\n                        onChange={(event) => {\n                            setHideFilesStr(event.target.value);\n                        }}\n                    />\n                </form>\n                <div style={{ width: \"100%\", alignItems: \"center\" }}>\n                    <Button\n                        style={{ \"fontSize\": \"11px\", width: \"100%\" }} size=\"small\" variant=\"outlined\"\n                        onClick={() => {\n                            let fList = hideFilesStr.split(\"\\n\").map(d => d.trim()).filter(d => d !== \"\");\n                            console.log(\"hide files\", fList);\n                            dispatch(actions.updateHideFiles(fList));\n                        }}>\n                        Hide files on Summary\n                    </Button>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default ManageParameters;\n\nconst SubTitle = (props) => {\n    return <div style={{\n        fontSize: '13px',\n        fontWeight: '500',\n        marginTop: \"5px\",\n        fontWeight: \"600\",\n        fontSize: \"0.75rem\"\n    }}>{props.title}</div>\n}\n\nconst SectionTitle = (props) => {\n    return <div style={{\n        fontWeight: \"500\",\n        // fontSize: \"0.86rem\",\n        borderBottom: \"1px solid #ccc\",\n        paddingLeft: \"3px\",\n        paddingBottom: \"1px\",\n        marginBottom: \"4px\",\n        marginTop: \"4px\"\n    }}>{props.title}</div>\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport { Table, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\nimport * as d3 from 'd3';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../modules';\nimport { AttributeColors } from './ColorClasses';\nimport './InformationFragments.css';\nimport { DataTypeByNameMap } from './analyzer/GithruClasses';\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        padding: 1,\n    },\n    tableCell: {\n        fontSize: \"12px\",\n        paddingLeft: 2,\n        paddingRight: 1,\n        paddingTop: 1,\n        paddingBottom: 1,\n        maxHeight: \"20px\",\n        // verticalAlign: \"text-top\",\n        // minWidth: \"40px\"\n    },\n    favorites: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        maxWidth: \"100%\",\n        overflowY: \"auto\",\n        // maxHeight: \"300px\",\n        width: \"100%\",\n        // minHeight: \"300px\",\n        padding: 2,\n    },\n    history: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        // maxHeight: \"450px\",\n        maxWidth: \"100%\",\n        width: \"100%\",\n        overflowY: \"auto\",\n    },\n}));\n\nconst InformationFragments = (props) => {\n    const classes = useStyles();\n    const { width } = props;\n    const buttonWidth = 15;\n\n    const dispatch = useDispatch();\n    const { fragmentHistory, favoriteFragments, currentCapturedSummaryInfoId } = useSelector(state => state);\n    const addFavoriteFragment = (f) => dispatch(actions.registerFavoriteFragment(f));\n    const removeFavoriteFragment = (f) => dispatch(actions.unregisterFavoriteFragment(f));\n    const clearFragment = () => dispatch(actions.clearFragments());\n\n    const addInterestsItems = (fragments) => {\n        dispatch(actions.addItemsToCapturedSummaryInfo(fragments));\n        // console.log(\"updated?\", capturedSummaryInfoList, fragments)\n    };\n\n\n    // console.log(classes.favorites, favoriteFragments, props);\n    return (\n        <div className=\"flexVerticalContainer\">\n            {\n                (favoriteFragments.length > 0 || fragmentHistory.length > 0) ? <>\n\n                    <div className=\"fragment-list\">\n                        {\n                            favoriteFragments.map((item, i) => {\n                                return <div className=\"fragment-row\" key={i}>\n                                    <div className=\"fragment-cell-title\" cursor=\"pointer\">\n                                        <span\n                                        style={{\n                                            color: AttributeColors[ DataTypeByNameMap[item[0]] ][ 0 ],\n                                            fontSize: \"12px\",\n                                            overflow: \"hidden\",\n                                            fontWeight: \"bold\",\n                                        }}\n                                        onMouseOver={(event) => event.target.style.color = \"red\"}\n                                        onMouseOut={(event) => event.target.style.color = AttributeColors[ DataTypeByNameMap[item[0]] ][ 0 ]}\n                                        onClick={() => addInterestsItems([ item ], currentCapturedSummaryInfoId)}\n                                    >{GitAnalyzer.getTextValue(item[ 0 ], item[ 1 ])}</span>\n                                    </div>\n                                    <div className=\"fragment-cell-pin\"\n                                        cursor=\"pointer\"\n                                        onClick={() => removeFavoriteFragment(item)}>\n                                        <svg\n                                            x=\"0px\" y=\"0px\" viewBox=\"0 0 476.258 476.258\"\n                                            width=\"15px\" height=\"15px\"\n                                            fill=\"black\" stroke=\"#000000\" strokeWidth=\"0\">\n                                            <path d=\"M476.235,119.133L357.158,0L206.936,134.654c-19.906-7.082-39.446-10.666-58.205-10.666 c-31.648,0-58.709,10.364-78.259,29.972l-10.574,10.607l115.305,115.298L0.023,455.045l21.213,21.213l175.18-175.181 l115.325,115.318l10.606-10.614c16.936-16.948,27.105-39.913,29.41-66.414c1.905-21.911-1.6-45.947-10.156-70.022L476.235,119.133z M434.942,120.257L323.736,244.33l-91.784-91.811L356.025,41.303L434.942,120.257z M310.52,372.75L103.519,165.76 c12.401-7.74,27.764-11.773,45.212-11.773c16.56,0,34.831,3.715,53.014,10.748l109.781,109.813 C326.418,312.819,325.869,348.207,310.52,372.75z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                            })\n                        }\n                    </div>\n                    {favoriteFragments.length > 0 ? <>\n                        <div>\n                            <Button \n                                style={{ \"fontSize\": \"11px\", \"zIndex\": 10, width: \"100%\", marginBottom: \"12px\", background: \"white\" }} \n                                size=\"small\" \n                                variant=\"outlined\"\n                                // className=\"control-button\" \n                                size=\"small\" variant=\"outlined\" \n                                onClick={() => addInterestsItems(favoriteFragments)}>\n                                    INSPECT ALL PINS\n                            </Button>\n                        </div>\n                    </> : \"\"}\n                    {/* <div className=\"flexContainer\" style={{ justifyContent: \"space-between\", marginBottom: \"12px\" }}>\n                        <Button className=\"control-button\" size=\"small\" variant=\"outlined\" onClick={() => addInterestsItems(favoriteFragments)}>\n                            SELECT ALL PINS\n                        </Button>\n                    </div> */}\n                    <div className=\"fragment-list\">\n                        {\n                            fragmentHistory.map((item, i) => {\n                                let isPinned = (favoriteFragments.findIndex(d => d[ 0 ] === item[ 0 ] && d[ 1 ] === item[ 1 ]) >= 0);\n                            \n                                return (\n                                    <div className=\"fragment-row\" \n                                        key={i}\n                                        onMouseOver={() => d3.select(\"#fragmentPin\" + i).style(\"visibility\", \"visible\")}\n                                        onMouseOut={() => d3.select(\"#fragmentPin\" + i).style(\"visibility\", \"hidden\")}\n                                    >\n                                        <div className=\"fragment-cell-title\" cursor=\"pointer\">\n                                            <span\n                                                style={{\n                                                    color: AttributeColors[ DataTypeByNameMap[item[0]] ][ 0 ],\n                                                    fontSize: \"12px\",\n                                                    overflow: \"hidden\",\n                                                    fontWeight: (isPinned ? \"bold\" : \"\"),\n                                                }}\n                                                onMouseOver={(event) => event.target.style.color = \"red\"}\n                                                onMouseOut={(event) => event.target.style.color = AttributeColors[ DataTypeByNameMap[item[0]] ][ 0 ]}\n                                                onClick={() => { console.log(\"HERE???\"); addInterestsItems([ item ]) }}\n                                            >\n                                                {/* {GitAnalyzer.getTextValue(item[ 0 ], item[ 1 ]).replace(/\\//g, '/ ')} */}\n                                                {GitAnalyzer.getTextValue(item[ 0 ], item[ 1 ])}\n                                            </span>\n                                        </div>\n                                        <div className=\"fragment-cell-pin\"\n                                            id={\"fragmentPin\"+i}\n                                            cursor=\"pointer\"\n                                            style={{visibility:\"hidden\"}}\n                                            onClick={() => addFavoriteFragment(item)}>\n                                            <svg\n                                                x=\"0px\" y=\"0px\" viewBox=\"0 0 476.258 476.258\"\n                                                width=\"15px\" height=\"15px\"\n                                                fill=\"black\" stroke=\"#000000\" strokeWidth=\"0\">\n                                                <path d=\"M476.235,119.133L357.158,0L206.936,134.654c-19.906-7.082-39.446-10.666-58.205-10.666 c-31.648,0-58.709,10.364-78.259,29.972l-10.574,10.607l115.305,115.298L0.023,455.045l21.213,21.213l175.18-175.181 l115.325,115.318l10.606-10.614c16.936-16.948,27.105-39.913,29.41-66.414c1.905-21.911-1.6-45.947-10.156-70.022L476.235,119.133z M434.942,120.257L323.736,244.33l-91.784-91.811L356.025,41.303L434.942,120.257z M310.52,372.75L103.519,165.76 c12.401-7.74,27.764-11.773,45.212-11.773c16.56,0,34.831,3.715,53.014,10.748l109.781,109.813 C326.418,312.819,325.869,348.207,310.52,372.75z\"></path>\n                                            </svg>\n                                        </div>\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                    <div>\n                    {/* style={{ justifyContent: \"space-between\", marginBottom: \"12px\" }}> */}\n                        <Button \n                            style={{ \"fontSize\": \"11px\", \"zIndex\": 10, width: \"100%\", background: \"white\" }} \n                            size=\"small\" \n                            variant=\"outlined\"\n                            // className=\"control-button\" \n                            size=\"small\" variant=\"outlined\" onClick={clearFragment}>\n                            CLEAR FRAGMENTS\n                        </Button>\n                    </div>\n                </> : <div style={{ color: 'white' }}>Select information fragments</div>\n            }\n        </div>\n    );\n}\n\nexport default InformationFragments;","import React, { useState } from 'react';\nimport './SidePanelContentUnit.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport const SidePanelContentUnit = (props) => {\n    const [show, setShow] = useState( (props.show !== undefined ? props.show : true) );\n\n    return (\n        <div style={props.style}>\n            <div className=\"sidepanel-container-header flexContainer\">\n                <div>{props.title}</div>\n                <div\n                    style={{cursor:\"pointer\"}}\n                    onClick={ () => setShow(!show)}\n                >{show ? <RemoveIcon fontSize=\"small\"/>\n                 : <AddIcon fontSize=\"small\" />}</div>\n            </div>\n            <div className=\"sidepanel-container-content\">\n                {show ? props.children : \"\"}\n            </div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as d3 from 'd3';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as actions from '../modules';\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport { Table, TableRow, TableCell, TableBody, Checkbox, Button } from '@material-ui/core';\nimport { SidePanelContentUnit } from './container/SidePanelContentUnit';\nimport './CaptureTab.css';\nimport { changeRGBColorByOpacity } from './ColorClasses';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: \"0px\",\n        padding: \"2px\",\n    },\n    table: {\n        padding: 1,\n    },\n    tableCell: {\n        fontSize: \"12px\",\n        paddingLeft: 2,\n        paddingRight: 1,\n        paddingTop: 1,\n        paddingBottom: 1,\n        // maxHeight: \"20px\",\n        // verticalAlign: \"text-top\",\n        // minWidth: \"40px\"\n    },\n}));\n\nconst CaptureTab = (props) => {\n    const classes = useStyles();\n    const { capturedSummaryInfoList, scrollToRight } = useSelector(state => state);\n    const [ checkedDic, setCheckedDic ] = useState({});\n    const dispatch = useDispatch();\n\n    // setCheckedListForCompare()\n    // console.log(\"captureTab render\", capturedSummaryInfoList, checkedDic);\n\n    return (<SidePanelContentUnit title=\"Captured Cluster(s)\" style={{ background: \"#7a7c90\" }}>\n        <div\n            id=\"captureTabDiv\"\n            className=\"flexVerticalContainer\"\n            style={{\n                // width: props.width + \"px\",\n                width: \"100%\",\n                fontSize: \"12px\",\n                height: props.height,\n            }}\n        >\n            {(capturedSummaryInfoList.length > 0 ? \n                <>\n                {capturedSummaryInfoList.map( (capturedInfo, i) => {\n                    let { id, clusterNodes, groupingParameters } = capturedInfo;\n\n                    const firstCommit = clusterNodes[ 0 ].cluster.nodeList[ 0 ].commit;\n                    const endCommit = clusterNodes.slice(-1)[ 0 ].cluster.nodeList.slice(-1)[ 0 ].commit;\n\n                    const getCommitName = (commit) => {\n                        if (commit.tags !== undefined && commit.tags.length > 0) return commit.tags[0];\n                        if (commit.branches !== undefined && commit.branches.length > 0) \n                            return (commit.branches[0].startsWith(\"origin/\") ? commit.branches[0].split(\"origin/\")[1] : commit.branches[0]);\n                        return \"#\" + commit.id.substring(0, 6);\n                    };\n\n                    return <div className=\"element\" key={id}>\n                        <div className=\"left-strip\" style={{\n                            background: changeRGBColorByOpacity(clusterNodes[ 0 ].color, 0.4),\n                        }}>\n                            <div>#{id}</div>\n                            <Checkbox\n                                id={\"capCheckBox\" + id}\n                                className={classes.root}\n                                size=\"small\"\n                                color=\"default\"\n                                onChange={(event) => {\n                                    let n = { ...checkedDic };\n                                    n[ id ] = event.target.checked;\n                                    setCheckedDic(n);\n                                }}\n                            />\n                        </div>\n\n                        <div className=\"content\" style={{ cursor: \"default\" }} /*onClick={() => {\n                            dispatch(actions.updateCurrentCapturedSummaryInfoId(id));\n                            d3.selectAll(\".detailTabPanel\").style(\"display\", \"none\");\n                            d3.select(\"#detailTabPanel\" + id).style(\"display\", \"\");\n                            d3.select(\"#comparePane\").style(\"display\", \"none\");\n\n                            dispatch(actions.updateScrollToRight(true));\n                            window.scrollTo(4000, 0);\n                        }*/>\n                            <div className=\"element-header\">\n                                <div className='element-branch-name'>\n                                    {GitAnalyzer.getBranchNamesFromBranchClusterNodes(clusterNodes)[ 0 ]}\n                                </div>\n\n                                <DeleteIcon\n                                    size=\"small\"\n                                    color=\"action\"\n                                    className=\"element-remove-button\"\n                                    onClick={() => {\n                                        let n = { ...checkedDic };\n                                        delete n[ id ];\n                                        setCheckedDic(n);\n                                        dispatch(actions.removeCapturedSummaryInfoList(i));\n                                    }}\n                                />\n                            </div>\n\n                            <div className=\"element-body\">\n                                <div style={{ width: \"100%\", fontSize: \"8px\" }}>\n                                    {GitAnalyzer.trimYYYYMMDD(firstCommit.date).substring(2, 11)} ~ {GitAnalyzer.trimYYYYMMDD(endCommit.date).substring(2, 11)}\n                                    <br />({getCommitName(firstCommit)}) ~ ({getCommitName(endCommit)})\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                })}\n                </>\n                : <div style={{ color: 'white' }}>Select cluster(s) for capture</div>\n            )}\n        </div>\n        <div>\n            <Button \n                style={{ \"fontSize\": \"11px\", \"zIndex\": 10, width: \"100%\", background: \"white\" }} \n                size=\"small\" \n                variant=\"outlined\"\n                disabled={capturedSummaryInfoList.length < 2}\n                onClick={() => {\n                    let checkedList = Object.entries(checkedDic).filter(d => d[ 1 ]).map(d => d[ 0 ]);\n                    if (checkedList.length !== 2) {\n                        alert(\"CHOOSE 2 SUMMARIES!\");\n                        return;\n                    }\n                    let cList = checkedList.map(index => capturedSummaryInfoList[ capturedSummaryInfoList.findIndex(fi => fi.id === +index) ]);\n                    console.log(\"cList\", cList);\n                    dispatch(actions.updateCapturedSummaryInfoListForCompare(cList));\n\n                    d3.select(\"#comparePane\").style(\"display\", \"\");\n                    d3.selectAll(\".detailTabPanel\").style(\"display\", \"none\");\n\n                    // window.scrollTo(4000, 0);\n                }}>\n                COMPARE\n            </Button>\n        </div>\n\n    </SidePanelContentUnit>\n    );\n}\n\nexport default CaptureTab;","import React, { useEffect } from 'react';\nimport \"./UserInterests.css\";\nimport GitAnalyzer from \"./analyzer/GitAnalyzer\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {DataTypeByNameMap} from \"./analyzer/GithruClasses\";\nimport * as d3 from 'd3';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { changeRGBColorByOpacity } from './ColorClasses';\n\nfunction ShowCheckBox(props) {\n    if (props.bool === true) return (<CheckIcon />);\n    else return \"\";\n}\n\nconst UserInterests = props => {\n    const { clusterColor, seq, interestedItemList, checkSvgWidth, itemNameWidth, detailNodeEdgeWidthRatio, clusters, width, itemHeight, keywords } = props;\nconsole.log(\"UserInterests Render ----\", props, clusters, );\n\n    const buttonWidth = 15;\n\n    function findInterestItemInCluster(item, cluster) {\n        return GitAnalyzer.searchByKeywords(cluster.nodeList, item[1].split(\" \"), DataTypeByNameMap[item[0]]).length > 0;\n    }\n\n    useEffect( () => {\n        let defaultClass = \"attrHeadText\";\n        d3.selectAll(\".interestKeyword\").nodes().map(d => d3.select(d)).forEach( n => {\n            if (props.keywords.filter(keyword => n.text().toLowerCase().indexOf(keyword) >= 0).length > 0)\n                n.attr(\"class\", defaultClass + \" matchedText\");\n            else\n                n.attr(\"class\", defaultClass);\n        });\n    }, [props.keywords]);\n\n    const xScale = d3.scaleBand().domain(d3.range(clusters.length)).range([0, checkSvgWidth])\n        .paddingInner(detailNodeEdgeWidthRatio).paddingOuter(detailNodeEdgeWidthRatio / 2);\n\n    let counts = clusters.map(d => 0);\n    return (\n        <div id={\"interestsDiv\" + seq} className=\"flexVerticalContainer\">\n            {interestedItemList.map((item, ki) => (\n                <div key={ki} className=\"flexContainer\"\n                    style={{borderBottom:\"1px solid\"}}>\n                    <div key={ki} \n                        style={{ \n                            width: itemNameWidth, \n                            font: \"14px bold\",\n                            textAlign: \"right\",\n                            height: \"19px\",\n                            overflow: \"hidden\",\n                            display: \"flex\"\n                        }}>\n                        <div width=\"10\">\n                            <svg width={buttonWidth} height=\"100%\">\n                                <text x=\"1\" y=\"96%\" textAnchor=\"center\" \n                                    onClick={() => props.removeInterestsItem(ki)}\n                                    cursor=\"pointer\" style={{fontSize:\"14px\"}}>\n                                    x\n                                </text>                           \n                            </svg>\n                        </div>\n                        <div>\n                            <svg width={(itemNameWidth - buttonWidth)+\"px\"} height=\"100%\" style={{marginLeft: \"2px\", marginRight: \"2px\"}}>\n                                <text\n                                    className=\"interestKeyword\"\n                                    x=\"97%\"\n                                    y=\"90%\"\n                                    style={{font:\"12px bold\"}}\n                                    textAnchor=\"end\"\n                                >{GitAnalyzer.getTextValue(item[0], item[1])}</text>\n                            </svg>\n                        </div>\n                    </div>\n                    {clusters.map((cluster, ci) => {\n                        // find item in cluster\n                        let found = findInterestItemInCluster(item, cluster);\n                        if (found) counts[ci] += 1;\n                        let colWidth = (checkSvgWidth) / counts.length;\n                        return (\n                            <svg key={ci}\n                                align=\"center\"\n                                style={{\n                                    width: colWidth,\n                                    fontSize: \"11px\",\n                                    height: itemHeight,\n                                    // marginBottom: \"0px\"\n                                    \n                                }}\n                                >\n                                <rect\n                                    style={{\n                                        x: xScale(0),\n                                        // x: xScale(ci),\n                                        y: 0,\n                                        width: xScale.bandwidth(),\n                                        height: itemHeight,\n                                        fill: (found ? changeRGBColorByOpacity(clusterColor, 0.4) : \"\"),\n                                        // fill: (found ? clusterColor : \"\"),\n                                        strokeWidth: 0,\n                                    }}\n                                />\n                                <ShowCheckBox bool={found} />\n                            </svg>\n                        );\n                    })}\n                </div>\n            ))}\n            <div className=\"flexContainer\">\n                <div style={{width: itemNameWidth}}></div>\n                {counts.map((d, ci) => (\n                    <div key={ci}\n                        align=\"center\"\n                        style={{\n                            width: (width - itemNameWidth) / counts.length,\n                            fontSize: \"11px\",\n                            height: itemHeight,\n                        }}\n                    >\n                        {d}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default UserInterests;","export const AttributeIconSpecs = {\n    \"authors\": 'person',\n    \"keywords\": 'insert_comment',\n    \"commitTypes\": 'label',\n    \"clocByFiles\": 'insert_drive_file',\n    \"touchCountByFiles\": 'insert_drive_file',\n    \"clocByDirs\": 'folder',\n    \"touchCountByDirs\": 'folder',\n}","import * as d3 from 'd3';\nimport WordCloud from 'wordcloud';\n\nfunction processKey(word) {\n    if (word === undefined) return word;\n    return word.replace(/[`~! @#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n    // return replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(word, \".\", \"\"), \">\", \"\"), \"=\", \"\"), \"}\", \"\"), \"{\", \"\"), \" \", \"\"), \"/\", \"\");\n}\n\nlet color = {\n    a: \"rgb(255, 182, 182)\",\n    b: \"#78e5cb\",\n    inter: \"rgb(119, 122, 216)\"\n}\n\n\nexport class KeywordCloud {\n\n    static generate(aList, bList, interList, canvas1, canvas2, weightFactor, changeOpacity, min, max) {\n\n        \n        console.log(aList, bList);\n        console.log(interList);\n\n        console.log(document.getElementById(canvas1));\n\n        let aMin = aList[0][1];\n        let aMax = aList[0][1];\n        let bMin = bList[0][1];\n        let bMax = bList[0][1];\n\n        aList.forEach(node => {\n            if(node[1] > aMax) aMax = node[1];\n            if(node[1] < aMin) aMin = node[1];\n        })\n        bList.forEach(node => {\n            if(node[1] > bMax) bMax = node[1];\n            if(node[1] < bMin) bMin = node[1];\n        })\n\n        aList.forEach(node => {\n            node[1] = ((node[1] - aMin) / (aMax - aMin)) * (max - min) + min;\n        })\n        bList.forEach(node => {\n            node[1] = ((node[1] - bMin) / (bMax - bMin)) * (max - min) + min;\n        })\n        // normalize to min < < max\n\n\n        WordCloud(document.getElementById(canvas1), {\n            list: aList,\n            wait: 0,\n            rotateRatio: 0,\n            weightFactor: weightFactor,\n            color: function(word) {\n                if(interList.includes(word)) return color.inter;\n                else return color.a;\n            },\n            classes: function(word) {\n                return \"wordCloud wordCloud_\" + processKey(word); \n            },\n            hover: function(item, dimension, event) {\n                if(item !== undefined) {\n                    d3.selectAll(\".wordCloud\")\n                      .style(\"font-weight\", \"300\")\n                      .style(\"opacity\", changeOpacity);\n                    d3.selectAll(\".wordCloud_\" + processKey(item[0]))\n                      .style(\"font-weight\", \"900\")\n                      .style(\"opacity\", 1);\n                }\n            }\n        });\n\n\n        WordCloud(document.getElementById(canvas2), {\n            list: bList,\n            wait: 0,\n            rotateRatio: 0,\n            weightFactor: weightFactor,\n            color: function(word) {\n                if(interList.includes(word)) return color.inter;\n                else return color.b;\n            },\n            classes: function(word) {\n                return \"wordCloud wordCloud_\" + processKey(word); \n            },\n            hover: function(item, dimension, event) {\n                if(item !== undefined) {\n                    d3.selectAll(\".wordCloud\")\n                    .style(\"font-weight\", \"300\")\n                    .style(\"opacity\", changeOpacity);\n                    d3.selectAll(\".wordCloud_\" + processKey(item[0]))\n                    .style(\"font-weight\", \"900\")\n                    .style(\"opacity\", 1);\n                }\n            }\n        });\n\n        d3.select(\"#\" + canvas1)\n        .on(\"mouseleave\", function(d) {\n            d3.selectAll(\".wordCloud\")\n            .style(\"font-weight\", 300)\n            .style(\"opacity\", 1);\n        })\n        .style(\"position\", \"absolute\");\n\n        d3.select(\"#\" + canvas2)\n        .on(\"mouseleave\", function(d) {\n            d3.selectAll(\".wordCloud\")\n            .style(\"font-weight\", 300)\n            .style(\"opacity\", 1);\n        })\n        .style(\"position\", \"absolute\");\n    }\n}\n\nexport default KeywordCloud;","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CommitCluster } from './analyzer/GithruClasses';\nimport * as d3 from 'd3';\nimport GitAnalyzer from './analyzer/GitAnalyzer';\nimport { intersection } from \"lodash\";\nimport { Checkbox } from '@material-ui/core';\nimport \"./DetailCompare.css\";\nimport * as actions from '../modules';\nimport { KeywordCloud } from './library/wordCloudGenerator';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\n\nconst DetailCompare = (props) => {\n\n    const { hideFiles } = useSelector(state => state.summaryParameters);\n    const { width } = props;\n\n\n    //d3.select(\"#inspectionPane\").style(\"width\", \"0px\");\n    // d3.select('#comparePane').style(\"width\", \"1700px\");\n\n\n    let aCapturedSummaryInfo = props.capturedSummaryInfoListForCompare[0];\n    let bCapturedSummaryInfo = props.capturedSummaryInfoListForCompare[1];\n    let aName = GitAnalyzer.getBranchNamesFromBranchClusterNodes(aCapturedSummaryInfo.clusterNodes)[0];\n    let bName = GitAnalyzer.getBranchNamesFromBranchClusterNodes(bCapturedSummaryInfo.clusterNodes)[0];\n\n    let reducingCapturedSummary = function(dict, val) {\n        let fileList = val.clusterData.keywordsByRank;\n       // console.log(fileList);\n        fileList.forEach(e => {\n            if(e[0] in dict) dict[e[0]] += e[1];\n            else dict[e[0]] = e[1];\n        })\n        return dict;\n    }\n\n    let aCapturedSummaryInfoKeywordDict = aCapturedSummaryInfo.clusterNodes.reduce(reducingCapturedSummary, {});\n    let bCapturedSummaryInfoKeywordDict = bCapturedSummaryInfo.clusterNodes.reduce(reducingCapturedSummary, {});\n\n\n    let aCapturedSummaryInfoKeyword = [], \n        bCapturedSummaryInfoKeyword = [];\n    \n    for(let key in aCapturedSummaryInfoKeywordDict) \n        aCapturedSummaryInfoKeyword.push([key, aCapturedSummaryInfoKeywordDict[key]]);\n    \n    for(let key in bCapturedSummaryInfoKeywordDict) \n        bCapturedSummaryInfoKeyword.push([key, bCapturedSummaryInfoKeywordDict[key]]);\n\n    const clusterNodesList = props.capturedSummaryInfoListForCompare.reduce((prev, capturedSummaryInfo) => {\n        let newCluster = new CommitCluster(undefined, undefined, undefined);\n        capturedSummaryInfo.clusterNodes.forEach(clusterNode => {\n            clusterNode.cluster.nodeList.forEach(node => newCluster.addNode(node));\n        });\n        prev.push(newCluster);\n        return prev;\n    }, []);\n\n    let aClusterNode = clusterNodesList[0];\n    let bClusterNode = clusterNodesList[1];\n\n    // Processing Data\n\n    /* ================ Very IMPORTANT DATA Variables!! ========== */\n    // overall\n    let aCloc, bCloc;\n    let aCommitNum, bCommitNum;\n\n    // Author\n    let interAuthorList;\n    let aAuthorData, bAuthorData;\n    let aAuthorArrayData = [], bAuthorArrayData = [];\n    let aAuthorArrayDataLoc, bAuthorArrayDataLoc,\n        aAuthorArrayDataCommit, bAuthorArrayDataCommit;\n\n    // Commit Types\n    let aCommitTypeArrayData = [], bCommitTypeArrayData = [];\n    let aCommitTypeArrayDataLoc, bCommitTypeArrayDataLoc,\n        aCommitTypeArrayDataCommit, bCommitTypeArrayDataCommit;\n    /* ================ Very IMPORTANT DATA Variables!! ========== */\n\n    // author data collection\n\n    aCloc = aClusterNode.locStat.clocSum;\n    bCloc = bClusterNode.locStat.clocSum;\n    aCommitNum = aClusterNode.nodeCount;\n    bCommitNum = bClusterNode.nodeCount;\n\n\n    let authorCollector = function (authorList, node) {\n        Object.keys(node.clusterData.authors).forEach(rawAuthor => {\n            let author = GitAnalyzer.getTextValue(\"authors#2\", rawAuthor); \n            authorList.push(author);\n        })\n        return authorList;\n    }\n\n    // interAuthorList = intersection(Array.from(new Set(aClusterNode.nodeList.reduce(authorCollector, []))),\n    //     Array.from(new Set(bClusterNode.nodeList.reduce(authorCollector, []))));\n\n    interAuthorList = intersection(Array.from(new Set(aCapturedSummaryInfo.clusterNodes.reduce(authorCollector, []))), \n                                   Array.from(new Set(bCapturedSummaryInfo.clusterNodes.reduce(authorCollector, []))));\n\n    console.log(interAuthorList);\n\n\n    let authorDataCollector = function (authorData, node) {\n        Object.keys(node.clusterData.authors).forEach(rawAuthor => {\n            let author = GitAnalyzer.getTextValue(\"authors#2\", rawAuthor); \n\n            if (authorData[author] !== undefined) {\n                authorData[author].commitNum += node.clusterData.authors[rawAuthor];\n                authorData[author].cloc += node.clusterData.authorsLOCStat[rawAuthor].clocSum;\n            }\n            else {\n                authorData[author] = {\n                    commitNum: node.clusterData.authors[rawAuthor], \n                    cloc: node.clusterData.authorsLOCStat[rawAuthor].clocSum,\n                    inIntersection: interAuthorList.includes(author) \n                }\n            }\n        })\n        return authorData;\n    }\n\n\n    aAuthorData = aCapturedSummaryInfo.clusterNodes.reduce(authorDataCollector, {});\n    bAuthorData = bCapturedSummaryInfo.clusterNodes.reduce(authorDataCollector, {});\n\n    for (let authorKey in aAuthorData) {\n        aAuthorArrayData.push({\n            author: authorKey,\n            commitNum: aAuthorData[authorKey].commitNum,\n            loc: aAuthorData[authorKey].cloc,\n            inIntersection: aAuthorData[authorKey].inIntersection\n        });\n    }\n    for (let authorKey in bAuthorData) {\n        bAuthorArrayData.push({\n            author: authorKey,\n            commitNum: bAuthorData[authorKey].commitNum,\n            loc: bAuthorData[authorKey].cloc,\n            inIntersection: bAuthorData[authorKey].inIntersection\n        });\n    }\n\n\n    aAuthorArrayDataLoc = accumulatingLoc(aAuthorArrayData.sort(sortByLoc));\n    bAuthorArrayDataLoc = accumulatingLoc(bAuthorArrayData.sort(sortByLoc));\n    aAuthorArrayDataCommit = accumulatingCommitNum(aAuthorArrayData.sort(sortByCommitNum));\n    bAuthorArrayDataCommit = accumulatingCommitNum(bAuthorArrayData.sort(sortByCommitNum));\n\n    // CommitType data collection\n\n    let commitTypeCollector = function (commitTypeList, node) {\n        Object.keys(node.clusterData.commitTypes).forEach(commitType => {\n            commitTypeList.push(commitType);\n        })\n        return commitTypeList;\n    }\n\n    let interCommitTypeList = intersection(Array.from(new Set(aCapturedSummaryInfo.clusterNodes.reduce(commitTypeCollector, []))),\n                                           Array.from(new Set(bCapturedSummaryInfo.clusterNodes.reduce(commitTypeCollector, []))))\n\n\n    let commitTypeDataCollector = function (commitTypeData, node) {\n        Object.keys(node.clusterData.commitTypes).forEach(commitType => {\n            if(commitTypeData[commitType] !== undefined) {\n                commitTypeData[commitType].commitNum += node.clusterData.commitTypes[commitType];\n                commitTypeData[commitType].cloc += node.clusterData.commitTypesLOCStat[commitType].clocSum;\n            }\n            else {\n                commitTypeData[commitType] = {\n                    commitNum :node.clusterData.commitTypes[commitType], \n                    cloc: node.clusterData.commitTypesLOCStat[commitType].clocSum,\n                    inIntersection: interCommitTypeList.includes(commitType)\n                }\n            }\n        })\n       \n        return commitTypeData;\n    }\n\n    let aCommitTypeData = aCapturedSummaryInfo.clusterNodes.reduce(commitTypeDataCollector, {});\n    let bCommitTypeData = bCapturedSummaryInfo.clusterNodes.reduce(commitTypeDataCollector, {});\n\n    //console.log(aCommitTypeData, bCommitTypeData)\n\n    for (let commitTypeKey in aCommitTypeData) {\n        aCommitTypeArrayData.push({\n            commitType: commitTypeKey,\n            commitNum: aCommitTypeData[commitTypeKey].commitNum,\n            loc: aCommitTypeData[commitTypeKey].cloc,\n            inIntersection: aCommitTypeData[commitTypeKey].inIntersection\n        });\n    }\n    for (let commitTypeKey in bCommitTypeData) {\n        bCommitTypeArrayData.push({\n            commitType: commitTypeKey,\n            commitNum: bCommitTypeData[commitTypeKey].commitNum,\n            loc: bCommitTypeData[commitTypeKey].cloc,\n            inIntersection: bCommitTypeData[commitTypeKey].inIntersection\n        });\n    }\n\n    //console.log(\"Final CommitType DATA!!\", aCommitTypeArrayData, bCommitTypeArrayData)\n\n    aCommitTypeArrayDataLoc = accumulatingLoc(aCommitTypeArrayData.sort(sortByLoc));\n    bCommitTypeArrayDataLoc = accumulatingLoc(bCommitTypeArrayData.sort(sortByLoc));\n    aCommitTypeArrayDataCommit = accumulatingCommitNum(aCommitTypeArrayData.sort(sortByCommitNum));\n    bCommitTypeArrayDataCommit = accumulatingCommitNum(bCommitTypeArrayData.sort(sortByCommitNum));\n\n    // Keywords\n    // variables for keyword\n    let aClusterKeywordData = aCapturedSummaryInfoKeyword.sort((a,b) => b[1] - a[1]);\n    let bClusterKeywordData = bCapturedSummaryInfoKeyword.sort((a,b) => b[1] - a[1]);\n\n    let presentingKeywordNum = useRef(10);\n\n\n    let aKeywords = [], bKeywords = [], interKeywords = [];\n    for (let i = 0; i < 20; i++) {\n        try {\n            let word = aClusterKeywordData[i][0];\n            aKeywords.push(word);\n        }\n        catch (e) { console.log(\"error\") }\n        try {\n            let word = bClusterKeywordData[i][0];\n            bKeywords.push(word);\n        }\n        catch (e) { console.log(\"error\") }\n    }\n    interKeywords = intersection(aKeywords, bKeywords);\n\n    let aList = aClusterKeywordData.slice(0, 20);\n    let bList = bClusterKeywordData.slice(0, 20);\n    let interList = interKeywords;\n\n    // processing keyword data ENDD!!!\n\n\n    // Processing data for file structure\n\n    function generateFileDirData(aData, bData, aArray, bArray, aSum, bSum) {\n        let aDataTempArray = [], bDataTempArray = [];\n        for (let key in aData) aDataTempArray.push([key, aData[key]]);\n        for (let key in bData) bDataTempArray.push([key, bData[key]]);\n\n        aDataTempArray.sort((a, b) => b[1] - a[1]);\n        bDataTempArray.sort((a, b) => b[1] - a[1]);\n\n        aDataTempArray = aDataTempArray.slice(0, presentingKeywordNum.current);\n        bDataTempArray = bDataTempArray.slice(0, presentingKeywordNum.current);\n        let interArray = intersection(aDataTempArray.map(x => x[0]), bDataTempArray.map(x => x[0]));\n\n        for (let i = 0; i < presentingKeywordNum.current; i++) {\n            try {\n                let name = aDataTempArray[i][0];\n                aArray.push({\n                    keyword: name,\n                    score: aData[name] / aSum,\n                    inIntersection: interArray.includes(name)\n                });\n            }\n            catch {\n                aArray.push({ keyword: \"\", score: 0, inIntersection: true });\n            }\n            try {\n                let name = bDataTempArray[i][0];\n                bArray.push({\n                    keyword: name,\n                    score: bData[name] / bSum,\n                    inIntersection: interArray.includes(name)\n                });\n            }\n            catch {\n                bArray.push({ keyword: \"\", score: 0, inIntersection: true });\n            }\n        }\n    }\n\n    let reducingCapturedSummaryCloc = function(dict, val) {\n        let fileDict = val.clusterData.clocByFiles;\n        //console.log(fileList);\n        for (let key in fileDict) {\n            if(key in dict) dict[key] += fileDict[key];\n            else dict[key] = fileDict[key];\n        }\n        return dict;\n    }\n    let reducingCapturedSummaryCommitNum = function(dict, val) {\n        let fileDict = val.clusterData.touchCountByFiles;\n        //console.log(fileList);\n        for (let key in fileDict) {\n            if(key in dict) dict[key] += fileDict[key];\n            else dict[key] = fileDict[key];\n        }\n        return dict;\n    }\n\n    let aRawModLocFileData = aCapturedSummaryInfo.clusterNodes.reduce(reducingCapturedSummaryCloc, {});\n    let aRawModNumFileData = aCapturedSummaryInfo.clusterNodes.reduce(reducingCapturedSummaryCommitNum, {});;\n    let bRawModLocFileData = bCapturedSummaryInfo.clusterNodes.reduce(reducingCapturedSummaryCloc, {});\n    let bRawModNumFileData = bCapturedSummaryInfo.clusterNodes.reduce(reducingCapturedSummaryCommitNum, {});;\n\n    // Removing hideFiles\n    hideFiles.forEach(fileName => {\n        delete aRawModLocFileData[fileName]\n        delete aRawModNumFileData[fileName]\n        delete bRawModLocFileData[fileName]\n        delete bRawModNumFileData[fileName]\n    })\n\n    let aLocFileArray = [], bLocFileArray = [], aNumFileArray = [], bNumFileArray = [];\n    generateFileDirData(aRawModLocFileData, bRawModLocFileData, aLocFileArray, bLocFileArray, aCloc, bCloc);\n    generateFileDirData(aRawModNumFileData, bRawModNumFileData, aNumFileArray, bNumFileArray, aCommitNum, bCommitNum);\n\n    let aFileArray = [], bFileArray = [];\n    for (let i = 0; i < presentingKeywordNum.current; i++) {\n        aFileArray.push({\n            keyword: aLocFileArray[i].keyword,\n            loc: aLocFileArray[i],\n            num: aNumFileArray[i]\n        });\n        bFileArray.push({\n            keyword: bLocFileArray[i].keyword,\n            loc: bLocFileArray[i],\n            num: bNumFileArray[i]\n        })\n    }\n\n    function processKey(word) {\n        if (word === undefined) return word;\n        return word.replace(/[`~! @#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n        // return replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(replaceAll(word, \".\", \"\"), \">\", \"\"), \"=\", \"\"), \"}\", \"\"), \"{\", \"\"), \" \", \"\"), \"/\", \"\");\n    }\n\n\n    // helper function to draw ben diagram\n    function calIntersection(x0, y0, r0, x1, y1, r1) {\n        var a, dx, dy, d, h, rx, ry;\n        var x2, y2;\n        dx = x1 - x0;\n        dy = y1 - y0;\n\n        d = Math.sqrt((dy * dy) + (dx * dx));\n\n        if (d > (r0 + r1)) {\n            return false;\n        }\n        if (d < Math.abs(r0 - r1)) {\n            return false;\n        }\n\n        a = ((r0 * r0) - (r1 * r1) + (d * d)) / (2.0 * d);\n\n        x2 = x0 + (dx * a / d);\n        y2 = y0 + (dy * a / d);\n\n        h = Math.sqrt((r0 * r0) - (a * a));\n\n        rx = -dy * (h / d);\n        ry = dx * (h / d);\n\n        var xi = x2 + rx;\n        var xi_prime = x2 - rx;\n        var yi = y2 + ry;\n        var yi_prime = y2 - ry;\n\n        return [xi, xi_prime, yi, yi_prime];\n    }\n\n    // helper functions for sorting\n    function sortByLoc(a, b) {\n        return a.loc - b.loc;\n    }\n\n    function sortByCommitNum(a, b) {\n        return a.commitNum - b.commitNum;\n    }\n\n    function accumulatingLoc(array) {\n        let currentLocSum = 0;\n        for (let i = 0; i < array.length; i++) {\n            array[i][\"currentLocSum\"] = currentLocSum;\n            currentLocSum += array[i][\"loc\"];\n        }\n        return array;\n    }\n\n    function accumulatingCommitNum(array) {\n        let currentCommitSum = 0;\n        for (let i = 0; i < array.length; i++) {\n            array[i][\"currentCommitSum\"] = currentCommitSum;\n            currentCommitSum += array[i][\"commitNum\"];\n        }\n        return array;\n    }\n\n    // Color scheme!!!!!!\n    let color = {\n        a: \"rgb(255, 182, 182)\",\n        b: \"#78e5cb\",\n        inter: \"rgb(119, 122, 216)\"\n    }\n\n\n    let aChecked = useRef(true);\n    let interChecked = useRef(true);\n    let bChecked = useRef(true);\n    let isLoc = useRef(true); // false if commitNum\n\n    let xAxisScale = useRef();\n\n    let aAuthorSvgMolds = useRef();\n    let aAuthorRects = useRef();\n    let aAuthorTexts = useRef();\n\n    let bAuthorSvgMolds = useRef();\n    let bAuthorRects = useRef();\n    let bAuthorTexts = useRef();\n\n    let aCommitTypeSvgMolds = useRef();\n    let aCommitTypeRects = useRef();\n    let aCommitTypeTexts = useRef();\n\n    let bCommitTypeSvgMolds = useRef();\n    let bCommitTypeRects = useRef();\n    let bCommitTypeTexts = useRef();\n\n\n    let aFileSvg = useRef();\n    let bFileSvg = useRef();\n\n    let showFileFullPath = useRef(false);\n\n    const dispatch = useDispatch();\n    \n    \n    let updateXAxis;\n    let updateAuthorSvg;\n    let updateCommitTypeSvg;\n    let updateKeywordSvg;\n    let updatefileSvg;\n    let updateLegends;\n    \n    useEffect(() => {\n        dispatch(actions.updateScrollToRight(true));\n        window.scrollTo({\n            top:0,\n            left:4000,\n        });\n\n        let mainSvg = d3.select(\"#compareClusters\");\n        mainSvg.selectAll(\"g\").remove();\n\n\n        /* ================================================== */\n        /* ================================================== */\n        /* Implementing Venn Diagram Comparison SELECTOR!!!!  */\n        /* ================================================== */\n        /* ================================================== */\n\n        let radius = 45;\n        let vennHeight = 65;\n        let aClusterX = 72, bClusterX = 114;\n        let interPoints = calIntersection(aClusterX, vennHeight, radius, bClusterX, vennHeight, radius);\n\n        let vennSvg = mainSvg.append(\"g\");\n\n        let aCircle = vennSvg.append(\"g\")\n            .append(\"path\")\n            .attr(\"id\", \"aVenn\")\n            .style(\"fill\", color.a)\n            .attr(\"d\", null)\n            .attr(\"stroke\", color.a)\n            .attr(\"stroke-width\", \"0px\")\n            .style(\"opacity\", 0.8)\n            .style(\"cursor\", \"pointer\")\n            .on(\"mouseover\", function (d) { d3.select(this).attr(\"stroke-width\", 4); })\n            .on(\"mouseout\", function (d) { d3.select(this).attr(\"stroke-width\", 0); })\n            .on(\"click\", function (d) {\n                if (aChecked.current === true) {\n                    d3.select(this).transition().duration(800).style(\"opacity\", 0.3);\n                    aChecked.current = false;\n                    updateAuthorSvg();\n                    updateCommitTypeSvg();\n                    updateKeywordSvg();\n                    updatefileSvg();\n                    updateVennText();\n                }\n                else {\n                    d3.select(this).transition().duration(800).style(\"opacity\", 0.8);\n                    aChecked.current = true;\n                    updateAuthorSvg();\n                    updateCommitTypeSvg();\n                    updateKeywordSvg();\n                    updatefileSvg();\n                    updateVennText();\n                }\n            })\n\n        aCircle.attr(\"d\", function () {\n            return \"M\" + interPoints[0] + \",\" + interPoints[2] + \"A\" + radius + \",\" + radius +\n                \" 0 1,1 \" + interPoints[1] + \",\" + interPoints[3] + \"A\" + radius + \",\" + radius +\n                \" 0 0,0 \" + interPoints[0] + \",\" + interPoints[2];\n        });\n\n        let bCircle = vennSvg.append(\"g\")\n            .append(\"path\")\n            .attr(\"id\", \"bVenn\")\n            .style(\"fill\", color.b)\n            .attr(\"d\", null)\n            .attr(\"stroke\", color.b)\n            .attr(\"stroke-width\", \"0px\")\n            .style(\"opacity\", 0.8)\n            .style(\"cursor\", \"pointer\")\n            .on(\"mouseover\", function (d) { d3.select(this).attr(\"stroke-width\", 4); })\n            .on(\"mouseout\", function (d) { d3.select(this).attr(\"stroke-width\", 0); })\n            .on(\"click\", function (d) {\n                if (bChecked.current === true) {\n                    d3.select(this).transition().duration(800).style(\"opacity\", 0.3);\n                    bChecked.current = false;\n                    updateAuthorSvg();\n                    updateCommitTypeSvg();\n                    updateKeywordSvg();\n                    updatefileSvg();\n                    updateVennText();\n                }\n                else {\n                    d3.select(this).transition().duration(800).style(\"opacity\", 0.8);\n                    bChecked.current = true;\n                    updateAuthorSvg();\n                    updateCommitTypeSvg();\n                    updateKeywordSvg();\n                    updatefileSvg();\n                    updateVennText();\n                }\n            })\n        bCircle.attr(\"d\", function () {\n            return \"M\" + interPoints[0] + \",\" + interPoints[2] + \"A\" + radius + \",\" + radius +\n                \" 0 0,0 \" + interPoints[1] + \",\" + interPoints[3] + \"A\" + radius + \",\" + radius +\n                \" 0 1,1 \" + interPoints[0] + \",\" + interPoints[2];\n        });\n\n        let vennIntersection = vennSvg.append(\"g\")\n            .append(\"path\")\n            .attr(\"id\", \"interVenn\")\n            .style(\"fill\", color.inter)\n            .attr(\"d\", null)\n            .attr(\"stroke\", color.inter)\n            .attr(\"stroke-width\", \"0px\")\n            .style(\"opacity\", 0.8)\n            .style(\"cursor\", \"pointer\")\n            .on(\"mouseover\", function (d) { d3.select(this).attr(\"stroke-width\", 4); })\n            .on(\"mouseout\", function (d) { d3.select(this).attr(\"stroke-width\", 0); })\n            .on(\"click\", function (d) {\n                if (interChecked.current === true) {\n                    d3.select(this).transition().duration(800).style(\"opacity\", 0.3);\n                    interChecked.current = false;\n                    updateAuthorSvg();\n                    updateCommitTypeSvg();\n                    updateKeywordSvg();\n                    updatefileSvg();\n                    updateVennText();\n                }\n                else {\n                    d3.select(this).transition().duration(800).style(\"opacity\", 0.8);\n                    interChecked.current = true;\n                    updateAuthorSvg();\n                    updateCommitTypeSvg();\n                    updateKeywordSvg();\n                    updatefileSvg();\n                    updateVennText();\n                }\n            })\n\n        vennIntersection.attr(\"d\", function () {\n            return \"M\" + interPoints[0] + \",\" + interPoints[2] + \"A\" + radius + \",\" + radius +\n                \" 0 0,1 \" + interPoints[1] + \",\" + interPoints[3] + \"A\" + radius + \",\" + radius +\n                \" 0 0,1 \" + interPoints[0] + \",\" + interPoints[2];\n        });\n\n        vennSvg.append(\"svg\")\n            .attr(\"x\", 14)\n            .attr(\"width\", 70)\n            .attr(\"height\", 121)\n            .append(\"text\")\n            .attr(\"id\", \"vennTextA\")\n            .attr(\"dominant-baseline\", \"middle\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"x\", \"50%\")\n            .attr(\"y\", \"50%\")\n            .style(\"font-size\", \"14px\")\n            .style(\"fill\", \"black\")\n            .style(\"font-weight\", \"bold\")\n            .text(\"#\" + aCapturedSummaryInfo.id)\n            // .text(\"#\" + aCapturedSummaryInfo.id + \" (\" + aName + \")\")\n\n        vennSvg.append(\"svg\")\n            .attr(\"x\", 100)\n            .attr(\"width\", 70)\n            .attr(\"height\", 121)\n            .append(\"text\")\n            .attr(\"id\", \"vennTextB\")\n            .attr(\"dominant-baseline\", \"middle\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"x\", \"50%\")\n            .attr(\"y\", \"50%\")\n            .style(\"font-size\", \"14px\")\n            .style(\"fill\", \"black\")\n            .style(\"font-weight\", \"bold\")\n            // .text(\"#\" + bCapturedSummaryInfo.id + \" (\" + bName + \")\")\n            .text(\"#\" + bCapturedSummaryInfo.id)\n\n        vennSvg.append(\"svg\")\n            .attr(\"x\", 57)\n            .attr(\"width\", 70)\n            .attr(\"height\", 121)\n            .append(\"text\")\n            .attr(\"id\", \"vennTextInter\")\n            .attr(\"dominant-baseline\", \"middle\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"x\", \"50%\")\n            .attr(\"y\", \"50%\")\n            .style(\"font-size\", \"15px\")\n            .style(\"fill\", \"black\")\n            .style(\"font-weight\", \"bold\")\n            // .text(\"#\" + bCapturedSummaryInfo.id + \" (\" + bName + \")\")\n            .text(\"∩\")\n\n        function updateVennText() {\n            if (aChecked.current)     d3.select(\"#vennTextA\").transition().duration(800).style(\"opacity\", 1);\n            else                      d3.select(\"#vennTextA\").transition().duration(800).style(\"opacity\", 0);\n            if (bChecked.current)     d3.select(\"#vennTextB\").transition().duration(800).style(\"opacity\", 1);\n            else                      d3.select(\"#vennTextB\").transition().duration(800).style(\"opacity\", 0);\n            if (interChecked.current) d3.select(\"#vennTextInter\").transition().duration(800).style(\"opacity\", 1);\n            else                      d3.select(\"#vennTextInter\").transition().duration(800).style(\"opacity\", 0);\n        }\n        /* Finished Implementing Venn Diagram Comparison SELECTOR!!!!  */\n \n\n        // Axis\n\n        let xAxisLength = (width / 2) * 0.92;\n        xAxisScale.current = d3.scaleLinear()\n            .domain([0, Math.max(aClusterNode.locStat.clocSum, bClusterNode.locStat.clocSum)])\n            .range([0, xAxisLength]);\n\n\n\n        updateXAxis = function () {\n            if (isLoc.current) {\n                xAxisScale.current = d3.scaleLinear()\n                    .domain([0, Math.max(aClusterNode.locStat.clocSum, bClusterNode.locStat.clocSum)])\n                    .range([0, xAxisLength]);\n\n            }\n            else {\n                xAxisScale.current = d3.scaleLinear()\n                    .domain([0, Math.max(aClusterNode.nodeCount, bClusterNode.nodeCount)])\n                    .range([0, xAxisLength]);\n\n            }\n        }\n\n        let yAxisLength = 80;\n        let yAxisMargin = 10;\n        let rectHeight = (yAxisLength - 3 * yAxisMargin) / 2;\n\n        // BARGRAPH Generator / updater\n\n        function initBarGraphElement(type, svg, svgMolds, arrayDataLoc, rects, texts, defualtColor, checked) {\n            console.log(arrayDataLoc);\n\n            svgMolds.current = svg.selectAll(\"svg\")\n                .data(arrayDataLoc)\n                .enter()\n                .append(\"svg\")\n                .attr(\"x\", d => xAxisScale.current(d.currentLocSum) + 1)\n                .attr(\"y\", 0)\n                .attr(\"width\", d => xAxisScale.current(d.loc))\n                .attr(\"height\", rectHeight)\n                .attr(\"class\", d => type + \"_\" + processKey(d[type]))\n                .on(\"mouseover\", function (d) {\n                    if (d.inIntersection ? interChecked.current : checked.current) {\n                        d3.selectAll(\".\" + type + \"_\" + processKey(d[type])).attr(\"width\", xAxisLength).raise()\n                        d3.selectAll(\".\" + type + \"_rect_\" + processKey(d[type])).style(\"opacity\", 1);\n                        d3.selectAll(\".\" + type + \"_text\").style(\"opacity\", 0);\n                        d3.selectAll(\".\" + type + \"_text_\" + processKey(d[type])).style(\"opacity\", 1).style(\"font-weight\", \"bold\");\n                    \n                        d3.select(\".tooltipHover\")\n                          .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                          .style(\"top\", (d3.event.pageY) + \"px\")\n                          .style(\"opacity\", 0.8)\n                          .style(\"width\", \"140px\")\n                          .html(isLoc.current ? d.loc.toFixed(0) + \" lines modified\" : d.commitNum.toFixed(1) + \" commits\")\n                    }\n                })\n                .on(\"mouseout\", function (d) {\n                    if (d.inIntersection ? interChecked.current : checked.current) {\n                        d3.selectAll(\".\" + type + \"_\" + processKey(d[type])).attr(\"width\", d => isLoc.current ? xAxisScale.current(d.loc) : xAxisScale.current(d.commitNum)).lower()\n                        d3.selectAll(\".\" + type + \"_rect_\" + processKey(d[type])).style(\"opacity\", d => {\n                            if (d.inIntersection) return interChecked.current ? 0.7 : 0.3;\n                            else return checked.current ? 0.7 : 0.3;\n                        });\n                        d3.selectAll(\".\" + type + \"_text_\" + processKey(d[type])).style(\"font-weight\", 300);\n                        d3.selectAll(\".\" + type + \"_text\").style(\"opacity\", d => {\n                            if (d.inIntersection) return interChecked.current ? 1 : 0;\n                            else return checked.current ? 1 : 0;\n                        });\n                    }\n                    d3.select(\".tooltipHover\").style(\"opacity\", 0);\n                })\n                .on(\"mousemove\", function (d) {\n                    d3.select(\".tooltipHover\")\n                      .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                      .style(\"top\", (d3.event.pageY) + \"px\");\n                });\n\n            rects.current = svgMolds.current.append(\"rect\")\n                .attr(\"class\", d => type + \"_rect_\" + processKey(d[type]))\n                .attr(\"width\", d => xAxisScale.current(d.loc))\n                .attr(\"height\", rectHeight)\n                .attr(\"rx\", 4).attr(\"ry\", 4)\n                .style(\"stroke\", \"white\")\n                .style(\"stroke-width\", 0.5)\n                .style(\"opacity\", 0.7)\n                .style(\"fill\", d => {\n                    if (d.inIntersection === true) return color.inter;\n                    else return defualtColor;\n                })\n\n\n\n            texts.current = svgMolds.current.append(\"text\")\n                .attr(\"class\", d => type + \"_text \" + type + \"_text_\" + processKey(d[type]))\n                .attr(\"y\", rectHeight * 0.6)\n                .attr(\"x\", 4)\n                .text(d => d[type]);\n\n        }\n\n        function updateBarGraphElement(type, arrayData, svgMolds, rects, texts, defaultColor, checked) {\n\n            svgMolds.current.data(arrayData)\n                .join()\n                .transition().duration(800)\n                .attr(\"x\", d => {\n                    if (isLoc.current) return xAxisScale.current(d.currentLocSum) + 1\n                    else return xAxisScale.current(d.currentCommitSum) + 1\n                })\n                .attr(\"width\", d => { return isLoc.current ? xAxisScale.current(d.loc) : xAxisScale.current(d.commitNum); })\n                .attr(\"class\", d => type + \"_\" + processKey(d[type]))\n\n            rects.current.data(arrayData)\n                .join()\n                .transition().duration(800)\n                .style(\"opacity\", d => {\n                    if (d.inIntersection) return interChecked.current ? 0.7 : 0.3;\n                    else return checked.current ? 0.7 : 0.3;\n                })\n                .style(\"fill\", d => {\n                    if (d.inIntersection === true) return color.inter;\n                    else return defaultColor;\n                })\n                .attr(\"width\", d => isLoc.current ? xAxisScale.current(d.loc) : xAxisScale.current(d.commitNum))\n                .attr(\"class\", d => type + \"_rect_\" + processKey(d[type]))\n\n            texts.current.data(arrayData)\n                .join()\n                .transition().duration(800)\n                .attr(\"class\", d => type + \"_text \" + type + \"_text_\" + processKey(d[type]))\n                .style(\"opacity\", d => {\n                    if (d.inIntersection) return interChecked.current ? 1 : 0;\n                    else return checked.current ? 1 : 0;\n                })\n                .text(d => d[type]);\n        }\n\n        // End of BARGRAPH Generator / updater\n\n        let labelYMargin = 15;\n\n        // Author\n\n        let authorX = (width / 2) * 0.04;\n        let authorY = 160;\n\n        let authorSvg = mainSvg.append(\"g\");\n\n        mainSvg.append(\"text\")\n               .text(\"Authors\")\n               .attr(\"x\", authorX)\n               .attr(\"y\", authorY - labelYMargin)\n               .style(\"font-size\", \"20px\")\n               .style(\"font-weight\", 350);\n\n        authorSvg.append(\"g\")\n            .attr('transform', 'translate(' + authorX + ',' + authorY + ')')\n            .append(\"path\")\n            .attr(\"d\", \"M 0 0 L 0 \" + yAxisLength)\n            .style(\"stroke\", \"black\")\n\n        let authorAxis = authorSvg.append(\"g\")\n            .attr('transform', 'translate(' + authorX + ',' + (authorY + yAxisLength) + ')')\n            .call(d3.axisBottom(xAxisScale.current));\n\n        // appending legend\n\n        authorSvg.append(\"text\")\n                 .text(\"#0\")\n                 .attr(\"x\", 13)\n                 .attr(\"y\", authorY + 27)\n                 .style(\"font-weight\", 400);\n\n        authorSvg.append(\"text\")\n                 .text(\"#1\")\n                 .attr(\"x\", 13)\n                 .attr(\"y\", authorY + 62)\n                 .style(\"font-weight\", 400);\n\n        authorSvg.append(\"text\")\n                 .attr(\"class\", \"basicXLegend\")\n                 .text(\"CLOC\")\n                 .attr(\"x\", xAxisLength / 2 + 16)\n                 .attr(\"y\", authorY + yAxisLength + 35)\n                 .style(\"font-weight\", 400);\n\n        /* ========= INIT AUTHOR - A START ========== */\n        // preparing main svg\n        let aAuthorSvg = authorSvg.append(\"g\")\n            .attr('transform', 'translate(' + authorX + ',' + (authorY + yAxisMargin) + ')');\n        // preparing data\n        aAuthorArrayData.sort(sortByLoc);\n\n        //variables \n        initBarGraphElement(\"author\", aAuthorSvg, aAuthorSvgMolds, aAuthorArrayDataLoc, aAuthorRects, aAuthorTexts, color.a, aChecked);\n        /* ========== INIT AUTHOR - A END =========== */\n\n        /* ========= INIT AUTHOR - B START ========== */\n        // preparing main svg\n        let bAuthorSvg = authorSvg.append(\"g\")\n            .attr('transform', 'translate(' + authorX + ',' + (authorY + yAxisMargin * 2 + rectHeight) + ')');\n        // preparing data\n        bAuthorArrayData.sort(sortByLoc);\n\n        //variables \n        initBarGraphElement(\"author\", bAuthorSvg, bAuthorSvgMolds, bAuthorArrayDataLoc, bAuthorRects, bAuthorTexts, color.b, bChecked);\n        /* ========== INIT AUTHOR - B END =========== */\n\n        updateAuthorSvg = function () {\n            authorAxis.call(d3.axisBottom(xAxisScale.current));\n            let aArrayData = isLoc.current ? aAuthorArrayDataLoc : aAuthorArrayDataCommit;\n            let bArrayData = isLoc.current ? bAuthorArrayDataLoc : bAuthorArrayDataCommit;\n            updateBarGraphElement(\"author\", aArrayData, aAuthorSvgMolds, aAuthorRects, aAuthorTexts, color.a, aChecked)\n            updateBarGraphElement(\"author\", bArrayData, bAuthorSvgMolds, bAuthorRects, bAuthorTexts, color.b, bChecked)\n        }\n\n        // End of Author\n\n        // CommitTypes\n\n        let commitTypeX = authorX;\n        let commitTypeY = authorY * 2 - 8;\n\n        let commitTypeSvg = mainSvg.append(\"g\");\n\n        mainSvg.append(\"text\")\n               .text(\"Commit Type\")\n               .attr(\"x\", commitTypeX)\n               .attr(\"y\", commitTypeY - labelYMargin)\n               .style(\"font-size\", \"20px\")\n               .style(\"font-weight\", 350);\n\n\n        commitTypeSvg.append(\"g\")\n            .attr('transform', 'translate(' + commitTypeX + ',' + commitTypeY + ')')\n            .append(\"path\")\n            .attr(\"d\", \"M 0 0 L 0 \" + yAxisLength)\n            .style(\"stroke\", \"black\")\n\n        let commitTypeAxis = commitTypeSvg.append(\"g\")\n            .attr('transform', 'translate(' + commitTypeX + ',' + (commitTypeY + yAxisLength) + ')')\n            .call(d3.axisBottom(xAxisScale.current));\n\n        commitTypeSvg.append(\"text\")\n                     .text(\"#0\")\n                     .attr(\"x\", commitTypeX - 20)\n                     .attr(\"y\", commitTypeY + 27)\n                     .style(\"font-weight\", 400);\n\n        commitTypeSvg.append(\"text\")\n                     .text(\"#1\")\n                     .attr(\"x\", commitTypeX - 20)\n                     .attr(\"y\", commitTypeY + 62)\n                     .style(\"font-weight\", 400);\n\n\n        commitTypeSvg.append(\"text\")\n                     .attr(\"class\", \"basicXLegend\")\n                     .text(\"CLOC\")\n                     .attr(\"x\", commitTypeX + xAxisLength / 2 - 14)\n                     .attr(\"y\", commitTypeY + yAxisLength + 35)\n                     .style(\"font-weight\", 400);\n\n\n        /* ========= INIT CommitType - A START ========== */\n        // preparing main svg\n        let aCommitTypeSvg = commitTypeSvg.append(\"g\")\n            .attr('transform', 'translate(' + commitTypeX + ',' + (commitTypeY + yAxisMargin) + ')');\n        // preparing data\n        aCommitTypeArrayData.sort(sortByLoc);\n\n        //variables \n        initBarGraphElement(\"commitType\", aCommitTypeSvg, aCommitTypeSvgMolds, aCommitTypeArrayDataLoc, aCommitTypeRects, aCommitTypeTexts, color.a, aChecked);\n        /* ========== INIT CommitType - A END =========== */\n\n        /* ========= INIT CommitType - B START ========== */\n        // preparing main svg\n        let bCommitTypeSvg = commitTypeSvg.append(\"g\")\n            .attr('transform', 'translate(' + commitTypeX + ',' + (commitTypeY + yAxisMargin * 2 + rectHeight) + ')');\n        // preparing data\n        bCommitTypeArrayData.sort(sortByLoc);\n\n        //variables \n        initBarGraphElement(\"commitType\", bCommitTypeSvg, bCommitTypeSvgMolds, bCommitTypeArrayDataLoc, bCommitTypeRects, bCommitTypeTexts, color.b, bChecked);\n        /* ========== INIT CommitType - B END =========== */\n\n        updateCommitTypeSvg = function () {\n            commitTypeAxis.call(d3.axisBottom(xAxisScale.current));\n            let aArrayData = isLoc.current ? aCommitTypeArrayDataLoc : aCommitTypeArrayDataCommit;\n            let bArrayData = isLoc.current ? bCommitTypeArrayDataLoc : bCommitTypeArrayDataCommit;\n            updateBarGraphElement(\"commitType\", aArrayData, aCommitTypeSvgMolds, aCommitTypeRects, aCommitTypeTexts, color.a, aChecked)\n            updateBarGraphElement(\"commitType\", bArrayData, bCommitTypeSvgMolds, bCommitTypeRects, bCommitTypeTexts, color.b, bChecked)\n        }\n        // End of commitTypes\n\n        // Keywords\n\n        let keywordsX = authorX;\n        let keywordsY = authorY * 4 + 195;\n        let keywordsWidth = width * 0.5 * 0.92;\n        let keywordsHeight = 270;\n\n        let keywordsSvg = mainSvg.append(\"g\")\n            .attr('transform', 'translate(' + keywordsX + ',' + keywordsY + ')');\n\n     \n\n       \n        mainSvg.append(\"text\")\n               .text(\"Keywords\")\n               .attr(\"x\", keywordsX)\n               .attr(\"y\", keywordsY - labelYMargin)\n               .style(\"font-size\", \"20px\")\n               .style(\"font-weight\", 350);\n\n        mainSvg.append(\"text\")\n               .text(\"(ranked by tf-idf score)\")\n               .attr(\"x\", keywordsX + 93)\n               .attr(\"y\", keywordsY - labelYMargin - 1)\n               .style(\"font-size\", \"13px\")\n               .style(\"font-weight\", 350);\n        \n        // Appending Axis\n\n        let keywordsAxisScale = d3.scaleLinear()\n            .domain([0, 1])\n            .range([0, keywordsWidth / 2 - 25]);\n     \n        KeywordCloud.generate(aList, bList, interList, \"keywordsCanvas_1\", \"keywordsCanvas_2\", 3, 0.5, 3, 10);\n        \n        let graphMargin = 5;\n        let rectMargin = 5;\n        let rectSingleHeight = (keywordsHeight - 2 * graphMargin - (presentingKeywordNum.current - 1) * rectMargin) / 10;\n        let rectSingleY = rectSingleHeight + rectMargin;\n\n        function initSmallChart(key, graphX, yourKeywordsSvg, keywordsData, defaultColor, checked, componentSvg, type) {\n\n            yourKeywordsSvg.current = componentSvg.selectAll(\".\" + key)\n                .data(keywordsData)\n                .enter()\n                .append(\"svg\")\n                .attr(\"class\", key)\n                .attr(\"x\", 1 + graphX)\n                .attr(\"y\", (d, i) => ((i) * rectSingleY + graphMargin))\n                .on(\"mouseover\", function (d) {\n                    if (type === \"keyword\") {\n                        if (d.inIntersection ? interChecked.current : checked.current) {\n                            d3.selectAll(\".\" + type + \"_rect_\" + processKey(d.keyword)).style(\"opacity\", 1.0);\n                            d3.selectAll(\".\" + type + \"_text_\" + processKey(d.keyword)).style(\"font-weight\", \"bold\");\n\n                            d3.select(\".tooltipHover\")\n                              .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                              .style(\"top\", (d3.event.pageY) + \"px\")\n                              .style(\"opacity\", 0.8)\n                              .style(\"width\", \"80px\")\n                              .html(isLoc.current ? (d.loc*100).toFixed(2) + \" %\" : (100*d.commitNum).toFixed(2) + \" %\")\n                        }\n                        \n                    }\n                    else {\n                        if (isLoc.current) {\n                            if (d.loc.inIntersection ? interChecked.current : checked.current) {\n                                d3.selectAll(\".\" + type + \"_rect_\" + processKey(d.loc.keyword)).style(\"opacity\", 1.0);\n                                d3.selectAll(\".\" + type + \"_text_\" + processKey(d.loc.keyword)).style(\"font-weight\", \"bold\");\n                                fileFullnameView.text(d.loc.keyword);\n                                d3.select(\".tooltipHover\")\n                                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                                  .style(\"top\", (d3.event.pageY) + \"px\")\n                                  .style(\"opacity\", 0.8)\n                                  .style(\"width\", \"80px\")\n                                  .html(isLoc.current ? (d.loc.score*100).toFixed(2) + \" %\" : (100*d.num.score).toFixed(2) + \" %\")\n                            }\n                        }\n                        else {\n                            if (d.num.inIntersection ? interChecked.current : checked.current) {\n                                d3.selectAll(\".\" + type + \"_rect_\" + processKey(d.num.keyword)).style(\"opacity\", 1.0);\n                                d3.selectAll(\".\" + type + \"_text_\" + processKey(d.num.keyword)).style(\"font-weight\", \"bold\");\n                                fileFullnameView.text(d.num.keyword);\n                                d3.select(\".tooltipHover\")\n                                  .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                                  .style(\"top\", (d3.event.pageY) + \"px\")\n                                  .style(\"opacity\", 0.8)\n                                  .style(\"width\", \"80px\")\n                                  .html(isLoc.current ? (d.loc.score*100).toFixed(2) + \" %\" : (100*d.num.score).toFixed(2) + \" %\")\n                            }\n                        }\n                       \n                    }\n\n\n                })\n                .on(\"mouseout\", function (d) {\n                    if (type === \"keyword\") {\n                        if (d.inIntersection ? interChecked.current : checked.current) {\n                            d3.selectAll(\".\" + type + \"_rect_\" + processKey(d.keyword)).style(\"opacity\", 0.7);\n                            d3.selectAll(\".\" + type + \"_text_\" + processKey(d.keyword)).style(\"font-weight\", 300);\n                        }\n                    }\n                    else {\n                        let keyword = isLoc.current ? d.loc.keyword : d.num.keyword;\n                        if (isLoc.current) {\n                            if (d.loc.inIntersection ? interChecked.current : checked.current) {\n                                d3.selectAll(\".\" + type + \"_rect_\" + processKey(keyword)).style(\"opacity\", 0.7);\n                                d3.selectAll(\".\" + type + \"_text_\" + processKey(keyword)).style(\"font-weight\", 300);\n                            }\n                        }\n                        else {\n                            if (d.num.inIntersection ? interChecked.current : checked.current) {\n                                d3.selectAll(\".\" + type + \"_rect_\" + processKey(keyword)).style(\"opacity\", 0.7);\n                                d3.selectAll(\".\" + type + \"_text_\" + processKey(keyword)).style(\"font-weight\", 300);\n                            }\n                        }\n                        fileFullnameView.text(\"\");\n                    }\n                    d3.select(\".tooltipHover\").style(\"opacity\", 0);\n\n                })\n                .on(\"mousemove\", function(d) {\n                    d3.select(\".tooltipHover\")\n                      .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n                      .style(\"top\", (d3.event.pageY) + \"px\")\n                });\n\n            yourKeywordsSvg.current.append(\"rect\")\n                .attr(\"class\", d => type + \"_rect \" + type + \"_rect_\" + processKey(d.keyword))\n                .attr(\"width\", d => {\n                    if (type === \"keyword\")\n                        return keywordsAxisScale(d.loc);\n                    else\n                        return keywordsAxisScale(d.loc.score);\n                })\n                .attr(\"height\", rectSingleHeight)\n                .style(\"fill\", d => {\n                    if (type === \"keyword\")\n                        return d.inIntersection ? color.inter : defaultColor\n                    else\n                        return d.loc.inIntersection ? color.inter : defaultColor\n                })\n                .style(\"stroke-width\", 0)\n                .style(\"opacity\", 0.7)\n                .attr(\"rx\", 2).attr(\"ry\", 2);\n\n            yourKeywordsSvg.current.append(\"text\")\n                .attr(\"class\", d => type + \"_text \" + type + \"_text_\" + processKey(d.keyword))\n                .text(d => {\n                    if (type === \"keyword\")\n                        return d.keyword;\n                    else {\n                        if(showFileFullPath.current)\n                            return GitAnalyzer.reduceLongName(d.keyword, 60);\n                        else {\n                            let split = d.keyword.split(\"/\");\n                            return split[split.length - 1];\n                        }\n                    }\n                })\n                .attr(\"x\", 3)\n                .attr(\"y\", 14);\n        }\n\n        function updateSmallChart(yourKeywordsSvg, checked, type, defaultColor) {\n            yourKeywordsSvg.current.selectAll(\"rect\")\n                .attr(\"class\", d => {\n                    if (type === \"keyword\") {\n                        return type + \"_rect \" + type + \"_rect_\" + processKey(d.keyword);\n                    }\n                    else {\n                        let keyword = isLoc.current ? d.loc.keyword : d.num.keyword;\n                        return type + \"_rect \" + type + \"_rect_\" + processKey(keyword)\n                    }\n                })\n                .transition()\n                .duration(800)\n                .style(\"opacity\", function (d) {\n                    if (type === \"keyword\") {\n                        if (d.inIntersection) return interChecked.current ? 0.7 : 0.3;\n                        else return checked.current ? 0.7 : 0.3;\n                    }\n                    else {\n                        if (isLoc.current ? d.loc.inIntersection : d.num.inIntersection) return interChecked.current ? 0.7 : 0.3;\n                        else return checked.current ? 0.7 : 0.3;\n                    }\n                })\n                .attr(\"width\", function (d) {\n                    if (type === \"keyword\") return isLoc.current ? keywordsAxisScale(d.loc) : keywordsAxisScale(d.commitNum);\n                    else return isLoc.current ? keywordsAxisScale(d.loc.score) : keywordsAxisScale(d.num.score);\n                })\n                .style(\"fill\", d => {\n                    if (type === \"keyword\")\n                        return d.inIntersection ? color.inter : defaultColor\n                    else {\n                        if (isLoc.current) return d.loc.inIntersection ? color.inter : defaultColor;\n                        else return d.num.inIntersection ? color.inter : defaultColor;\n                    }\n\n                })\n            yourKeywordsSvg.current.selectAll(\"text\")\n                .attr(\"class\", d => {\n                    if (type === \"keyword\") {\n                        return type + \"_text \" + type + \"_text_\" + processKey(d.keyword);\n                    }\n                    else {\n                        let keyword = isLoc.current ? d.loc.keyword : d.num.keyword;\n                        return type + \"_text \" + type + \"_text_\" + processKey(keyword)\n                    }\n                })\n                .transition()\n                .duration(800)\n                .style(\"opacity\", function (d) {\n                    if (type === \"keyword\") {\n                        if (d.inIntersection) return interChecked.current ? 1 : 0;\n                        else return checked.current ? 1 : 0;\n                    }\n                    else {\n                        if (isLoc.current ? d.loc.inIntersection : d.num.inIntersection) return interChecked.current ? 1 : 0;\n                        else return checked.current ? 1 : 0;\n                    }\n                })\n                .text(d => {\n                    if (type === \"keyword\") {\n                        return d.keyword;\n                    }\n                    else {\n                        let split = isLoc.current ? d.loc.keyword.split(\"/\") : d.num.keyword.split(\"/\")\n                        return split[split.length - 1];\n                    }\n                })\n        }\n\n        \n        \n\n        updateKeywordSvg = function () {\n            \n        }\n\n\n        // File structure\n\n        let fileX = authorX;\n        let fileY = authorY * 3 - 13;\n        let fileWidth = width * 0.5;\n        let fileHeight = keywordsHeight;\n\n        let fileSvg = mainSvg.append(\"g\")\n            .attr('transform', 'translate(' + fileX + ',' + fileY + ')');\n\n        mainSvg.append(\"text\")\n               .text(\"Files\")\n               .attr(\"x\", fileX)\n               .attr(\"y\", fileY - labelYMargin)\n               .style(\"font-size\", \"20px\")\n               .style(\"font-weight\", 350);\n\n        // Appending Axis\n\n        let fileAxisScale = d3.scaleLinear()\n            .domain([0, 1])\n            .range([0, fileWidth / 2 - 25]);\n        let fileAxis = d3.axisBottom(fileAxisScale).tickFormat(d3.format(\".0%\")).ticks(5);\n\n\n        fileSvg.append(\"g\")\n            .append(\"path\")\n            .attr(\"d\", \"M 0 0 L 0 \" + fileHeight)\n            .style(\"stroke\", \"black\");\n\n        fileSvg.append(\"g\")\n            .append(\"path\")\n            .attr(\"d\", \"M \" + (fileWidth / 2) + \" 0 L \" + (fileWidth / 2) + \" \" + fileHeight)\n            .style(\"stroke\", \"black\");\n\n        fileSvg.append(\"g\")\n            .attr('transform', 'translate(' + 0 + ',' + fileHeight + ')')\n            .call(fileAxis);\n\n        fileSvg.append(\"g\")\n            .attr('transform', 'translate(' + (fileWidth / 2) + ',' + fileHeight + ')')\n            .call(fileAxis);\n\n\n        // legends\n\n        fileSvg.append(\"text\")\n                    .attr(\"class\",\"ratioXLegend\")\n                    .text(\"CLOC / Total CLOC (%)\")\n                    .style(\"font-weight\", 400)\n                    .attr(\"x\", keywordsWidth / 4 - 66)\n                    .attr(\"y\", keywordsHeight + 35);\n\n        fileSvg.append(\"text\")\n                    .attr(\"class\",\"ratioXLegend\")\n                    .text(\"CLOC / Total CLOC (%)\")\n                    .style(\"font-weight\", 400)\n                    .attr(\"x\", keywordsWidth * 3 / 4 - 66)\n                    .attr(\"y\", keywordsHeight + 35);\n\n        let fileFullnameView = fileSvg.append(\"g\")\n            .attr('transform', 'translate(' + 1 + ',' + (fileHeight + 53) + ')')\n            .append(\"text\")\n            .style(\"font-weight\", \"bold\")\n            .text(\"\");\n\n        initSmallChart(\"a\", 0, aFileSvg, aFileArray, color.a, aChecked, fileSvg, \"file\");\n        initSmallChart(\"b\", (fileWidth / 2), bFileSvg, bFileArray, color.b, bChecked, fileSvg, \"file\");\n\n        updatefileSvg = function() {\n            if (isLoc.current) {\n                updateSmallChart(aFileSvg, aChecked, \"file\", color.a);\n                updateSmallChart(bFileSvg, bChecked, \"file\", color.b);\n            }\n            else {\n                updateSmallChart(aFileSvg, aChecked, \"file\", color.a);\n                updateSmallChart(bFileSvg, bChecked, \"file\", color.b);\n            }\n        }\n\n        updateLegends = function () {\n\n            console.log(\"UPDATESS!!\")\n            d3.selectAll(\".basicXLegend\")\n              .text(() => {\n                  if(isLoc.current) return \"CLOC\";\n                  else return \"Commit #\"\n              })\n            d3.selectAll(\".ratioXLegend\")\n              .text(() => {\n                  if(isLoc.current) return \"CLOC / Total CLOC (%)\"\n                  else return \"Commit # / Total Commit # (%)\"\n              })\n        }\n\n         // Hovering\n\n        let tooltip = d3.selectAll(\"#mainCompareDiv\")\n                        .append(\"div\")\n                        .attr(\"class\", \"tooltipHover\")\n                        .style(\"opacity\", 0);\n\n        tooltip.style(\"position\", \"absolute\")\n               .style(\"text-align\", \"center\")\n               .style(\"width\", \"120px\")\n               .style(\"height\", \"24px\")\n               .style(\"padding\", \"2px\")\n               .style(\"background\", \"#6ec2de\")\n               .style(\"border\", \"0px\")\n               .style(\"border-radius\", \"8px\")\n               .style(\"pointer-events\", \"none\");\n\n    \n    }, [props.capturedSummaryInfoListForCompare]);\n\n\n    return (\n        <div id =\"mainCompareDiv\">\n            <div id=\"title-panel\" style={{width:800}}>\n                <div id=\"repository-name\">\n                    COMPARE: \n                    <span style={{color: color.a}}>#{aCapturedSummaryInfo.id} ({aName})</span> vs <span style={{color: color.b}}>#{bCapturedSummaryInfo.id} ({bName})</span>\n                </div>\n                {/* <div id=\"legend-container\">\n                    {[ \"authors\", \"keywords\", \"commitTypes\", \"clocByFiles\", \"clocByDirs\" ].map((d, i) => {\n                    let color = AttributeColors [ DataTypeByNameMap[d] ][ 3 ];\n                    return (\n                        <div key={i} className=\"legend-element\" style={{\n                            background: color,\n                        }}>\n\n                            <Icon>{AttributeIconSpecs[ d ]}</Icon>\n                            <span>{d.split(\"clocBy\").slice(-1)[ 0 ]}</span>\n\n                        </div>\n                        );\n                    })}\n                </div> */}\n            </div>\n            \n            <div id=\"radioButtons\" style={{position: \"relative\", left: \"160px\", top: \"37px\", width: \"800px\"}}>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" defaultValue={\"CLOC\"} onChange={\n                    function(event) {\n                        if(event.target.value == \"CLOC\") {\n                            isLoc.current = true;\n                            updateXAxis();\n                            updateAuthorSvg();\n                            updateCommitTypeSvg();\n                            updateKeywordSvg();\n                            updatefileSvg();\n                            updateLegends();\n                        }\n                        else {\n                            isLoc.current = false;\n                            updateXAxis();\n                            updateAuthorSvg();\n                            updateCommitTypeSvg();\n                            updateKeywordSvg();\n                            updatefileSvg();\n                            updateLegends();\n                        }\n                    }\n                }>\n                    <div>\n                        <Radio\n                            style={{width:\"25px\", height:\"25px\", padding:0, margin: 0}}\n                            color=\"primary\"\n                            value=\"CLOC\"\n                            icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                            checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                            label=\"CLOC\"\n                        />\n                        CLOC\n                    </div>\n                    <div>\n                        <Radio\n                            style={{width:\"25px\", height:\"25px\", padding:0, margin: 0}}\n                            color=\"primary\"\n                            value=\"Commit #\"\n                            icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                            checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                            label=\"Commit #\"\n                        />\n                        Commit #\n                    </div>\n                </RadioGroup>\n            </div>\n            \n            \n            {/* <div style={{width:width, height:\"50px\"}} /> */}\n            <div style={{ fontSize: \"12px\", left: \"70px\", top: \"375px\", position: \"relative\", width: \"400px\", margin: \"0px\"}} >\n                <Checkbox\n                    className={\"showFileFullPath\"}\n                    size=\"small\"\n                    color=\"default\"\n                    defaultChecked={false}\n                    onChange={()=> {\n                        showFileFullPath.current = !showFileFullPath.current;\n                        if(showFileFullPath.current) {\n                            console.log(\"TRUE\")\n                            console.log(d3.selectAll(\".file_text\"))\n                            d3.selectAll(\".file_text\")\n                              .text(d => {\n                                  return GitAnalyzer.reduceLongName(d.keyword, 60);\n                              });\n                        }\n                        else {\n                            console.log(\"FALSE\")\n                            d3.selectAll(\".file_text\")\n                              .text(d => {\n                                let split = d.keyword.split(\"/\");\n                                return split[split.length - 1];\n                              })\n                        }\n                    }}\n                />\n                Show file path\n            </div>\n            <div style={{position: \"relative\", top: \"-90px\", left: \"-10px\"}}>\n                <svg id=\"compareClusters\" width={width} height={2000}></svg>\n            </div>\n            <div id=\"keywordsCanvas_1\" style={{ width: \"400px\", height: \"200px\", position: \"absolute\", left: \"1960px\", top: \"865px\" }}></div>\n            <div id=\"keywordsCanvas_2\" style={{ width: \"400px\", height: \"200px\", position: \"absolute\", left: \"2360px\", top: \"865px\" }}></div>\n        </div>\n    )\n}\n\nexport default DetailCompare;","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport DetailCompare from './DetailCompare';\n\nconst CompareSummary = (props) => {\n    const { capturedSummaryInfoListForCompare, gitAnalyzer } = props;\n    const { inspectionPaneWidth } = useSelector(state => state.layout);\n\n    if (capturedSummaryInfoListForCompare === undefined) return (<div></div>);\n// console.log(\"capturedSummaryInfoListForCompare\", capturedSummaryInfoListForCompare);\n    return (\n        <div\n          id=\"compareSummaryDiv\"\n          style={{\n            // visibility:\"hidden\",\n            // width:clusterOverviewWidth + \"px\"\n            width: \"1676px\",\n          }}\n          className=\"flexVerticalPane\"\n        >\n            {/* <div id=\"branchSummaryCompare\">\n                {capturedSummaryInfoListForCompare.map( (capturedSummaryInfo) => (\n                    <div\n                        key = {capturedSummaryInfo.id}\n                    >\n                        {capturedSummaryInfo.id}\n                    </div>\n                ))}\n            </div> */}\n            <div id=\"detailCompare\">\n                <DetailCompare\n                    // gitAnalyzer={gitAnalyzer}\n                    capturedSummaryInfoListForCompare={capturedSummaryInfoListForCompare}\n                    width={inspectionPaneWidth}\n                    corpusData={gitAnalyzer.corpusData}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default CompareSummary","import React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport * as actions from '../modules';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Form from 'react-bootstrap/Form';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',    \n        flexDirection: 'column',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n    textArea: {\n        marginBottom: \"8px\",\n        minHeight: \"50px\",\n        fontSize: \"12px\",\n    }\n}));\n\nconst HighlightQuery = (props) => {\n    const classes = useStyles();\n    const [ query, setQuery ] = useState(\"\");\n    const dispatch = useDispatch();\n\n    return (\n        <form className={classes.container} noValidate autoComplete=\"on\">\n            <Form.Control\n                    className={classes.textArea}\n                    rows={2}\n                    as=\"textarea\" \n                    placeholder=\"KEYWORD FOR HIGHLIGHT (including tag, branch: ex. pr/123)\"\n                    onChange={(event) => {\n                        setQuery(event.target.value);\n                    }}\n                />\n\n                <Button style={{ \"fontSize\": \"11px\" }} variant=\"outlined\" size=\"small\"\n                    onClick={() => {\n                        let qList = [];\n                        qList = query.split(\"\\n\").map(d => d.trim()).filter(d => d !== \"\");\n                        dispatch(actions.updateHighlightQuery(qList));\n                    }}>\n                    HIGHLIGHT COMMITS\n                </Button>\n        </form>\n    );\n}\n\nexport default HighlightQuery;","import React, { useRef } from 'react';\nimport TemporalFilter from './components/TemporalFilter';\nimport GitAnalyzer from './components/analyzer/GitAnalyzer';\nimport TemporalSelector from './components/TemporalSelector';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport CommitGraph from './components/CommitGraph';\n// import ClusterSummary from './components/ClusterSummary';\nimport { AttributeColors, BranchColors, changeRGBColorByOpacity } from './components/ColorClasses';\n\nimport './App.css';\nimport KeywordTextAreaFilter from './components/KeywordTextAreaFilter';\nimport PreferenceSliders from './components/PreferenceSliders';\nimport ManageParameters from './components/ManageParameters';\nimport InformationFragments from './components/InformationFragments';\nimport CaptureTab from './components/CaptureTab';\nimport Inspection from './components/Inspection';\nimport CompareSummary from './components/CompareSummary';\nimport HighlightQuery from './components/HighlightQuery';\nimport { SidePanelContentUnit } from './components/container/SidePanelContentUnit';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { AttributeIconSpecs } from './components/LegendIcons';\nimport { DataTypeByNameMap } from './components/analyzer/GithruClasses';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport * as actions from './modules';\n\n\nconst AppV2 = props => {\n  const defaultThresholdStep = 25;\n  const gitAnalyzerRef = useRef(undefined);\n  // const initRef = useRef(true);\n  // Importing json files\n  const repo = \"realm-java\";\n  const mainStemBranchName = undefined;\n\n  const releasePrefix = \"v\";\n  const data = require('./json/' + repo + '.commits.json');\n  const scoreData = require('./json/' + repo + '.score.json');\n  const corpusData = require('./json/' + repo + '.corpus.json');\n  const pullData = require('./json/' + repo + '.pulls.json');\n\n\n  const {\n    leftPaneWidth,\n    clusterOverviewWidth,\n    rightPaneWidth,\n    rightPaneMargin,\n    // selectedClusterDataForSummary,\n    temporalSelectorHeight,\n    clusterOverviewHeight,\n    orgClusterOverviewHeight,\n    capturedSummaryInfoListForCompare,\n    useHeuristicMerge,\n\n  } = useSelector(state => ({\n    leftPaneWidth: state.layout.leftPaneWidth,\n    clusterOverviewWidth: state.layout.clusterOverviewWidth,\n    rightPaneWidth: state.layout.rightPaneWidth,\n    rightPaneMargin: state.layout.rightPaneMargin,\n    // selectedClusterDataForSummary: state.selectedClusterDataForSummary,\n    temporalSelectorHeight: state.layout.temporalSelectorHeight,\n    clusterOverviewHeight: state.layout.clusterOverviewHeight,\n    orgClusterOverviewHeight: state.layout.orgClusterOverviewHeight,\n    capturedSummaryInfoListForCompare: state.capturedSummaryInfoListForCompare,\n    useHeuristicMerge: state.useHeuristicMerge,\n\n  }), shallowEqual);\n\n  const prevUseHeuristicMergeRef = useRef(undefined);\n  if (gitAnalyzerRef.current === undefined || prevUseHeuristicMergeRef.current !== useHeuristicMerge) {\n    gitAnalyzerRef.current = new GitAnalyzer(data, scoreData, corpusData, pullData,\n      defaultThresholdStep, repo, releasePrefix, mainStemBranchName);\n    // initRef.current = false;\n    prevUseHeuristicMergeRef.current = useHeuristicMerge;\n  }\n  const gitAnalyzer = gitAnalyzerRef.current;\n\n  return (\n    <div className=\"bodyDiv flexContainer\" id=\"app-screen-root\">\n      <div className=\"sidebar\" id=\"main-sidebar\">\n        <div className=\"flexVerticalContainer\">\n          <SidePanelContentUnit title=\"Global Temporal Filter\" show={true}>\n            <TemporalFilter\n              gitAnalyzer={gitAnalyzer}\n            />\n          </SidePanelContentUnit>\n\n          <SidePanelContentUnit title=\"Preferences Weights\" show={true}>\n            <PreferenceSliders />\n          </SidePanelContentUnit>\n\n          <SidePanelContentUnit title=\"Parameters\">\n            <ManageParameters />\n          </SidePanelContentUnit>\n\n          <SidePanelContentUnit title=\"Highlight\">\n            <HighlightQuery />\n          </SidePanelContentUnit>\n\n          <SidePanelContentUnit title=\"Keyword Filter\" show={true}>\n            <KeywordTextAreaFilter\n              gitAnalyzer={gitAnalyzer}\n            />            \n          </SidePanelContentUnit>\n          \n        </div>\n      </div>\n\n\n      <div className=\"flexVerticalContainer\" id=\"center-pane\">\n        <div id=\"title-panel\">\n          <div id=\"repository-name\">\n            GIThru: Contextual History of \"{repo}\" repository.\n          </div>\n          <div id=\"legend-container\">\n            ATTRS:\n            {[ \"authors\", \"keywords\", \"commitTypes\", \"clocByFiles\", \"clocByDirs\" ].map((d, i) => {\n            let color = AttributeColors[ DataTypeByNameMap[d] ][ 3 ];\n            return (\n              <div key={i} className=\"legend-element\" style={{\n                background: color,\n              }}>\n\n                <Icon>{AttributeIconSpecs[ d ]}</Icon>\n                <span>{d.split(\"clocBy\").slice(-1)[ 0 ]}</span>\n\n              </div>\n            );\n          })}\n            <div style={{ width: \"20px\" }} />\n            BRANCH:\n            {Object.entries(BranchColors).map((d, i) => {\n              let [ key, color ] = d;\n              color = changeRGBColorByOpacity(color, 0.7);\n\n              return (\n                <div key={i} className=\"legend-element\" style={{\n                  background: color,\n                }}>{key}</div>\n              );\n            })}\n          </div>\n        </div>\n        <div id=\"main-panel-content\">\n          <div id=\"overviewPane\">\n            <TemporalSelector\n              gitAnalyzer={gitAnalyzer}\n            // threshold={this.state.threshold}\n            // keywords={this.state.keywords}\n            />\n          </div>\n          <div id=\"clusterAndDetail\" className=\"flexContainer\">\n            <div id=\"clusterAndDetailPane\" className=\"flexVerticalContainer\">\n              <div id=\"clusterPane\">\n                <CommitGraph\n                  gitAnalyzer={gitAnalyzerRef.current}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        id=\"rightPane\"\n        style={{\n          width: rightPaneWidth + \"px\",\n        }}\n        className=\"flexVerticalContainer\"\n      >\n        <div\n          id=\"verticalTab\"\n          style={{\n            width: rightPaneWidth + \"px\",\n          }}\n        >\n          <CaptureTab\n            width={rightPaneWidth}\n            height={temporalSelectorHeight + orgClusterOverviewHeight}\n          />\n        </div>\n        <div style={{\"background-color\": \"#7a7c90\", height : \"439px\"}}>\n          {/*<div id=\"fragments\">\n            <InformationFragments\n              width={rightPaneWidth}\n            />\n        </div>*/}\n        </div>\n      </div>\n      <div>\n        <ScrollButton />\n      </div>\n      {/*<div\n        id=\"inspectionPane\"\n        style = {{\n          width: \"1676px\"\n        }}\n      >\n        <Inspection\n          gitAnalyzer={gitAnalyzer}\n        />\n      </div>*/}\n      <div\n        id=\"comparePane\"\n        style={{\n          width: \"1900px\",\n          display: \"none\",\n        }}\n      >\n        <CompareSummary\n          gitAnalyzer={gitAnalyzer}\n          capturedSummaryInfoListForCompare={capturedSummaryInfoListForCompare}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AppV2;\n\n\nconst ScrollButton = () => {\n  const { scrollToRight } = useSelector(state => state);\n  const dispatch = useDispatch();  \n  \n  return (\n    <div>\n      {scrollToRight &&\n        <Button onClick={() => {\n          dispatch(actions.updateScrollToRight(false));\n          window.scrollTo(0, 0);\n        }}>\n          <ArrowBackIcon fontSize=\"large\"/>\n        </Button>\n      }\n      {!scrollToRight &&\n        <Button onClick={() => {\n          dispatch(actions.updateScrollToRight(true));\n          window.scrollTo({top:0, left:4000});\n        }}>\n          <ArrowForwardIcon fontSize=\"large\" />\n        </Button>\n      }\n    </div>\n  );\n}","import React, { Component } from 'react';\n\n\nclass Home extends Component {\n    state = {\n        id: ''\n      }\n      appChange = (e) => {\n        this.setState({\n          id: e.target.value\n        });\n      }\n\n      appClick = () => {\n        window.open(window.location.href + \"v2/\" + this.state.id, \"_self\");\n      }\n      render() {\n        const { id } = this.state;\n        const { appChange, appClick } = this;\n        return (\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <input type=\"text\" placeholder=\"Repository name\" value={id} onChange={appChange} />\n              <button onClick={appClick}>Open!!</button>\n            </header>\n          </div>\n        );\n      }\n}\n\n\nexport default Home;","import React from 'react';\nimport v2 from './AppV2';\nimport Home from './Home';\nimport { Route, Switch } from 'react-router-dom';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <Switch>\n                <Route exact path={process.env.PUBLIC_URL + '/'} component = { v2 }/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n// import thunk from 'redux-thunk'\n\n// redux import\nimport { createStore } from 'redux';\nimport reducers from './modules';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducers\n        ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        // ,applyMiddleware(thunk));\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}